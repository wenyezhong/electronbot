ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	NMI_Handler:
  25              	.LFB43:
  26              		.file 1 "Src/stm32f0xx_it.c"
   1:Src/stm32f0xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f0xx_it.c **** /**
   3:Src/stm32f0xx_it.c ****   ******************************************************************************
   4:Src/stm32f0xx_it.c ****   * @file    stm32f0xx_it.c
   5:Src/stm32f0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f0xx_it.c ****   ******************************************************************************
   7:Src/stm32f0xx_it.c ****   * @attention
   8:Src/stm32f0xx_it.c ****   *
   9:Src/stm32f0xx_it.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Src/stm32f0xx_it.c ****   * All rights reserved.
  11:Src/stm32f0xx_it.c ****   *
  12:Src/stm32f0xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/stm32f0xx_it.c ****   * in the root directory of this software component.
  14:Src/stm32f0xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/stm32f0xx_it.c ****   *
  16:Src/stm32f0xx_it.c ****   ******************************************************************************
  17:Src/stm32f0xx_it.c ****   */
  18:Src/stm32f0xx_it.c **** /* USER CODE END Header */
  19:Src/stm32f0xx_it.c **** 
  20:Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Src/stm32f0xx_it.c **** #include "main.h"
  22:Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  23:Src/stm32f0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Src/stm32f0xx_it.c **** /* USER CODE BEGIN Includes */
  25:Src/stm32f0xx_it.c **** #include <stdio.h>
  26:Src/stm32f0xx_it.c **** #include "tim.h"
  27:Src/stm32f0xx_it.c **** #include "i2c.h"
  28:Src/stm32f0xx_it.c **** /* USER CODE END Includes */
  29:Src/stm32f0xx_it.c **** 
  30:Src/stm32f0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  31:Src/stm32f0xx_it.c **** /* USER CODE BEGIN TD */
  32:Src/stm32f0xx_it.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s 			page 2


  33:Src/stm32f0xx_it.c **** /* USER CODE END TD */
  34:Src/stm32f0xx_it.c **** 
  35:Src/stm32f0xx_it.c **** /* Private define ------------------------------------------------------------*/
  36:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PD */
  37:Src/stm32f0xx_it.c **** 
  38:Src/stm32f0xx_it.c **** /* USER CODE END PD */
  39:Src/stm32f0xx_it.c **** 
  40:Src/stm32f0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  41:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PM */
  42:Src/stm32f0xx_it.c **** 
  43:Src/stm32f0xx_it.c **** /* USER CODE END PM */
  44:Src/stm32f0xx_it.c **** 
  45:Src/stm32f0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  46:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PV */
  47:Src/stm32f0xx_it.c **** 
  48:Src/stm32f0xx_it.c **** /* USER CODE END PV */
  49:Src/stm32f0xx_it.c **** 
  50:Src/stm32f0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  51:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PFP */
  52:Src/stm32f0xx_it.c **** 
  53:Src/stm32f0xx_it.c **** /* USER CODE END PFP */
  54:Src/stm32f0xx_it.c **** 
  55:Src/stm32f0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  56:Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  57:Src/stm32f0xx_it.c **** 
  58:Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  59:Src/stm32f0xx_it.c **** 
  60:Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  61:Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_adc;
  62:Src/stm32f0xx_it.c **** extern I2C_HandleTypeDef hi2c1;
  63:Src/stm32f0xx_it.c **** extern TIM_HandleTypeDef htim14;
  64:Src/stm32f0xx_it.c **** /* USER CODE BEGIN EV */
  65:Src/stm32f0xx_it.c **** // extern void TIM14_PeriodElapsedCallback(void);
  66:Src/stm32f0xx_it.c **** // extern void I2C_SlaveDMARxCpltCallback();
  67:Src/stm32f0xx_it.c **** extern uint16_t adcData[4];
  68:Src/stm32f0xx_it.c **** /* USER CODE END EV */
  69:Src/stm32f0xx_it.c **** 
  70:Src/stm32f0xx_it.c **** /******************************************************************************/
  71:Src/stm32f0xx_it.c **** /*           Cortex-M0 Processor Interruption and Exception Handlers          */
  72:Src/stm32f0xx_it.c **** /******************************************************************************/
  73:Src/stm32f0xx_it.c **** /**
  74:Src/stm32f0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  75:Src/stm32f0xx_it.c ****   */
  76:Src/stm32f0xx_it.c **** void NMI_Handler(void)
  77:Src/stm32f0xx_it.c **** {
  27              		.loc 1 77 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  78:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  79:Src/stm32f0xx_it.c **** 
  80:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  81:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  82:Src/stm32f0xx_it.c ****   while (1)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s 			page 3


  34              		.loc 1 82 3 discriminator 1 view .LVU1
  83:Src/stm32f0xx_it.c ****   {
  84:Src/stm32f0xx_it.c ****   }
  35              		.loc 1 84 3 discriminator 1 view .LVU2
  82:Src/stm32f0xx_it.c ****   {
  36              		.loc 1 82 9 discriminator 1 view .LVU3
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE43:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.code	16
  46              		.thumb_func
  48              	HardFault_Handler:
  49              	.LFB44:
  85:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  86:Src/stm32f0xx_it.c **** }
  87:Src/stm32f0xx_it.c **** 
  88:Src/stm32f0xx_it.c **** /**
  89:Src/stm32f0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  90:Src/stm32f0xx_it.c ****   */
  91:Src/stm32f0xx_it.c **** void HardFault_Handler(void)
  92:Src/stm32f0xx_it.c **** {
  50              		.loc 1 92 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  93:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  94:Src/stm32f0xx_it.c **** 
  95:Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  96:Src/stm32f0xx_it.c ****   while (1)
  57              		.loc 1 96 3 discriminator 1 view .LVU5
  97:Src/stm32f0xx_it.c ****   {
  98:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  99:Src/stm32f0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 100:Src/stm32f0xx_it.c ****   }
  58              		.loc 1 100 3 discriminator 1 view .LVU6
  96:Src/stm32f0xx_it.c ****   {
  59              		.loc 1 96 9 discriminator 1 view .LVU7
  60 0000 FEE7     		b	.L4
  61              		.cfi_endproc
  62              	.LFE44:
  64              		.section	.text.SVC_Handler,"ax",%progbits
  65              		.align	1
  66              		.global	SVC_Handler
  67              		.syntax unified
  68              		.code	16
  69              		.thumb_func
  71              	SVC_Handler:
  72              	.LFB45:
 101:Src/stm32f0xx_it.c **** }
 102:Src/stm32f0xx_it.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s 			page 4


 103:Src/stm32f0xx_it.c **** /**
 104:Src/stm32f0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 105:Src/stm32f0xx_it.c ****   */
 106:Src/stm32f0xx_it.c **** void SVC_Handler(void)
 107:Src/stm32f0xx_it.c **** {
  73              		.loc 1 107 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
 108:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 109:Src/stm32f0xx_it.c **** 
 110:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 111:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 112:Src/stm32f0xx_it.c **** 
 113:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 114:Src/stm32f0xx_it.c **** }
  78              		.loc 1 114 1 view .LVU9
  79              		@ sp needed
  80 0000 7047     		bx	lr
  81              		.cfi_endproc
  82              	.LFE45:
  84              		.section	.text.PendSV_Handler,"ax",%progbits
  85              		.align	1
  86              		.global	PendSV_Handler
  87              		.syntax unified
  88              		.code	16
  89              		.thumb_func
  91              	PendSV_Handler:
  92              	.LFB46:
 115:Src/stm32f0xx_it.c **** 
 116:Src/stm32f0xx_it.c **** /**
 117:Src/stm32f0xx_it.c ****   * @brief This function handles Pendable request for system service.
 118:Src/stm32f0xx_it.c ****   */
 119:Src/stm32f0xx_it.c **** void PendSV_Handler(void)
 120:Src/stm32f0xx_it.c **** {
  93              		.loc 1 120 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
 121:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 122:Src/stm32f0xx_it.c **** 
 123:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 124:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 125:Src/stm32f0xx_it.c **** 
 126:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 127:Src/stm32f0xx_it.c **** }
  98              		.loc 1 127 1 view .LVU11
  99              		@ sp needed
 100 0000 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE46:
 104              		.section	.text.SysTick_Handler,"ax",%progbits
 105              		.align	1
 106              		.global	SysTick_Handler
 107              		.syntax unified
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s 			page 5


 108              		.code	16
 109              		.thumb_func
 111              	SysTick_Handler:
 112              	.LFB47:
 128:Src/stm32f0xx_it.c **** 
 129:Src/stm32f0xx_it.c **** /**
 130:Src/stm32f0xx_it.c ****   * @brief This function handles System tick timer.
 131:Src/stm32f0xx_it.c ****   */
 132:Src/stm32f0xx_it.c **** void SysTick_Handler(void)
 133:Src/stm32f0xx_it.c **** {
 113              		.loc 1 133 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117 0000 10B5     		push	{r4, lr}
 118              	.LCFI0:
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 4, -8
 121              		.cfi_offset 14, -4
 134:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 135:Src/stm32f0xx_it.c **** 
 136:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 137:Src/stm32f0xx_it.c ****   HAL_IncTick();
 122              		.loc 1 137 3 view .LVU13
 123 0002 FFF7FEFF 		bl	HAL_IncTick
 124              	.LVL0:
 138:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 139:Src/stm32f0xx_it.c **** 
 140:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 141:Src/stm32f0xx_it.c **** }
 125              		.loc 1 141 1 is_stmt 0 view .LVU14
 126              		@ sp needed
 127 0006 10BD     		pop	{r4, pc}
 128              		.cfi_endproc
 129              	.LFE47:
 131              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 132              		.align	1
 133              		.global	DMA1_Channel1_IRQHandler
 134              		.syntax unified
 135              		.code	16
 136              		.thumb_func
 138              	DMA1_Channel1_IRQHandler:
 139              	.LFB48:
 142:Src/stm32f0xx_it.c **** 
 143:Src/stm32f0xx_it.c **** /******************************************************************************/
 144:Src/stm32f0xx_it.c **** /* STM32F0xx Peripheral Interrupt Handlers                                    */
 145:Src/stm32f0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 146:Src/stm32f0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 147:Src/stm32f0xx_it.c **** /* please refer to the startup file (startup_stm32f0xx.s).                    */
 148:Src/stm32f0xx_it.c **** /******************************************************************************/
 149:Src/stm32f0xx_it.c **** 
 150:Src/stm32f0xx_it.c **** /**
 151:Src/stm32f0xx_it.c ****   * @brief This function handles DMA1 channel 1 interrupt.
 152:Src/stm32f0xx_it.c ****   */
 153:Src/stm32f0xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 154:Src/stm32f0xx_it.c **** {
 140              		.loc 1 154 1 is_stmt 1 view -0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s 			page 6


 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144 0000 10B5     		push	{r4, lr}
 145              	.LCFI1:
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 4, -8
 148              		.cfi_offset 14, -4
 155:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 156:Src/stm32f0xx_it.c ****     //LL_DMA_ClearFlag_TC1(DMA1);  
 157:Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 158:Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc);
 149              		.loc 1 158 3 view .LVU16
 150 0002 0248     		ldr	r0, .L9
 151 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 152              	.LVL1:
 159:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 160:Src/stm32f0xx_it.c ****   // LL_DMA_SetDataLength(DMA1,LL_DMA_CHANNEL_1,1);
 161:Src/stm32f0xx_it.c ****   //  printf("adc=%d\r\n",adcData[0]);
 162:Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 163:Src/stm32f0xx_it.c **** }
 153              		.loc 1 163 1 is_stmt 0 view .LVU17
 154              		@ sp needed
 155 0008 10BD     		pop	{r4, pc}
 156              	.L10:
 157 000a C046     		.align	2
 158              	.L9:
 159 000c 00000000 		.word	hdma_adc
 160              		.cfi_endproc
 161              	.LFE48:
 163              		.section	.text.TIM14_IRQHandler,"ax",%progbits
 164              		.align	1
 165              		.global	TIM14_IRQHandler
 166              		.syntax unified
 167              		.code	16
 168              		.thumb_func
 170              	TIM14_IRQHandler:
 171              	.LFB49:
 164:Src/stm32f0xx_it.c **** 
 165:Src/stm32f0xx_it.c **** /**
 166:Src/stm32f0xx_it.c ****   * @brief This function handles TIM14 global interrupt.
 167:Src/stm32f0xx_it.c ****   */
 168:Src/stm32f0xx_it.c **** void TIM14_IRQHandler(void)
 169:Src/stm32f0xx_it.c **** {
 172              		.loc 1 169 1 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176 0000 10B5     		push	{r4, lr}
 177              	.LCFI2:
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 4, -8
 180              		.cfi_offset 14, -4
 170:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM14_IRQn 0 */
 171:Src/stm32f0xx_it.c ****   //LL_TIM_ClearFlag_UPDATE(TIM14);
 172:Src/stm32f0xx_it.c ****   //TIM14_PeriodElapsedCallback();
 173:Src/stm32f0xx_it.c ****   
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s 			page 7


 174:Src/stm32f0xx_it.c ****   // printf("t\r\n");
 175:Src/stm32f0xx_it.c ****   /* USER CODE END TIM14_IRQn 0 */
 176:Src/stm32f0xx_it.c ****   HAL_TIM_IRQHandler(&htim14);
 181              		.loc 1 176 3 view .LVU19
 182 0002 0248     		ldr	r0, .L12
 183 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 184              	.LVL2:
 177:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM14_IRQn 1 */
 178:Src/stm32f0xx_it.c **** 
 179:Src/stm32f0xx_it.c ****   /* USER CODE END TIM14_IRQn 1 */
 180:Src/stm32f0xx_it.c **** }
 185              		.loc 1 180 1 is_stmt 0 view .LVU20
 186              		@ sp needed
 187 0008 10BD     		pop	{r4, pc}
 188              	.L13:
 189 000a C046     		.align	2
 190              	.L12:
 191 000c 00000000 		.word	htim14
 192              		.cfi_endproc
 193              	.LFE49:
 195              		.section	.text.I2C1_IRQHandler,"ax",%progbits
 196              		.align	1
 197              		.global	I2C1_IRQHandler
 198              		.syntax unified
 199              		.code	16
 200              		.thumb_func
 202              	I2C1_IRQHandler:
 203              	.LFB50:
 181:Src/stm32f0xx_it.c **** 
 182:Src/stm32f0xx_it.c **** /**
 183:Src/stm32f0xx_it.c ****   * @brief This function handles I2C1 event global interrupt / I2C1 wake-up interrupt through EXTI 
 184:Src/stm32f0xx_it.c ****   */
 185:Src/stm32f0xx_it.c **** void I2C1_IRQHandler(void)
 186:Src/stm32f0xx_it.c **** {
 204              		.loc 1 186 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208 0000 10B5     		push	{r4, lr}
 209              	.LCFI3:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 4, -8
 212              		.cfi_offset 14, -4
 187:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN I2C1_IRQn 0 */
 188:Src/stm32f0xx_it.c ****  // printf("---");
 189:Src/stm32f0xx_it.c **** 
 190:Src/stm32f0xx_it.c ****   /* USER CODE END I2C1_IRQn 0 */
 191:Src/stm32f0xx_it.c ****   if (hi2c1.Instance->ISR & (I2C_FLAG_BERR | I2C_FLAG_ARLO | I2C_FLAG_OVR)) {
 213              		.loc 1 191 3 view .LVU22
 214              		.loc 1 191 12 is_stmt 0 view .LVU23
 215 0002 074B     		ldr	r3, .L17
 216 0004 1B68     		ldr	r3, [r3]
 217              		.loc 1 191 21 view .LVU24
 218 0006 9A69     		ldr	r2, [r3, #24]
 219              		.loc 1 191 27 view .LVU25
 220 0008 E023     		movs	r3, #224
 221 000a DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s 			page 8


 222              		.loc 1 191 6 view .LVU26
 223 000c 1A42     		tst	r2, r3
 224 000e 03D0     		beq	.L15
 192:Src/stm32f0xx_it.c ****     HAL_I2C_ER_IRQHandler(&hi2c1);
 225              		.loc 1 192 5 is_stmt 1 view .LVU27
 226 0010 0348     		ldr	r0, .L17
 227 0012 FFF7FEFF 		bl	HAL_I2C_ER_IRQHandler
 228              	.LVL3:
 229              	.L14:
 193:Src/stm32f0xx_it.c ****   } else {
 194:Src/stm32f0xx_it.c ****     HAL_I2C_EV_IRQHandler(&hi2c1);
 195:Src/stm32f0xx_it.c ****   }
 196:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN I2C1_IRQn 1 */
 197:Src/stm32f0xx_it.c **** 
 198:Src/stm32f0xx_it.c ****   /* USER CODE END I2C1_IRQn 1 */
 199:Src/stm32f0xx_it.c **** }
 230              		.loc 1 199 1 is_stmt 0 view .LVU28
 231              		@ sp needed
 232 0016 10BD     		pop	{r4, pc}
 233              	.L15:
 194:Src/stm32f0xx_it.c ****   }
 234              		.loc 1 194 5 is_stmt 1 view .LVU29
 235 0018 0148     		ldr	r0, .L17
 236 001a FFF7FEFF 		bl	HAL_I2C_EV_IRQHandler
 237              	.LVL4:
 238              		.loc 1 199 1 is_stmt 0 view .LVU30
 239 001e FAE7     		b	.L14
 240              	.L18:
 241              		.align	2
 242              	.L17:
 243 0020 00000000 		.word	hi2c1
 244              		.cfi_endproc
 245              	.LFE50:
 247              		.text
 248              	.Letext0:
 249              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 250              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 251              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 252              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 253              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 254              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c.h"
 255              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 256              		.file 9 "Inc/tim.h"
 257              		.file 10 "Inc/i2c.h"
 258              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_it.c
C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s:18     .text.NMI_Handler:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s:24     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s:42     .text.HardFault_Handler:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s:48     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s:65     .text.SVC_Handler:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s:71     .text.SVC_Handler:00000000 SVC_Handler
C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s:85     .text.PendSV_Handler:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s:91     .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s:105    .text.SysTick_Handler:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s:111    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s:132    .text.DMA1_Channel1_IRQHandler:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s:138    .text.DMA1_Channel1_IRQHandler:00000000 DMA1_Channel1_IRQHandler
C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s:159    .text.DMA1_Channel1_IRQHandler:0000000c $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s:164    .text.TIM14_IRQHandler:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s:170    .text.TIM14_IRQHandler:00000000 TIM14_IRQHandler
C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s:191    .text.TIM14_IRQHandler:0000000c $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s:196    .text.I2C1_IRQHandler:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s:202    .text.I2C1_IRQHandler:00000000 I2C1_IRQHandler
C:\Users\ADMINI~1\AppData\Local\Temp\ccY8C2TB.s:243    .text.I2C1_IRQHandler:00000020 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_adc
HAL_TIM_IRQHandler
htim14
HAL_I2C_ER_IRQHandler
HAL_I2C_EV_IRQHandler
hi2c1
