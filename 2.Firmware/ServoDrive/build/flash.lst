ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"flash.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.flash_read,"ax",%progbits
  18              		.align	1
  19              		.global	flash_read
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	flash_read:
  25              	.LVL0:
  26              	.LFB40:
  27              		.file 1 "Src/flash.c"
   1:Src/flash.c   **** //https://github.com/GreatWall51/stm32f0_flash
   2:Src/flash.c   **** 
   3:Src/flash.c   **** #include "stm32f0xx_hal.h"
   4:Src/flash.c   **** #include "flash.h"
   5:Src/flash.c   **** 
   6:Src/flash.c   **** #define BUILD_UINT16(loByte, hiByte) \
   7:Src/flash.c   ****           ((uint16_t)(((loByte) & 0x00FF) + (((hiByte) & 0x00FF) << 8)))
   8:Src/flash.c   **** 
   9:Src/flash.c   **** #define BUILD_UINT32(Byte0, Byte1, Byte2, Byte3) \
  10:Src/flash.c   ****           ((uint32_t)((uint32_t)((Byte0) & 0x00FF) \
  11:Src/flash.c   ****           + ((uint32_t)((Byte1) & 0x00FF) << 8) \
  12:Src/flash.c   ****           + ((uint32_t)((Byte2) & 0x00FF) << 16) \
  13:Src/flash.c   ****           + ((uint32_t)((Byte3) & 0x00FF) << 24)))
  14:Src/flash.c   **** 
  15:Src/flash.c   **** 
  16:Src/flash.c   **** uint32_t flash_read(uint32_t address, uint8_t* pdata, uint32_t size)
  17:Src/flash.c   **** {
  28              		.loc 1 17 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 17 1 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 0300     		movs	r3, r0
  18:Src/flash.c   ****     uint32_t read_index = 0;
  39              		.loc 1 18 5 is_stmt 1 view .LVU2
  40              	.LVL1:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s 			page 2


  19:Src/flash.c   ****     uint8_t value;
  41              		.loc 1 19 5 view .LVU3
  20:Src/flash.c   ****     uint32_t start_addr;
  42              		.loc 1 20 5 view .LVU4
  21:Src/flash.c   ****     uint32_t end_addr;
  43              		.loc 1 21 5 view .LVU5
  22:Src/flash.c   **** 
  23:Src/flash.c   ****     if (!pdata || size < 1)
  44              		.loc 1 23 5 view .LVU6
  45              		.loc 1 23 8 is_stmt 0 view .LVU7
  46 0004 0029     		cmp	r1, #0
  47 0006 11D0     		beq	.L5
  48              		.loc 1 23 16 discriminator 1 view .LVU8
  49 0008 002A     		cmp	r2, #0
  50 000a 11D0     		beq	.L6
  24:Src/flash.c   ****     {
  25:Src/flash.c   ****         return 0;
  26:Src/flash.c   ****     }
  27:Src/flash.c   ****     start_addr = address;
  51              		.loc 1 27 5 is_stmt 1 view .LVU9
  52              	.LVL2:
  28:Src/flash.c   ****     end_addr = start_addr + size;
  53              		.loc 1 28 5 view .LVU10
  54              		.loc 1 28 14 is_stmt 0 view .LVU11
  55 000c 1418     		adds	r4, r2, r0
  56              	.LVL3:
  29:Src/flash.c   ****     if (start_addr < FLASH_USER_START_ADDR || end_addr > FLASH_USER_END_ADDR)
  57              		.loc 1 29 5 is_stmt 1 view .LVU12
  58              		.loc 1 29 8 is_stmt 0 view .LVU13
  59 000e 0B48     		ldr	r0, .L9
  60              	.LVL4:
  61              		.loc 1 29 8 view .LVU14
  62 0010 8342     		cmp	r3, r0
  63 0012 0FD9     		bls	.L7
  64              		.loc 1 29 44 discriminator 1 view .LVU15
  65 0014 0A48     		ldr	r0, .L9+4
  66 0016 8442     		cmp	r4, r0
  67 0018 0ED8     		bhi	.L8
  30:Src/flash.c   ****     {
  31:Src/flash.c   ****         return 0;
  32:Src/flash.c   ****     }
  33:Src/flash.c   **** 
  34:Src/flash.c   ****     read_index = 0;
  68              		.loc 1 34 16 view .LVU16
  69 001a 0020     		movs	r0, #0
  70 001c 03E0     		b	.L3
  71              	.LVL5:
  72              	.L4:
  35:Src/flash.c   ****     while (read_index < size)
  36:Src/flash.c   ****     {
  37:Src/flash.c   ****         value = *(__IO uint8_t*) start_addr;
  73              		.loc 1 37 9 is_stmt 1 view .LVU17
  74              		.loc 1 37 15 is_stmt 0 view .LVU18
  75 001e 1C78     		ldrb	r4, [r3]
  76              	.LVL6:
  38:Src/flash.c   ****         start_addr = start_addr + 1;
  77              		.loc 1 38 9 is_stmt 1 view .LVU19
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s 			page 3


  78              		.loc 1 38 20 is_stmt 0 view .LVU20
  79 0020 0133     		adds	r3, r3, #1
  80              	.LVL7:
  39:Src/flash.c   ****         *(pdata + read_index) = value;
  81              		.loc 1 39 9 is_stmt 1 view .LVU21
  82              		.loc 1 39 31 is_stmt 0 view .LVU22
  83 0022 0C54     		strb	r4, [r1, r0]
  40:Src/flash.c   ****         read_index++;
  84              		.loc 1 40 9 is_stmt 1 view .LVU23
  85              		.loc 1 40 19 is_stmt 0 view .LVU24
  86 0024 0130     		adds	r0, r0, #1
  87              	.LVL8:
  88              	.L3:
  35:Src/flash.c   ****     {
  89              		.loc 1 35 11 is_stmt 1 view .LVU25
  90 0026 9042     		cmp	r0, r2
  91 0028 F9D3     		bcc	.L4
  35:Src/flash.c   ****     {
  92              		.loc 1 35 11 is_stmt 0 view .LVU26
  93 002a 02E0     		b	.L1
  94              	.LVL9:
  95              	.L5:
  25:Src/flash.c   ****     }
  96              		.loc 1 25 16 view .LVU27
  97 002c 0020     		movs	r0, #0
  98              	.LVL10:
  25:Src/flash.c   ****     }
  99              		.loc 1 25 16 view .LVU28
 100 002e 00E0     		b	.L1
 101              	.LVL11:
 102              	.L6:
  25:Src/flash.c   ****     }
 103              		.loc 1 25 16 view .LVU29
 104 0030 1000     		movs	r0, r2
 105              	.LVL12:
 106              	.L1:
  41:Src/flash.c   ****     }
  42:Src/flash.c   ****     return read_index;
  43:Src/flash.c   **** }
 107              		.loc 1 43 1 view .LVU30
 108              		@ sp needed
 109 0032 10BD     		pop	{r4, pc}
 110              	.LVL13:
 111              	.L7:
  31:Src/flash.c   ****     }
 112              		.loc 1 31 16 view .LVU31
 113 0034 0020     		movs	r0, #0
 114 0036 FCE7     		b	.L1
 115              	.L8:
 116 0038 0020     		movs	r0, #0
 117 003a FAE7     		b	.L1
 118              	.L10:
 119              		.align	2
 120              	.L9:
 121 003c FF7E0008 		.word	134250239
 122 0040 FF7F0008 		.word	134250495
 123              		.cfi_endproc
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s 			page 4


 124              	.LFE40:
 126              		.section	.text.flash_write,"ax",%progbits
 127              		.align	1
 128              		.global	flash_write
 129              		.syntax unified
 130              		.code	16
 131              		.thumb_func
 133              	flash_write:
 134              	.LVL14:
 135              	.LFB41:
  44:Src/flash.c   **** 
  45:Src/flash.c   **** 
  46:Src/flash.c   **** FLASH_ERROR_CODE_E flash_write(uint32_t address, const uint8_t* pdata, uint32_t size)
  47:Src/flash.c   **** {
 136              		.loc 1 47 1 is_stmt 1 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		.loc 1 47 1 is_stmt 0 view .LVU33
 141 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 142              	.LCFI1:
 143              		.cfi_def_cfa_offset 24
 144              		.cfi_offset 3, -24
 145              		.cfi_offset 4, -20
 146              		.cfi_offset 5, -16
 147              		.cfi_offset 6, -12
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 CE46     		mov	lr, r9
 151 0004 4746     		mov	r7, r8
 152 0006 80B5     		push	{r7, lr}
 153              	.LCFI2:
 154              		.cfi_def_cfa_offset 32
 155              		.cfi_offset 8, -32
 156              		.cfi_offset 9, -28
 157 0008 0500     		movs	r5, r0
 158 000a 0C1E     		subs	r4, r1, #0
  48:Src/flash.c   ****     HAL_StatusTypeDef result = HAL_ERROR;
 159              		.loc 1 48 5 is_stmt 1 view .LVU34
 160              	.LVL15:
  49:Src/flash.c   **** 
  50:Src/flash.c   ****     uint32_t end_addr = 0;
 161              		.loc 1 50 5 view .LVU35
  51:Src/flash.c   ****     uint32_t start_addr;
 162              		.loc 1 51 5 view .LVU36
  52:Src/flash.c   ****     uint32_t word_num;
 163              		.loc 1 52 5 view .LVU37
  53:Src/flash.c   ****     uint8_t half_word_num;
 164              		.loc 1 53 5 view .LVU38
  54:Src/flash.c   ****     uint8_t byte_num;
 165              		.loc 1 54 5 view .LVU39
  55:Src/flash.c   ****     uint32_t write_index = 0;
 166              		.loc 1 55 5 view .LVU40
  56:Src/flash.c   **** 
  57:Src/flash.c   ****     if ((!pdata) || (size < 1))
 167              		.loc 1 57 5 view .LVU41
 168              		.loc 1 57 8 is_stmt 0 view .LVU42
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s 			page 5


 169 000c 52D0     		beq	.L19
 170              		.loc 1 57 18 discriminator 1 view .LVU43
 171 000e 002A     		cmp	r2, #0
 172 0010 52D0     		beq	.L20
  58:Src/flash.c   ****     {
  59:Src/flash.c   ****         return FLASH_PARAM_ERROR;
  60:Src/flash.c   ****     }
  61:Src/flash.c   ****     word_num = (size >> 2);
 173              		.loc 1 61 5 is_stmt 1 view .LVU44
 174              		.loc 1 61 14 is_stmt 0 view .LVU45
 175 0012 9708     		lsrs	r7, r2, #2
 176              	.LVL16:
  62:Src/flash.c   ****     half_word_num = (size % 4) >> 1;
 177              		.loc 1 62 5 is_stmt 1 view .LVU46
 178              		.loc 1 62 32 is_stmt 0 view .LVU47
 179 0014 5108     		lsrs	r1, r2, #1
 180              	.LVL17:
 181              		.loc 1 62 19 view .LVU48
 182 0016 0123     		movs	r3, #1
 183 0018 1940     		ands	r1, r3
 184 001a 8846     		mov	r8, r1
 185              	.LVL18:
  63:Src/flash.c   ****     byte_num = (size % 2);
 186              		.loc 1 63 5 is_stmt 1 view .LVU49
 187              		.loc 1 63 14 is_stmt 0 view .LVU50
 188 001c 1340     		ands	r3, r2
 189 001e 9946     		mov	r9, r3
 190              	.LVL19:
  64:Src/flash.c   ****     start_addr = address;
 191              		.loc 1 64 5 is_stmt 1 view .LVU51
  65:Src/flash.c   ****     end_addr = (start_addr + size);
 192              		.loc 1 65 5 view .LVU52
 193              		.loc 1 65 14 is_stmt 0 view .LVU53
 194 0020 1218     		adds	r2, r2, r0
 195              	.LVL20:
  66:Src/flash.c   ****     if (start_addr < FLASH_USER_START_ADDR || end_addr > FLASH_USER_END_ADDR)
 196              		.loc 1 66 5 is_stmt 1 view .LVU54
 197              		.loc 1 66 8 is_stmt 0 view .LVU55
 198 0022 2D4B     		ldr	r3, .L29
 199 0024 9842     		cmp	r0, r3
 200 0026 4CD9     		bls	.L21
 201              		.loc 1 66 44 discriminator 1 view .LVU56
 202 0028 2C4B     		ldr	r3, .L29+4
 203 002a 9A42     		cmp	r2, r3
 204 002c 4BD8     		bhi	.L22
  67:Src/flash.c   ****     {
  68:Src/flash.c   ****         return FLASH_ADDR_ERROR;
  69:Src/flash.c   ****     }
  70:Src/flash.c   ****     HAL_FLASH_Unlock();
 205              		.loc 1 70 5 is_stmt 1 view .LVU57
 206 002e FFF7FEFF 		bl	HAL_FLASH_Unlock
 207              	.LVL21:
  71:Src/flash.c   ****     write_index = 0;
 208              		.loc 1 71 5 view .LVU58
  72:Src/flash.c   ****     while (write_index < word_num)
 209              		.loc 1 72 5 view .LVU59
  71:Src/flash.c   ****     write_index = 0;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s 			page 6


 210              		.loc 1 71 17 is_stmt 0 view .LVU60
 211 0032 0026     		movs	r6, #0
 212              	.LVL22:
 213              	.L13:
 214              		.loc 1 72 11 is_stmt 1 view .LVU61
 215 0034 BE42     		cmp	r6, r7
 216 0036 14D2     		bcs	.L26
  73:Src/flash.c   ****     {
  74:Src/flash.c   ****         result = HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, start_addr,
 217              		.loc 1 74 9 view .LVU62
  75:Src/flash.c   ****                                    BUILD_UINT32 (*(pdata), *(pdata + 1), *(pdata + 2), *(pdata + 3)
 218              		.loc 1 75 36 is_stmt 0 view .LVU63
 219 0038 2278     		ldrb	r2, [r4]
 220 003a 6378     		ldrb	r3, [r4, #1]
 221 003c 1B02     		lsls	r3, r3, #8
 222 003e D218     		adds	r2, r2, r3
 223 0040 A378     		ldrb	r3, [r4, #2]
 224 0042 1B04     		lsls	r3, r3, #16
 225 0044 D218     		adds	r2, r2, r3
 226 0046 E378     		ldrb	r3, [r4, #3]
 227 0048 1B06     		lsls	r3, r3, #24
 228 004a D218     		adds	r2, r2, r3
  74:Src/flash.c   ****                                    BUILD_UINT32 (*(pdata), *(pdata + 1), *(pdata + 2), *(pdata + 3)
 229              		.loc 1 74 18 view .LVU64
 230 004c 0023     		movs	r3, #0
 231 004e 2900     		movs	r1, r5
 232 0050 0220     		movs	r0, #2
 233 0052 FFF7FEFF 		bl	HAL_FLASH_Program
 234              	.LVL23:
  76:Src/flash.c   ****         if (HAL_OK == result)
 235              		.loc 1 76 9 is_stmt 1 view .LVU65
 236              		.loc 1 76 12 is_stmt 0 view .LVU66
 237 0056 0028     		cmp	r0, #0
 238 0058 37D1     		bne	.L23
  77:Src/flash.c   ****         {
  78:Src/flash.c   ****             start_addr = start_addr + 4;
 239              		.loc 1 78 13 is_stmt 1 view .LVU67
 240              		.loc 1 78 24 is_stmt 0 view .LVU68
 241 005a 0435     		adds	r5, r5, #4
 242              	.LVL24:
  79:Src/flash.c   ****             pdata = pdata + 4;
 243              		.loc 1 79 13 is_stmt 1 view .LVU69
 244              		.loc 1 79 19 is_stmt 0 view .LVU70
 245 005c 0434     		adds	r4, r4, #4
 246              	.LVL25:
  80:Src/flash.c   ****             write_index++;
 247              		.loc 1 80 13 is_stmt 1 view .LVU71
 248              		.loc 1 80 24 is_stmt 0 view .LVU72
 249 005e 0136     		adds	r6, r6, #1
 250              	.LVL26:
 251              		.loc 1 80 24 view .LVU73
 252 0060 E8E7     		b	.L13
 253              	.LVL27:
 254              	.L26:
  81:Src/flash.c   ****         } else
  82:Src/flash.c   ****         {
  83:Src/flash.c   ****             return FLASH_WRITE_WORD_ERROR;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s 			page 7


  84:Src/flash.c   ****         }
  85:Src/flash.c   ****     }
  86:Src/flash.c   ****     write_index = 0;
 255              		.loc 1 86 17 view .LVU74
 256 0062 0026     		movs	r6, #0
 257              	.LVL28:
 258              	.L15:
  87:Src/flash.c   ****     while (write_index < half_word_num)
 259              		.loc 1 87 11 is_stmt 1 view .LVU75
 260 0064 B045     		cmp	r8, r6
 261 0066 0FD9     		bls	.L27
  88:Src/flash.c   ****     {
  89:Src/flash.c   ****         result = HAL_FLASH_Program(FLASH_TYPEPROGRAM_HALFWORD, start_addr,
 262              		.loc 1 89 9 view .LVU76
  90:Src/flash.c   ****                                    BUILD_UINT16 (*(pdata), *(pdata + 1)));
 263              		.loc 1 90 36 is_stmt 0 view .LVU77
 264 0068 2278     		ldrb	r2, [r4]
 265 006a 6378     		ldrb	r3, [r4, #1]
 266 006c 1B02     		lsls	r3, r3, #8
 267 006e D218     		adds	r2, r2, r3
 268 0070 92B2     		uxth	r2, r2
  89:Src/flash.c   ****                                    BUILD_UINT16 (*(pdata), *(pdata + 1)));
 269              		.loc 1 89 18 view .LVU78
 270 0072 0023     		movs	r3, #0
 271 0074 2900     		movs	r1, r5
 272 0076 0120     		movs	r0, #1
 273 0078 FFF7FEFF 		bl	HAL_FLASH_Program
 274              	.LVL29:
  91:Src/flash.c   ****         if (HAL_OK == result)
 275              		.loc 1 91 9 is_stmt 1 view .LVU79
 276              		.loc 1 91 12 is_stmt 0 view .LVU80
 277 007c 0028     		cmp	r0, #0
 278 007e 26D1     		bne	.L24
  92:Src/flash.c   ****         {
  93:Src/flash.c   ****             start_addr = start_addr + 2;
 279              		.loc 1 93 13 is_stmt 1 view .LVU81
 280              		.loc 1 93 24 is_stmt 0 view .LVU82
 281 0080 0235     		adds	r5, r5, #2
 282              	.LVL30:
  94:Src/flash.c   ****             pdata = pdata + 2;
 283              		.loc 1 94 13 is_stmt 1 view .LVU83
 284              		.loc 1 94 19 is_stmt 0 view .LVU84
 285 0082 0234     		adds	r4, r4, #2
 286              	.LVL31:
  95:Src/flash.c   ****             write_index++;
 287              		.loc 1 95 13 is_stmt 1 view .LVU85
 288              		.loc 1 95 24 is_stmt 0 view .LVU86
 289 0084 0136     		adds	r6, r6, #1
 290              	.LVL32:
 291              		.loc 1 95 24 view .LVU87
 292 0086 EDE7     		b	.L15
 293              	.LVL33:
 294              	.L27:
  96:Src/flash.c   ****         } else
  97:Src/flash.c   ****         {
  98:Src/flash.c   ****             return FLASH_WRITE_HALF_WORD_ERROR;
  99:Src/flash.c   ****         }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s 			page 8


 100:Src/flash.c   ****     }
 101:Src/flash.c   ****     write_index = 0;
 295              		.loc 1 101 17 view .LVU88
 296 0088 0026     		movs	r6, #0
 297              	.LVL34:
 298              	.L17:
 102:Src/flash.c   ****     while (write_index < byte_num)
 299              		.loc 1 102 11 is_stmt 1 view .LVU89
 300 008a B145     		cmp	r9, r6
 301 008c 0ED9     		bls	.L28
 103:Src/flash.c   ****     {
 104:Src/flash.c   ****         result = HAL_FLASH_Program(FLASH_TYPEPROGRAM_HALFWORD, start_addr, BUILD_UINT16 (*(pdata), 
 302              		.loc 1 104 9 view .LVU90
 303              		.loc 1 104 76 is_stmt 0 view .LVU91
 304 008e 2278     		ldrb	r2, [r4]
 305 0090 013A     		subs	r2, r2, #1
 306 0092 FF3A     		subs	r2, r2, #255
 307 0094 92B2     		uxth	r2, r2
 308              		.loc 1 104 18 view .LVU92
 309 0096 0023     		movs	r3, #0
 310 0098 2900     		movs	r1, r5
 311 009a 0120     		movs	r0, #1
 312 009c FFF7FEFF 		bl	HAL_FLASH_Program
 313              	.LVL35:
 105:Src/flash.c   ****         if (HAL_OK == result)
 314              		.loc 1 105 9 is_stmt 1 view .LVU93
 315              		.loc 1 105 12 is_stmt 0 view .LVU94
 316 00a0 0028     		cmp	r0, #0
 317 00a2 16D1     		bne	.L25
 106:Src/flash.c   ****         {
 107:Src/flash.c   ****             start_addr = start_addr + 2;
 318              		.loc 1 107 13 is_stmt 1 view .LVU95
 319              		.loc 1 107 24 is_stmt 0 view .LVU96
 320 00a4 0235     		adds	r5, r5, #2
 321              	.LVL36:
 108:Src/flash.c   ****             pdata = pdata + 2;
 322              		.loc 1 108 13 is_stmt 1 view .LVU97
 323              		.loc 1 108 19 is_stmt 0 view .LVU98
 324 00a6 0234     		adds	r4, r4, #2
 325              	.LVL37:
 109:Src/flash.c   ****             write_index++;
 326              		.loc 1 109 13 is_stmt 1 view .LVU99
 327              		.loc 1 109 24 is_stmt 0 view .LVU100
 328 00a8 0136     		adds	r6, r6, #1
 329              	.LVL38:
 330              		.loc 1 109 24 view .LVU101
 331 00aa EEE7     		b	.L17
 332              	.LVL39:
 333              	.L28:
 110:Src/flash.c   ****         } else
 111:Src/flash.c   ****         {
 112:Src/flash.c   ****             return FLASH_WRITE_BYTE_ERROR;
 113:Src/flash.c   ****         }
 114:Src/flash.c   ****     }
 115:Src/flash.c   ****     HAL_FLASH_Lock();
 334              		.loc 1 115 5 is_stmt 1 view .LVU102
 335 00ac FFF7FEFF 		bl	HAL_FLASH_Lock
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s 			page 9


 336              	.LVL40:
 116:Src/flash.c   ****     return FLASH_SUCCESS;
 337              		.loc 1 116 5 view .LVU103
 338              		.loc 1 116 12 is_stmt 0 view .LVU104
 339 00b0 0020     		movs	r0, #0
 340 00b2 02E0     		b	.L12
 341              	.LVL41:
 342              	.L19:
  59:Src/flash.c   ****     }
 343              		.loc 1 59 16 view .LVU105
 344 00b4 0120     		movs	r0, #1
 345              	.LVL42:
  59:Src/flash.c   ****     }
 346              		.loc 1 59 16 view .LVU106
 347 00b6 00E0     		b	.L12
 348              	.LVL43:
 349              	.L20:
  59:Src/flash.c   ****     }
 350              		.loc 1 59 16 view .LVU107
 351 00b8 0120     		movs	r0, #1
 352              	.LVL44:
 353              	.L12:
 117:Src/flash.c   **** }
 354              		.loc 1 117 1 view .LVU108
 355              		@ sp needed
 356              	.LVL45:
 357              		.loc 1 117 1 view .LVU109
 358 00ba C0BC     		pop	{r6, r7}
 359 00bc B946     		mov	r9, r7
 360 00be B046     		mov	r8, r6
 361 00c0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 362              	.LVL46:
 363              	.L21:
  68:Src/flash.c   ****     }
 364              		.loc 1 68 16 view .LVU110
 365 00c2 0220     		movs	r0, #2
 366              	.LVL47:
  68:Src/flash.c   ****     }
 367              		.loc 1 68 16 view .LVU111
 368 00c4 F9E7     		b	.L12
 369              	.LVL48:
 370              	.L22:
  68:Src/flash.c   ****     }
 371              		.loc 1 68 16 view .LVU112
 372 00c6 0220     		movs	r0, #2
 373              	.LVL49:
  68:Src/flash.c   ****     }
 374              		.loc 1 68 16 view .LVU113
 375 00c8 F7E7     		b	.L12
 376              	.LVL50:
 377              	.L23:
  83:Src/flash.c   ****         }
 378              		.loc 1 83 20 view .LVU114
 379 00ca 0320     		movs	r0, #3
 380              	.LVL51:
  83:Src/flash.c   ****         }
 381              		.loc 1 83 20 view .LVU115
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s 			page 10


 382 00cc F5E7     		b	.L12
 383              	.LVL52:
 384              	.L24:
  98:Src/flash.c   ****         }
 385              		.loc 1 98 20 view .LVU116
 386 00ce 0420     		movs	r0, #4
 387              	.LVL53:
  98:Src/flash.c   ****         }
 388              		.loc 1 98 20 view .LVU117
 389 00d0 F3E7     		b	.L12
 390              	.LVL54:
 391              	.L25:
 112:Src/flash.c   ****         }
 392              		.loc 1 112 20 view .LVU118
 393 00d2 0520     		movs	r0, #5
 394              	.LVL55:
 112:Src/flash.c   ****         }
 395              		.loc 1 112 20 view .LVU119
 396 00d4 F1E7     		b	.L12
 397              	.L30:
 398 00d6 C046     		.align	2
 399              	.L29:
 400 00d8 FF7E0008 		.word	134250239
 401 00dc FF7F0008 		.word	134250495
 402              		.cfi_endproc
 403              	.LFE41:
 405              		.section	.text.flash_erase,"ax",%progbits
 406              		.align	1
 407              		.global	flash_erase
 408              		.syntax unified
 409              		.code	16
 410              		.thumb_func
 412              	flash_erase:
 413              	.LVL56:
 414              	.LFB42:
 118:Src/flash.c   **** 
 119:Src/flash.c   **** 
 120:Src/flash.c   **** FLASH_ERROR_CODE_E flash_erase(uint32_t start_addr, uint32_t end_addr)
 121:Src/flash.c   **** {
 415              		.loc 1 121 1 is_stmt 1 view -0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 8
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419              		.loc 1 121 1 is_stmt 0 view .LVU121
 420 0000 30B5     		push	{r4, r5, lr}
 421              	.LCFI3:
 422              		.cfi_def_cfa_offset 12
 423              		.cfi_offset 4, -12
 424              		.cfi_offset 5, -8
 425              		.cfi_offset 14, -4
 426 0002 83B0     		sub	sp, sp, #12
 427              	.LCFI4:
 428              		.cfi_def_cfa_offset 24
 429 0004 0500     		movs	r5, r0
 430 0006 0C00     		movs	r4, r1
 122:Src/flash.c   ****     static FLASH_EraseInitTypeDef EraseInitStruct;
 431              		.loc 1 122 5 is_stmt 1 view .LVU122
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s 			page 11


 123:Src/flash.c   ****     uint32_t PageError = 0;
 432              		.loc 1 123 5 view .LVU123
 433              		.loc 1 123 14 is_stmt 0 view .LVU124
 434 0008 0023     		movs	r3, #0
 435 000a 0193     		str	r3, [sp, #4]
 124:Src/flash.c   **** 
 125:Src/flash.c   ****     if ((start_addr > end_addr) || (start_addr < FLASH_USER_START_ADDR) || (end_addr > FLASH_USER_E
 436              		.loc 1 125 5 is_stmt 1 view .LVU125
 437              		.loc 1 125 8 is_stmt 0 view .LVU126
 438 000c 8842     		cmp	r0, r1
 439 000e 1FD8     		bhi	.L34
 440              		.loc 1 125 33 discriminator 1 view .LVU127
 441 0010 124B     		ldr	r3, .L38
 442 0012 9842     		cmp	r0, r3
 443 0014 1ED9     		bls	.L35
 444              		.loc 1 125 73 discriminator 2 view .LVU128
 445 0016 124B     		ldr	r3, .L38+4
 446 0018 9942     		cmp	r1, r3
 447 001a 1DD8     		bhi	.L36
 126:Src/flash.c   ****     {
 127:Src/flash.c   ****         return FLASH_ADDR_ERROR;
 128:Src/flash.c   ****     }
 129:Src/flash.c   ****     HAL_FLASH_Unlock();
 448              		.loc 1 129 5 is_stmt 1 view .LVU129
 449 001c FFF7FEFF 		bl	HAL_FLASH_Unlock
 450              	.LVL57:
 130:Src/flash.c   **** 
 131:Src/flash.c   ****     EraseInitStruct.TypeErase = FLASH_TYPEERASE_PAGES;
 451              		.loc 1 131 5 view .LVU130
 452              		.loc 1 131 31 is_stmt 0 view .LVU131
 453 0020 1048     		ldr	r0, .L38+8
 454 0022 0023     		movs	r3, #0
 455 0024 0360     		str	r3, [r0]
 132:Src/flash.c   ****     EraseInitStruct.PageAddress = start_addr;
 456              		.loc 1 132 5 is_stmt 1 view .LVU132
 457              		.loc 1 132 33 is_stmt 0 view .LVU133
 458 0026 4560     		str	r5, [r0, #4]
 133:Src/flash.c   ****     EraseInitStruct.NbPages = (end_addr - start_addr + (FLASH_PAGE_SIZE - 1)) / FLASH_PAGE_SIZE;
 459              		.loc 1 133 5 is_stmt 1 view .LVU134
 460              		.loc 1 133 41 is_stmt 0 view .LVU135
 461 0028 641B     		subs	r4, r4, r5
 462              	.LVL58:
 463              		.loc 1 133 54 view .LVU136
 464 002a 0F4B     		ldr	r3, .L38+12
 465 002c 9C46     		mov	ip, r3
 466 002e 6444     		add	r4, r4, ip
 467              		.loc 1 133 79 view .LVU137
 468 0030 A40A     		lsrs	r4, r4, #10
 469              		.loc 1 133 29 view .LVU138
 470 0032 8460     		str	r4, [r0, #8]
 134:Src/flash.c   ****     if (HAL_FLASHEx_Erase(&EraseInitStruct, &PageError) != HAL_OK)
 471              		.loc 1 134 5 is_stmt 1 view .LVU139
 472              		.loc 1 134 9 is_stmt 0 view .LVU140
 473 0034 01A9     		add	r1, sp, #4
 474 0036 FFF7FEFF 		bl	HAL_FLASHEx_Erase
 475              	.LVL59:
 476 003a 041E     		subs	r4, r0, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s 			page 12


 477              		.loc 1 134 8 view .LVU141
 478 003c 04D1     		bne	.L37
 135:Src/flash.c   ****     {
 136:Src/flash.c   ****         HAL_FLASH_Lock();
 137:Src/flash.c   ****         return FLASH_ERASE_ERROR;
 138:Src/flash.c   ****     }
 139:Src/flash.c   ****     HAL_FLASH_Lock();
 479              		.loc 1 139 5 is_stmt 1 view .LVU142
 480 003e FFF7FEFF 		bl	HAL_FLASH_Lock
 481              	.LVL60:
 140:Src/flash.c   ****     return FLASH_SUCCESS;
 482              		.loc 1 140 5 view .LVU143
 483              	.L32:
 141:Src/flash.c   **** }
 484              		.loc 1 141 1 is_stmt 0 view .LVU144
 485 0042 2000     		movs	r0, r4
 486 0044 03B0     		add	sp, sp, #12
 487              		@ sp needed
 488              	.LVL61:
 489              		.loc 1 141 1 view .LVU145
 490 0046 30BD     		pop	{r4, r5, pc}
 491              	.LVL62:
 492              	.L37:
 136:Src/flash.c   ****         return FLASH_ERASE_ERROR;
 493              		.loc 1 136 9 is_stmt 1 view .LVU146
 494 0048 FFF7FEFF 		bl	HAL_FLASH_Lock
 495              	.LVL63:
 137:Src/flash.c   ****     }
 496              		.loc 1 137 9 view .LVU147
 137:Src/flash.c   ****     }
 497              		.loc 1 137 16 is_stmt 0 view .LVU148
 498 004c 0724     		movs	r4, #7
 499 004e F8E7     		b	.L32
 500              	.LVL64:
 501              	.L34:
 127:Src/flash.c   ****     }
 502              		.loc 1 127 16 view .LVU149
 503 0050 0224     		movs	r4, #2
 504 0052 F6E7     		b	.L32
 505              	.L35:
 127:Src/flash.c   ****     }
 506              		.loc 1 127 16 view .LVU150
 507 0054 0224     		movs	r4, #2
 508 0056 F4E7     		b	.L32
 509              	.L36:
 127:Src/flash.c   ****     }
 510              		.loc 1 127 16 view .LVU151
 511 0058 0224     		movs	r4, #2
 512 005a F2E7     		b	.L32
 513              	.L39:
 514              		.align	2
 515              	.L38:
 516 005c FF7E0008 		.word	134250239
 517 0060 FF7F0008 		.word	134250495
 518 0064 00000000 		.word	.LANCHOR0
 519 0068 FF030000 		.word	1023
 520              		.cfi_endproc
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s 			page 13


 521              	.LFE42:
 523              		.section	.text.flash_read_page,"ax",%progbits
 524              		.align	1
 525              		.global	flash_read_page
 526              		.syntax unified
 527              		.code	16
 528              		.thumb_func
 530              	flash_read_page:
 531              	.LVL65:
 532              	.LFB43:
 142:Src/flash.c   **** 
 143:Src/flash.c   **** 
 144:Src/flash.c   **** uint32_t flash_read_page(uint8_t page_no, uint32_t offect, uint8_t* pdata, uint32_t size)
 145:Src/flash.c   **** {
 533              		.loc 1 145 1 is_stmt 1 view -0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              		.loc 1 145 1 is_stmt 0 view .LVU153
 538 0000 10B5     		push	{r4, lr}
 539              	.LCFI5:
 540              		.cfi_def_cfa_offset 8
 541              		.cfi_offset 4, -8
 542              		.cfi_offset 14, -4
 543 0002 0C00     		movs	r4, r1
 544 0004 1100     		movs	r1, r2
 545              	.LVL66:
 546              		.loc 1 145 1 view .LVU154
 547 0006 1A00     		movs	r2, r3
 548              	.LVL67:
 146:Src/flash.c   ****     uint32_t result = 0;
 549              		.loc 1 146 5 is_stmt 1 view .LVU155
 147:Src/flash.c   ****     uint32_t addr;
 550              		.loc 1 147 5 view .LVU156
 148:Src/flash.c   **** 
 149:Src/flash.c   ****     addr = PAGE_TO_ADDR(page_no);
 551              		.loc 1 149 5 view .LVU157
 552              		.loc 1 149 12 is_stmt 0 view .LVU158
 553 0008 044B     		ldr	r3, .L41
 554              	.LVL68:
 555              		.loc 1 149 12 view .LVU159
 556 000a 9C46     		mov	ip, r3
 557 000c 6044     		add	r0, r0, ip
 558              	.LVL69:
 559              		.loc 1 149 12 view .LVU160
 560 000e 8002     		lsls	r0, r0, #10
 561              		.loc 1 149 10 view .LVU161
 562 0010 0138     		subs	r0, r0, #1
 563 0012 FF38     		subs	r0, r0, #255
 564              	.LVL70:
 150:Src/flash.c   ****     addr += offect;
 565              		.loc 1 150 5 is_stmt 1 view .LVU162
 566              		.loc 1 150 10 is_stmt 0 view .LVU163
 567 0014 0019     		adds	r0, r0, r4
 568              	.LVL71:
 151:Src/flash.c   ****     result = flash_read(addr, pdata, size);
 569              		.loc 1 151 5 is_stmt 1 view .LVU164
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s 			page 14


 570              		.loc 1 151 14 is_stmt 0 view .LVU165
 571 0016 FFF7FEFF 		bl	flash_read
 572              	.LVL72:
 152:Src/flash.c   ****     return result;
 573              		.loc 1 152 5 is_stmt 1 view .LVU166
 153:Src/flash.c   **** }
 574              		.loc 1 153 1 is_stmt 0 view .LVU167
 575              		@ sp needed
 576              	.LVL73:
 577              		.loc 1 153 1 view .LVU168
 578 001a 10BD     		pop	{r4, pc}
 579              	.L42:
 580              		.align	2
 581              	.L41:
 582 001c 20000200 		.word	131104
 583              		.cfi_endproc
 584              	.LFE43:
 586              		.section	.text.flash_write_page,"ax",%progbits
 587              		.align	1
 588              		.global	flash_write_page
 589              		.syntax unified
 590              		.code	16
 591              		.thumb_func
 593              	flash_write_page:
 594              	.LVL74:
 595              	.LFB44:
 154:Src/flash.c   **** 
 155:Src/flash.c   **** 
 156:Src/flash.c   **** uint32_t flash_write_page(uint8_t page_no, uint32_t offect, const uint8_t* pdata, uint32_t size)
 157:Src/flash.c   **** {
 596              		.loc 1 157 1 is_stmt 1 view -0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		.loc 1 157 1 is_stmt 0 view .LVU170
 601 0000 10B5     		push	{r4, lr}
 602              	.LCFI6:
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 4, -8
 605              		.cfi_offset 14, -4
 606 0002 0C00     		movs	r4, r1
 607 0004 1100     		movs	r1, r2
 608              	.LVL75:
 609              		.loc 1 157 1 view .LVU171
 610 0006 1A00     		movs	r2, r3
 611              	.LVL76:
 158:Src/flash.c   ****     uint32_t result = 0;
 612              		.loc 1 158 5 is_stmt 1 view .LVU172
 159:Src/flash.c   ****     uint32_t addr;
 613              		.loc 1 159 5 view .LVU173
 160:Src/flash.c   **** 
 161:Src/flash.c   ****     addr = PAGE_TO_ADDR(page_no);
 614              		.loc 1 161 5 view .LVU174
 615              		.loc 1 161 12 is_stmt 0 view .LVU175
 616 0008 044B     		ldr	r3, .L44
 617              	.LVL77:
 618              		.loc 1 161 12 view .LVU176
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s 			page 15


 619 000a 9C46     		mov	ip, r3
 620 000c 6044     		add	r0, r0, ip
 621              	.LVL78:
 622              		.loc 1 161 12 view .LVU177
 623 000e 8002     		lsls	r0, r0, #10
 624              		.loc 1 161 10 view .LVU178
 625 0010 0138     		subs	r0, r0, #1
 626 0012 FF38     		subs	r0, r0, #255
 627              	.LVL79:
 162:Src/flash.c   ****     addr += offect;
 628              		.loc 1 162 5 is_stmt 1 view .LVU179
 629              		.loc 1 162 10 is_stmt 0 view .LVU180
 630 0014 0019     		adds	r0, r0, r4
 631              	.LVL80:
 163:Src/flash.c   ****     result = flash_write(addr, pdata, size);
 632              		.loc 1 163 5 is_stmt 1 view .LVU181
 633              		.loc 1 163 14 is_stmt 0 view .LVU182
 634 0016 FFF7FEFF 		bl	flash_write
 635              	.LVL81:
 164:Src/flash.c   ****     return result;
 636              		.loc 1 164 5 is_stmt 1 view .LVU183
 165:Src/flash.c   **** }
 637              		.loc 1 165 1 is_stmt 0 view .LVU184
 638              		@ sp needed
 639              	.LVL82:
 640              		.loc 1 165 1 view .LVU185
 641 001a 10BD     		pop	{r4, pc}
 642              	.L45:
 643              		.align	2
 644              	.L44:
 645 001c 20000200 		.word	131104
 646              		.cfi_endproc
 647              	.LFE44:
 649              		.section	.text.flash_erase_page,"ax",%progbits
 650              		.align	1
 651              		.global	flash_erase_page
 652              		.syntax unified
 653              		.code	16
 654              		.thumb_func
 656              	flash_erase_page:
 657              	.LVL83:
 658              	.LFB45:
 166:Src/flash.c   **** 
 167:Src/flash.c   **** 
 168:Src/flash.c   **** FLASH_ERROR_CODE_E flash_erase_page(uint32_t start_page, uint16_t page_cnt)
 169:Src/flash.c   **** {
 659              		.loc 1 169 1 is_stmt 1 view -0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 8
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 663              		.loc 1 169 1 is_stmt 0 view .LVU187
 664 0000 70B5     		push	{r4, r5, r6, lr}
 665              	.LCFI7:
 666              		.cfi_def_cfa_offset 16
 667              		.cfi_offset 4, -16
 668              		.cfi_offset 5, -12
 669              		.cfi_offset 6, -8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s 			page 16


 670              		.cfi_offset 14, -4
 671 0002 82B0     		sub	sp, sp, #8
 672              	.LCFI8:
 673              		.cfi_def_cfa_offset 24
 674 0004 0400     		movs	r4, r0
 675 0006 0D00     		movs	r5, r1
 170:Src/flash.c   ****     static FLASH_EraseInitTypeDef EraseInitStruct;
 676              		.loc 1 170 5 is_stmt 1 view .LVU188
 171:Src/flash.c   ****     uint32_t PageError = 0;
 677              		.loc 1 171 5 view .LVU189
 678              		.loc 1 171 14 is_stmt 0 view .LVU190
 679 0008 0026     		movs	r6, #0
 680 000a 0196     		str	r6, [sp, #4]
 172:Src/flash.c   **** 
 173:Src/flash.c   ****     HAL_FLASH_Unlock();
 681              		.loc 1 173 5 is_stmt 1 view .LVU191
 682 000c FFF7FEFF 		bl	HAL_FLASH_Unlock
 683              	.LVL84:
 174:Src/flash.c   **** 
 175:Src/flash.c   ****     EraseInitStruct.TypeErase = FLASH_TYPEERASE_PAGES;
 684              		.loc 1 175 5 view .LVU192
 685              		.loc 1 175 31 is_stmt 0 view .LVU193
 686 0010 0B48     		ldr	r0, .L50
 687 0012 0660     		str	r6, [r0]
 176:Src/flash.c   ****     EraseInitStruct.PageAddress = PAGE_TO_ADDR(start_page);
 688              		.loc 1 176 5 is_stmt 1 view .LVU194
 689              		.loc 1 176 35 is_stmt 0 view .LVU195
 690 0014 0B4B     		ldr	r3, .L50+4
 691 0016 9C46     		mov	ip, r3
 692 0018 6444     		add	r4, r4, ip
 693              	.LVL85:
 694              		.loc 1 176 35 view .LVU196
 695 001a A402     		lsls	r4, r4, #10
 696              	.LVL86:
 697              		.loc 1 176 35 view .LVU197
 698 001c 013C     		subs	r4, r4, #1
 699 001e FF3C     		subs	r4, r4, #255
 700              		.loc 1 176 33 view .LVU198
 701 0020 4460     		str	r4, [r0, #4]
 177:Src/flash.c   ****     EraseInitStruct.NbPages = page_cnt;
 702              		.loc 1 177 5 is_stmt 1 view .LVU199
 703              		.loc 1 177 29 is_stmt 0 view .LVU200
 704 0022 8560     		str	r5, [r0, #8]
 178:Src/flash.c   **** 
 179:Src/flash.c   ****     if (HAL_FLASHEx_Erase(&EraseInitStruct, &PageError) != HAL_OK)
 705              		.loc 1 179 5 is_stmt 1 view .LVU201
 706              		.loc 1 179 9 is_stmt 0 view .LVU202
 707 0024 01A9     		add	r1, sp, #4
 708 0026 FFF7FEFF 		bl	HAL_FLASHEx_Erase
 709              	.LVL87:
 710 002a 041E     		subs	r4, r0, #0
 711              		.loc 1 179 8 view .LVU203
 712 002c 04D1     		bne	.L49
 180:Src/flash.c   ****     {
 181:Src/flash.c   ****         HAL_FLASH_Lock();
 182:Src/flash.c   ****         return FLASH_ERASE_ERROR;
 183:Src/flash.c   ****     }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s 			page 17


 184:Src/flash.c   **** 
 185:Src/flash.c   ****     HAL_FLASH_Lock();
 713              		.loc 1 185 5 is_stmt 1 view .LVU204
 714 002e FFF7FEFF 		bl	HAL_FLASH_Lock
 715              	.LVL88:
 186:Src/flash.c   **** 
 187:Src/flash.c   ****     return FLASH_SUCCESS;
 716              		.loc 1 187 5 view .LVU205
 717              	.L48:
 188:Src/flash.c   **** }
 718              		.loc 1 188 1 is_stmt 0 view .LVU206
 719 0032 2000     		movs	r0, r4
 720 0034 02B0     		add	sp, sp, #8
 721              		@ sp needed
 722 0036 70BD     		pop	{r4, r5, r6, pc}
 723              	.L49:
 181:Src/flash.c   ****         return FLASH_ERASE_ERROR;
 724              		.loc 1 181 9 is_stmt 1 view .LVU207
 725 0038 FFF7FEFF 		bl	HAL_FLASH_Lock
 726              	.LVL89:
 182:Src/flash.c   ****     }
 727              		.loc 1 182 9 view .LVU208
 182:Src/flash.c   ****     }
 728              		.loc 1 182 16 is_stmt 0 view .LVU209
 729 003c 0724     		movs	r4, #7
 730 003e F8E7     		b	.L48
 731              	.L51:
 732              		.align	2
 733              	.L50:
 734 0040 00000000 		.word	.LANCHOR1
 735 0044 20000200 		.word	131104
 736              		.cfi_endproc
 737              	.LFE45:
 739              		.section	.bss.EraseInitStruct.0,"aw",%nobits
 740              		.align	2
 741              		.set	.LANCHOR1,. + 0
 744              	EraseInitStruct.0:
 745 0000 00000000 		.space	12
 745      00000000 
 745      00000000 
 746              		.section	.bss.EraseInitStruct.1,"aw",%nobits
 747              		.align	2
 748              		.set	.LANCHOR0,. + 0
 751              	EraseInitStruct.1:
 752 0000 00000000 		.space	12
 752      00000000 
 752      00000000 
 753              		.text
 754              	.Letext0:
 755              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 756              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 757              		.file 4 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 758              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_flash_ex.h"
 759              		.file 6 "Inc/flash.h"
 760              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_flash.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 flash.c
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:18     .text.flash_read:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:24     .text.flash_read:00000000 flash_read
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:121    .text.flash_read:0000003c $d
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:127    .text.flash_write:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:133    .text.flash_write:00000000 flash_write
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:400    .text.flash_write:000000d8 $d
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:406    .text.flash_erase:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:412    .text.flash_erase:00000000 flash_erase
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:516    .text.flash_erase:0000005c $d
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:524    .text.flash_read_page:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:530    .text.flash_read_page:00000000 flash_read_page
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:582    .text.flash_read_page:0000001c $d
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:587    .text.flash_write_page:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:593    .text.flash_write_page:00000000 flash_write_page
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:645    .text.flash_write_page:0000001c $d
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:650    .text.flash_erase_page:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:656    .text.flash_erase_page:00000000 flash_erase_page
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:734    .text.flash_erase_page:00000040 $d
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:740    .bss.EraseInitStruct.0:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:744    .bss.EraseInitStruct.0:00000000 EraseInitStruct.0
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:747    .bss.EraseInitStruct.1:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\cc6b5aA8.s:751    .bss.EraseInitStruct.1:00000000 EraseInitStruct.1

UNDEFINED SYMBOLS
HAL_FLASH_Unlock
HAL_FLASH_Program
HAL_FLASH_Lock
HAL_FLASHEx_Erase
