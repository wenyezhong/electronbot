ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0xx_ll_i2c.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.LL_I2C_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	LL_I2C_DeInit
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	LL_I2C_DeInit:
  25              	.LVL0:
  26              	.LFB186:
  27              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * @file    stm32f0xx_ll_i2c.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * @brief   I2C LL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   *
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   *
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   ******************************************************************************
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   */
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** #if defined(USE_FULL_LL_DRIVER)
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** /* Includes ------------------------------------------------------------------*/
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** #include "stm32f0xx_ll_i2c.h"
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** #include "stm32f0xx_ll_bus.h"
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** #ifdef  USE_FULL_ASSERT
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** #include "stm32_assert.h"
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** #else
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** #define assert_param(expr) ((void)0U)
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** #endif /* USE_FULL_ASSERT */
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** /** @addtogroup STM32F0xx_LL_Driver
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * @{
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 2


  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   */
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** #if defined (I2C1) || defined (I2C2)
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** /** @defgroup I2C_LL I2C
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * @{
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   */
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** /* Private constants ---------------------------------------------------------*/
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** /* Private macros ------------------------------------------------------------*/
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** /** @addtogroup I2C_LL_Private_Macros
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * @{
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   */
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** #define IS_LL_I2C_PERIPHERAL_MODE(__VALUE__)    (((__VALUE__) == LL_I2C_MODE_I2C)          || \
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****                                                  ((__VALUE__) == LL_I2C_MODE_SMBUS_HOST)   || \
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****                                                  ((__VALUE__) == LL_I2C_MODE_SMBUS_DEVICE) || \
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****                                                  ((__VALUE__) == LL_I2C_MODE_SMBUS_DEVICE_ARP))
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** #define IS_LL_I2C_ANALOG_FILTER(__VALUE__)      (((__VALUE__) == LL_I2C_ANALOGFILTER_ENABLE) || \
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****                                                  ((__VALUE__) == LL_I2C_ANALOGFILTER_DISABLE))
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** #define IS_LL_I2C_DIGITAL_FILTER(__VALUE__)     ((__VALUE__) <= 0x0000000FU)
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** #define IS_LL_I2C_OWN_ADDRESS1(__VALUE__)       ((__VALUE__) <= 0x000003FFU)
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** #define IS_LL_I2C_TYPE_ACKNOWLEDGE(__VALUE__)   (((__VALUE__) == LL_I2C_ACK) || \
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****                                                  ((__VALUE__) == LL_I2C_NACK))
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** #define IS_LL_I2C_OWN_ADDRSIZE(__VALUE__)       (((__VALUE__) == LL_I2C_OWNADDRESS1_7BIT) || \
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****                                                  ((__VALUE__) == LL_I2C_OWNADDRESS1_10BIT))
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** /**
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * @}
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   */
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** /* Private function prototypes -----------------------------------------------*/
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** /* Exported functions --------------------------------------------------------*/
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** /** @addtogroup I2C_LL_Exported_Functions
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * @{
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   */
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** /** @addtogroup I2C_LL_EF_Init
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * @{
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   */
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** /**
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * @brief  De-initialize the I2C registers to their default reset values.
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * @param  I2Cx I2C Instance.
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * @retval An ErrorStatus enumeration value:
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   *          - SUCCESS: I2C registers are de-initialized
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   *          - ERROR: I2C registers are not de-initialized
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   */
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** ErrorStatus LL_I2C_DeInit(I2C_TypeDef *I2Cx)
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 3


  28              		.loc 1 88 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   ErrorStatus status = SUCCESS;
  33              		.loc 1 89 3 view .LVU1
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   /* Check the I2C Instance I2Cx */
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(I2Cx));
  34              		.loc 1 92 3 view .LVU2
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   if (I2Cx == I2C1)
  35              		.loc 1 94 3 view .LVU3
  36              		.loc 1 94 6 is_stmt 0 view .LVU4
  37 0000 084B     		ldr	r3, .L5
  38 0002 9842     		cmp	r0, r3
  39 0004 01D0     		beq	.L4
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   {
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****     /* Force reset of I2C clock */
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****     LL_APB1_GRP1_ForceReset(LL_APB1_GRP1_PERIPH_I2C1);
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****     /* Release reset of I2C clock */
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****     LL_APB1_GRP1_ReleaseReset(LL_APB1_GRP1_PERIPH_I2C1);
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   }
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** #if defined(I2C2)
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   else if (I2Cx == I2C2)
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   {
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****     /* Force reset of I2C clock */
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****     LL_APB1_GRP1_ForceReset(LL_APB1_GRP1_PERIPH_I2C2);
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****     /* Release reset of I2C clock */
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****     LL_APB1_GRP1_ReleaseReset(LL_APB1_GRP1_PERIPH_I2C2);
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   }
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** #endif /* I2C2 */
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   else
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   {
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****     status = ERROR;
  40              		.loc 1 115 12 view .LVU5
  41 0006 0120     		movs	r0, #1
  42              	.LVL1:
  43              	.L2:
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   }
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   return status;
  44              		.loc 1 118 3 is_stmt 1 view .LVU6
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** }
  45              		.loc 1 119 1 is_stmt 0 view .LVU7
  46              		@ sp needed
  47 0008 7047     		bx	lr
  48              	.LVL2:
  49              	.L4:
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
  50              		.loc 1 97 5 is_stmt 1 view .LVU8
  51              	.LBB24:
  52              	.LBI24:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 4


  53              		.file 2 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @file    stm32f0xx_ll_bus.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   @verbatim                
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****     [..]  
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write 
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****     [..]  
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @attention
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * All rights reserved.</center></h2>
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * the "License"; You may not use this file except in compliance with the
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * License. You may obtain a copy of the License at:
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *                        opensource.org/licenses/BSD-3-Clause
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ******************************************************************************
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #ifndef __STM32F0xx_LL_BUS_H
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define __STM32F0xx_LL_BUS_H
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #ifdef __cplusplus
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** extern "C" {
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #include "stm32f0xx.h"
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @addtogroup STM32F0xx_LL_Driver
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(RCC)
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 5


  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHBENR_DMA1EN
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(DMA2)
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2           RCC_AHBENR_DMA2EN
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*DMA2*/
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM           RCC_AHBENR_SRAMEN
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FLASH          RCC_AHBENR_FLITFEN
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHBENR_CRCEN
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOA          RCC_AHBENR_GPIOAEN
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOB          RCC_AHBENR_GPIOBEN
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOC          RCC_AHBENR_GPIOCEN
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(GPIOD)
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOD          RCC_AHBENR_GPIODEN
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*GPIOD*/
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(GPIOE)
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOE          RCC_AHBENR_GPIOEEN
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*GPIOE*/
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOF          RCC_AHBENR_GPIOFEN
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TSC)
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_TSC            RCC_AHBENR_TSCEN
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TSC*/
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM2)
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR_TIM2EN
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM2*/
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR_TIM3EN
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM6)
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR_TIM6EN
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM6*/
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM7)
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR_TIM7EN
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM7*/
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM14          RCC_APB1ENR_TIM14EN
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 6


 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR_WWDGEN
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(SPI2)
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR_SPI2EN
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*SPI2*/
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART2)
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR_USART2EN
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART2 */
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART3)
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART3         RCC_APB1ENR_USART3EN
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART3 */
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART4)
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART4         RCC_APB1ENR_USART4EN
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART4 */
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART5)
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART5         RCC_APB1ENR_USART5EN
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART5 */
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR_I2C1EN
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(I2C2)
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR_I2C2EN
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*I2C2*/
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USB)
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR_USBEN
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USB */
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(CAN)
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN            RCC_APB1ENR_CANEN
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*CAN*/
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(CRS)
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CRS            RCC_APB1ENR_CRSEN
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*CRS*/
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR_PWREN
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(DAC)
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR_DACEN
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*DAC*/
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(CEC)
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CEC            RCC_APB1ENR_CECEN
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*CEC*/
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP2_PERIPH  APB1 GRP2 PERIPH
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_SYSCFG         RCC_APB2ENR_SYSCFGEN
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ADC1           RCC_APB2ENR_ADC1EN
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART8)
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART8         RCC_APB2ENR_USART8EN
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*USART8*/
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART7)
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART7         RCC_APB2ENR_USART7EN
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*USART7*/
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART6)
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART6         RCC_APB2ENR_USART6EN
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*USART6*/
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM1           RCC_APB2ENR_TIM1EN
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_SPI1           RCC_APB2ENR_SPI1EN
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 7


 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART1         RCC_APB2ENR_USART1EN
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM15)
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM15          RCC_APB2ENR_TIM15EN
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM15*/
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM16          RCC_APB2ENR_TIM16EN
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM17          RCC_APB2ENR_TIM17EN
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_DBGMCU         RCC_APB2ENR_DBGMCUEN
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_EnableClock\n
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_EnableClock\n
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_EnableClock\n
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_EnableClock\n
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_EnableClock\n
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOAEN       LL_AHB1_GRP1_EnableClock\n
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_EnableClock\n
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_EnableClock\n
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_EnableClock\n
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_EnableClock\n
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_EnableClock\n
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       TSCEN         LL_AHB1_GRP1_EnableClock
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 8


 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBENR, Periphs);
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_IsEnabledClock\n
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_IsEnabledClock\n
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_IsEnabledClock\n
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOAEN       LL_AHB1_GRP1_IsEnabledClock\n
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_IsEnabledClock\n
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_IsEnabledClock\n
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_IsEnabledClock\n
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_IsEnabledClock\n
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_IsEnabledClock\n
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       TSCEN         LL_AHB1_GRP1_IsEnabledClock
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   return (READ_BIT(RCC->AHBENR, Periphs) == Periphs);
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_DisableClock\n
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_DisableClock\n
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_DisableClock\n
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_DisableClock\n
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_DisableClock\n
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOAEN       LL_AHB1_GRP1_DisableClock\n
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_DisableClock\n
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_DisableClock\n
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_DisableClock\n
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_DisableClock\n
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_DisableClock\n
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 9


 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       TSCEN         LL_AHB1_GRP1_DisableClock
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBENR, Periphs);
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBRSTR      GPIOARST      LL_AHB1_GRP1_ForceReset\n
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOBRST      LL_AHB1_GRP1_ForceReset\n
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOCRST      LL_AHB1_GRP1_ForceReset\n
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIODRST      LL_AHB1_GRP1_ForceReset\n
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOERST      LL_AHB1_GRP1_ForceReset\n
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOFRST      LL_AHB1_GRP1_ForceReset\n
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ForceReset
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->AHBRSTR, Periphs);
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBRSTR      GPIOARST      LL_AHB1_GRP1_ReleaseReset\n
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOBRST      LL_AHB1_GRP1_ReleaseReset\n
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOCRST      LL_AHB1_GRP1_ReleaseReset\n
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIODRST      LL_AHB1_GRP1_ReleaseReset\n
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOERST      LL_AHB1_GRP1_ReleaseReset\n
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 10


 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOFRST      LL_AHB1_GRP1_ReleaseReset\n
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ReleaseReset
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBRSTR, Periphs);
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1_GRP1 APB1 GRP1
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock (available in register 1).
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_EnableClock\n
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_EnableClock\n
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_EnableClock\n
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_EnableClock\n
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_EnableClock\n
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_EnableClock\n
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_EnableClock\n
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_EnableClock\n
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_EnableClock\n
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART4EN      LL_APB1_GRP1_EnableClock\n
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART5EN      LL_APB1_GRP1_EnableClock\n
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_EnableClock\n
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_EnableClock\n
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_EnableClock\n
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CANEN         LL_APB1_GRP1_EnableClock\n
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CRSEN         LL_APB1_GRP1_EnableClock\n
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_EnableClock\n
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_EnableClock\n
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_EnableClock
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 11


 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not (available in register 1).
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_IsEnabledClock\n
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_IsEnabledClock\n
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART4EN      LL_APB1_GRP1_IsEnabledClock\n
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART5EN      LL_APB1_GRP1_IsEnabledClock\n
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_IsEnabledClock\n
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CANEN         LL_APB1_GRP1_IsEnabledClock\n
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CRSEN         LL_APB1_GRP1_IsEnabledClock\n
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_IsEnabledClock\n
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_IsEnabledClock\n
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_IsEnabledClock
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 12


 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   return (READ_BIT(RCC->APB1ENR, Periphs) == Periphs);
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock (available in register 1).
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_DisableClock\n
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_DisableClock\n
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_DisableClock\n
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_DisableClock\n
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_DisableClock\n
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_DisableClock\n
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_DisableClock\n
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_DisableClock\n
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_DisableClock\n
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART4EN      LL_APB1_GRP1_DisableClock\n
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART5EN      LL_APB1_GRP1_DisableClock\n
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_DisableClock\n
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_DisableClock\n
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_DisableClock\n
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CANEN         LL_APB1_GRP1_DisableClock\n
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CRSEN         LL_APB1_GRP1_DisableClock\n
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_DisableClock\n
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_DisableClock\n
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_DisableClock
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 13


 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR, Periphs);
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset (available in register 1).
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST       LL_APB1_GRP1_ForceReset\n
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST       LL_APB1_GRP1_ForceReset\n
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST       LL_APB1_GRP1_ForceReset\n
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST       LL_APB1_GRP1_ForceReset\n
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM14RST      LL_APB1_GRP1_ForceReset\n
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST       LL_APB1_GRP1_ForceReset\n
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST       LL_APB1_GRP1_ForceReset\n
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART2RST     LL_APB1_GRP1_ForceReset\n
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART3RST     LL_APB1_GRP1_ForceReset\n
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART4RST     LL_APB1_GRP1_ForceReset\n
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART5RST     LL_APB1_GRP1_ForceReset\n
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST       LL_APB1_GRP1_ForceReset\n
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST       LL_APB1_GRP1_ForceReset\n
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USBRST        LL_APB1_GRP1_ForceReset\n
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CANRST        LL_APB1_GRP1_ForceReset\n
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CRSRST        LL_APB1_GRP1_ForceReset\n
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     PWRRST        LL_APB1_GRP1_ForceReset\n
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     DACRST        LL_APB1_GRP1_ForceReset\n
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CECRST        LL_APB1_GRP1_ForceReset
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 14


 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
  54              		.loc 2 570 22 view .LVU9
  55              	.LBB25:
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR, Periphs);
  56              		.loc 2 572 3 view .LVU10
  57 000a 074B     		ldr	r3, .L5+4
  58 000c 1969     		ldr	r1, [r3, #16]
  59 000e 8022     		movs	r2, #128
  60 0010 9203     		lsls	r2, r2, #14
  61 0012 0A43     		orrs	r2, r1
  62 0014 1A61     		str	r2, [r3, #16]
  63              	.LVL3:
  64              		.loc 2 572 3 is_stmt 0 view .LVU11
  65              	.LBE25:
  66              	.LBE24:
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   }
  67              		.loc 1 100 5 is_stmt 1 view .LVU12
  68              	.LBB26:
  69              	.LBI26:
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset (available in register 1).
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST       LL_APB1_GRP1_ReleaseReset\n
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST       LL_APB1_GRP1_ReleaseReset\n
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST       LL_APB1_GRP1_ReleaseReset\n
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST       LL_APB1_GRP1_ReleaseReset\n
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM14RST      LL_APB1_GRP1_ReleaseReset\n
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST       LL_APB1_GRP1_ReleaseReset\n
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST       LL_APB1_GRP1_ReleaseReset\n
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART2RST     LL_APB1_GRP1_ReleaseReset\n
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART3RST     LL_APB1_GRP1_ReleaseReset\n
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART4RST     LL_APB1_GRP1_ReleaseReset\n
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART5RST     LL_APB1_GRP1_ReleaseReset\n
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST       LL_APB1_GRP1_ReleaseReset\n
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST       LL_APB1_GRP1_ReleaseReset\n
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USBRST        LL_APB1_GRP1_ReleaseReset\n
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CANRST        LL_APB1_GRP1_ReleaseReset\n
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CRSRST        LL_APB1_GRP1_ReleaseReset\n
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     PWRRST        LL_APB1_GRP1_ReleaseReset\n
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     DACRST        LL_APB1_GRP1_ReleaseReset\n
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CECRST        LL_APB1_GRP1_ReleaseReset
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 15


 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
  70              		.loc 2 621 22 view .LVU13
  71              	.LBB27:
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR, Periphs);
  72              		.loc 2 623 3 view .LVU14
  73 0016 1A69     		ldr	r2, [r3, #16]
  74 0018 0449     		ldr	r1, .L5+8
  75 001a 0A40     		ands	r2, r1
  76 001c 1A61     		str	r2, [r3, #16]
  77              	.LBE27:
  78              	.LBE26:
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
  79              		.loc 1 89 15 is_stmt 0 view .LVU15
  80 001e 0020     		movs	r0, #0
  81              	.LVL4:
  82              	.LBB29:
  83              	.LBB28:
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
  84              		.loc 2 624 1 view .LVU16
  85 0020 F2E7     		b	.L2
  86              	.L6:
  87 0022 C046     		.align	2
  88              	.L5:
  89 0024 00540040 		.word	1073763328
  90 0028 00100240 		.word	1073876992
  91 002c FFFFDFFF 		.word	-2097153
  92              	.LBE28:
  93              	.LBE29:
  94              		.cfi_endproc
  95              	.LFE186:
  97              		.section	.text.LL_I2C_Init,"ax",%progbits
  98              		.align	1
  99              		.global	LL_I2C_Init
 100              		.syntax unified
 101              		.code	16
 102              		.thumb_func
 104              	LL_I2C_Init:
 105              	.LVL5:
 106              	.LFB187:
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** /**
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * @brief  Initialize the I2C registers according to the specified parameters in I2C_InitStruct.
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * @param  I2Cx I2C Instance.
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * @param  I2C_InitStruct pointer to a @ref LL_I2C_InitTypeDef structure.
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * @retval An ErrorStatus enumeration value:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 16


 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   *          - SUCCESS: I2C registers are initialized
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   *          - ERROR: Not applicable
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   */
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** ErrorStatus LL_I2C_Init(I2C_TypeDef *I2Cx, LL_I2C_InitTypeDef *I2C_InitStruct)
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** {
 107              		.loc 1 130 1 is_stmt 1 view -0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		.loc 1 130 1 is_stmt 0 view .LVU18
 112 0000 30B5     		push	{r4, r5, lr}
 113              	.LCFI0:
 114              		.cfi_def_cfa_offset 12
 115              		.cfi_offset 4, -12
 116              		.cfi_offset 5, -8
 117              		.cfi_offset 14, -4
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   /* Check the I2C Instance I2Cx */
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(I2Cx));
 118              		.loc 1 132 3 is_stmt 1 view .LVU19
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   /* Check the I2C parameters from I2C_InitStruct */
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   assert_param(IS_LL_I2C_PERIPHERAL_MODE(I2C_InitStruct->PeripheralMode));
 119              		.loc 1 135 3 view .LVU20
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   assert_param(IS_LL_I2C_ANALOG_FILTER(I2C_InitStruct->AnalogFilter));
 120              		.loc 1 136 3 view .LVU21
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   assert_param(IS_LL_I2C_DIGITAL_FILTER(I2C_InitStruct->DigitalFilter));
 121              		.loc 1 137 3 view .LVU22
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   assert_param(IS_LL_I2C_OWN_ADDRESS1(I2C_InitStruct->OwnAddress1));
 122              		.loc 1 138 3 view .LVU23
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   assert_param(IS_LL_I2C_TYPE_ACKNOWLEDGE(I2C_InitStruct->TypeAcknowledge));
 123              		.loc 1 139 3 view .LVU24
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   assert_param(IS_LL_I2C_OWN_ADDRSIZE(I2C_InitStruct->OwnAddrSize));
 124              		.loc 1 140 3 view .LVU25
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   /* Disable the selected I2Cx Peripheral */
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   LL_I2C_Disable(I2Cx);
 125              		.loc 1 143 3 view .LVU26
 126              	.LVL6:
 127              	.LBB30:
 128              	.LBI30:
 129              		.file 3 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @file    stm32f0xx_ll_i2c.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief   Header file of I2C LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 17


  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   ******************************************************************************
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #ifndef STM32F0xx_LL_I2C_H
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define STM32F0xx_LL_I2C_H
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #ifdef __cplusplus
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** extern "C" {
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #endif
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #include "stm32f0xx.h"
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @addtogroup STM32F0xx_LL_Driver
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #if defined (I2C1) || defined (I2C2)
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL I2C
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /* Private constants ---------------------------------------------------------*/
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_Private_Constants I2C Private Constants
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /* Private macros ------------------------------------------------------------*/
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #if defined(USE_FULL_LL_DRIVER)
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_Private_Macros I2C Private Macros
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #endif /*USE_FULL_LL_DRIVER*/
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /* Exported types ------------------------------------------------------------*/
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #if defined(USE_FULL_LL_DRIVER)
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_ES_INIT I2C Exported Init structure
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** typedef struct
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   uint32_t PeripheralMode;      /*!< Specifies the peripheral mode.
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This parameter can be a value of @ref I2C_LL_EC_PERIPHERAL_MOD
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      @ref LL_I2C_SetMode(). */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 18


  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   uint32_t Timing;              /*!< Specifies the SDA setup, hold time and the SCL high, low perio
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This parameter must be set by referring to the STM32CubeMX Too
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      the helper macro @ref __LL_I2C_CONVERT_TIMINGS().
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      @ref LL_I2C_SetTiming(). */
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   uint32_t AnalogFilter;        /*!< Enables or disables analog noise filter.
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This parameter can be a value of @ref I2C_LL_EC_ANALOGFILTER_S
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      @ref LL_I2C_EnableAnalogFilter() or LL_I2C_DisableAnalogFilter
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   uint32_t DigitalFilter;       /*!< Configures the digital noise filter.
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This parameter can be a number between Min_Data = 0x00 and Max
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      @ref LL_I2C_SetDigitalFilter(). */
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   uint32_t OwnAddress1;         /*!< Specifies the device own address 1.
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This parameter must be a value between Min_Data = 0x00 and Max
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      @ref LL_I2C_SetOwnAddress1(). */
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   uint32_t TypeAcknowledge;     /*!< Specifies the ACKnowledge or Non ACKnowledge condition after t
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      match code or next received byte.
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This parameter can be a value of @ref I2C_LL_EC_I2C_ACKNOWLEDG
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      @ref LL_I2C_AcknowledgeNextData(). */
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   uint32_t OwnAddrSize;         /*!< Specifies the device own address 1 size (7-bit or 10-bit).
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This parameter can be a value of @ref I2C_LL_EC_OWNADDRESS1.
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      @ref LL_I2C_SetOwnAddress1(). */
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** } LL_I2C_InitTypeDef;
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #endif /*USE_FULL_LL_DRIVER*/
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /* Exported constants --------------------------------------------------------*/
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_Exported_Constants I2C Exported Constants
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_CLEAR_FLAG Clear Flags Defines
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief    Flags defines which can be used with LL_I2C_WriteReg function
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ICR_ADDRCF                   I2C_ICR_ADDRCF          /*!< Address Matched flag   */
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ICR_NACKCF                   I2C_ICR_NACKCF          /*!< Not Acknowledge flag   */
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ICR_STOPCF                   I2C_ICR_STOPCF          /*!< Stop detection flag    */
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ICR_BERRCF                   I2C_ICR_BERRCF          /*!< Bus error flag         */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 19


 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ICR_ARLOCF                   I2C_ICR_ARLOCF          /*!< Arbitration Lost flag  */
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ICR_OVRCF                    I2C_ICR_OVRCF           /*!< Overrun/Underrun flag  */
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ICR_PECCF                    I2C_ICR_PECCF           /*!< PEC error flag         */
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ICR_TIMOUTCF                 I2C_ICR_TIMOUTCF        /*!< Timeout detection flag */
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ICR_ALERTCF                  I2C_ICR_ALERTCF         /*!< Alert flag             */
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_GET_FLAG Get Flags Defines
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief    Flags defines which can be used with LL_I2C_ReadReg function
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_TXE                      I2C_ISR_TXE             /*!< Transmit data register emp
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_TXIS                     I2C_ISR_TXIS            /*!< Transmit interrupt status 
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_RXNE                     I2C_ISR_RXNE            /*!< Receive data register not 
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_ADDR                     I2C_ISR_ADDR            /*!< Address matched (slave mod
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_NACKF                    I2C_ISR_NACKF           /*!< Not Acknowledge received f
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_STOPF                    I2C_ISR_STOPF           /*!< Stop detection flag       
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_TC                       I2C_ISR_TC              /*!< Transfer Complete (master 
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_TCR                      I2C_ISR_TCR             /*!< Transfer Complete Reload  
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_BERR                     I2C_ISR_BERR            /*!< Bus error                 
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_ARLO                     I2C_ISR_ARLO            /*!< Arbitration lost          
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_OVR                      I2C_ISR_OVR             /*!< Overrun/Underrun (slave mo
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_PECERR                   I2C_ISR_PECERR          /*!< PEC Error in reception (SM
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_TIMEOUT                  I2C_ISR_TIMEOUT         /*!< Timeout detection flag (SM
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_ALERT                    I2C_ISR_ALERT           /*!< SMBus alert (SMBus mode)  
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_BUSY                     I2C_ISR_BUSY            /*!< Bus busy                  
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_IT IT Defines
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief    IT defines which can be used with LL_I2C_ReadReg and  LL_I2C_WriteReg functions
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_CR1_TXIE                     I2C_CR1_TXIE            /*!< TX Interrupt enable       
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_CR1_RXIE                     I2C_CR1_RXIE            /*!< RX Interrupt enable       
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_CR1_ADDRIE                   I2C_CR1_ADDRIE          /*!< Address match Interrupt en
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_CR1_NACKIE                   I2C_CR1_NACKIE          /*!< Not acknowledge received I
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_CR1_STOPIE                   I2C_CR1_STOPIE          /*!< STOP detection Interrupt e
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_CR1_TCIE                     I2C_CR1_TCIE            /*!< Transfer Complete interrup
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_CR1_ERRIE                    I2C_CR1_ERRIE           /*!< Error interrupts enable   
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_PERIPHERAL_MODE Peripheral Mode
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_I2C                    0x00000000U              /*!< I2C Master or Slave mode  
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_HOST             I2C_CR1_SMBHEN           /*!< SMBus Host address acknowl
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_DEVICE           0x00000000U              /*!< SMBus Device default mode
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                          (Default address not ackno
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_DEVICE_ARP       I2C_CR1_SMBDEN           /*!< SMBus Device Default addre
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 20


 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_ANALOGFILTER_SELECTION Analog Filter Selection
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ANALOGFILTER_ENABLE          0x00000000U             /*!< Analog filter is enabled. 
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ANALOGFILTER_DISABLE         I2C_CR1_ANFOFF          /*!< Analog filter is disabled.
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_ADDRESSING_MODE Master Addressing Mode
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ADDRESSING_MODE_7BIT         0x00000000U              /*!< Master operates in 7-bit 
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ADDRESSING_MODE_10BIT        I2C_CR2_ADD10            /*!< Master operates in 10-bit
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_OWNADDRESS1 Own Address 1 Length
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS1_7BIT             0x00000000U             /*!< Own address 1 is a 7-bit a
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS1_10BIT            I2C_OAR1_OA1MODE        /*!< Own address 1 is a 10-bit 
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_OWNADDRESS2 Own Address 2 Masks
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_NOMASK           I2C_OAR2_OA2NOMASK      /*!< Own Address2 No mask.     
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK01           I2C_OAR2_OA2MASK01      /*!< Only Address2 bits[7:2] ar
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK02           I2C_OAR2_OA2MASK02      /*!< Only Address2 bits[7:3] ar
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK03           I2C_OAR2_OA2MASK03      /*!< Only Address2 bits[7:4] ar
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK04           I2C_OAR2_OA2MASK04      /*!< Only Address2 bits[7:5] ar
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK05           I2C_OAR2_OA2MASK05      /*!< Only Address2 bits[7:6] ar
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK06           I2C_OAR2_OA2MASK06      /*!< Only Address2 bits[7] are 
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK07           I2C_OAR2_OA2MASK07      /*!< No comparison is done.
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                          All Address2 are acknowled
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_I2C_ACKNOWLEDGE Acknowledge Generation
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ACK                          0x00000000U              /*!< ACK is sent after current
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_NACK                         I2C_CR2_NACK             /*!< NACK is sent after curren
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_ADDRSLAVE Slave Address Length
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 21


 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ADDRSLAVE_7BIT               0x00000000U              /*!< Slave Address in 7-bit. *
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ADDRSLAVE_10BIT              I2C_CR2_ADD10            /*!< Slave Address in 10-bit.*
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_REQUEST Transfer Request Direction
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_REQUEST_WRITE                0x00000000U              /*!< Master request a write tr
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_REQUEST_READ                 I2C_CR2_RD_WRN           /*!< Master request a read tra
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_MODE Transfer End Mode
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_RELOAD                  I2C_CR2_RELOAD           /*!< Enable I2C Reload mode.  
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_AUTOEND                 I2C_CR2_AUTOEND          /*!< Enable I2C Automatic end 
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           with no HW PEC comparison
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_SOFTEND                 0x00000000U              /*!< Enable I2C Software end m
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           with no HW PEC comparison
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_RELOAD            LL_I2C_MODE_RELOAD       /*!< Enable SMBUS Automatic en
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           with HW PEC comparison.  
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_AUTOEND_NO_PEC    LL_I2C_MODE_AUTOEND      /*!< Enable SMBUS Automatic en
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           with HW PEC comparison.  
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_SOFTEND_NO_PEC    LL_I2C_MODE_SOFTEND      /*!< Enable SMBUS Software end
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           with HW PEC comparison.  
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_AUTOEND_WITH_PEC  (uint32_t)(LL_I2C_MODE_AUTOEND | I2C_CR2_PECBYTE)
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /*!< Enable SMBUS Automatic end mode with HW PEC comparison.   */
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_SOFTEND_WITH_PEC  (uint32_t)(LL_I2C_MODE_SOFTEND | I2C_CR2_PECBYTE)
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /*!< Enable SMBUS Software end mode with HW PEC comparison.    */
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_GENERATE Start And Stop Generation
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_GENERATE_NOSTARTSTOP         0x00000000U
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /*!< Don't Generate Stop and Start condition. */
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_GENERATE_STOP                (uint32_t)(0x80000000U | I2C_CR2_STOP)
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /*!< Generate Stop condition (Size should be set to 0).      */
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_GENERATE_START_READ          (uint32_t)(0x80000000U | I2C_CR2_START | I2C_CR2_RD_WRN
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /*!< Generate Start for read request. */
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_GENERATE_START_WRITE         (uint32_t)(0x80000000U | I2C_CR2_START)
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /*!< Generate Start for write request. */
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_GENERATE_RESTART_7BIT_READ   (uint32_t)(0x80000000U | I2C_CR2_START | I2C_CR2_RD_WRN
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /*!< Generate Restart for read request, slave 7Bit address.  */
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_GENERATE_RESTART_7BIT_WRITE  (uint32_t)(0x80000000U | I2C_CR2_START)
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /*!< Generate Restart for write request, slave 7Bit address. */
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_GENERATE_RESTART_10BIT_READ  (uint32_t)(0x80000000U | I2C_CR2_START | \
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                        I2C_CR2_RD_WRN | I2C_CR2_HEAD10R)
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /*!< Generate Restart for read request, slave 10Bit address. */
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_GENERATE_RESTART_10BIT_WRITE (uint32_t)(0x80000000U | I2C_CR2_START)
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /*!< Generate Restart for write request, slave 10Bit address.*/
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 22


 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_DIRECTION Read Write Direction
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_DIRECTION_WRITE              0x00000000U              /*!< Write transfer request by
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           slave enters receiver mod
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_DIRECTION_READ               I2C_ISR_DIR              /*!< Read transfer request by 
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           slave enters transmitter 
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_DMA_REG_DATA DMA Register Data
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_DMA_REG_DATA_TRANSMIT        0x00000000U              /*!< Get address of data regis
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           transmission */
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_DMA_REG_DATA_RECEIVE         0x00000001U              /*!< Get address of data regis
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           reception */
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_SMBUS_TIMEOUTA_MODE SMBus TimeoutA Mode SCL SDA Timeout
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW      0x00000000U          /*!< TimeoutA is used to detec
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           SCL low level timeout.   
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH I2C_TIMEOUTR_TIDLE   /*!< TimeoutA is used to detec
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           both SCL and SDA high lev
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_SMBUS_TIMEOUT_SELECTION SMBus Timeout Selection
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_SMBUS_TIMEOUTA               I2C_TIMEOUTR_TIMOUTEN                 /*!< TimeoutA ena
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_SMBUS_TIMEOUTB               I2C_TIMEOUTR_TEXTEN                   /*!< TimeoutB (ex
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                                        enable bit  
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_SMBUS_ALL_TIMEOUT            (uint32_t)(I2C_TIMEOUTR_TIMOUTEN | \
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                        I2C_TIMEOUTR_TEXTEN)       /*!< TimeoutA and
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** (extended clock) enable bits */
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /* Exported macro ------------------------------------------------------------*/
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_Exported_Macros I2C Exported Macros
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 23


 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EM_WRITE_READ Common Write and read registers Macros
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Write a value in I2C register
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  __INSTANCE__ I2C Instance
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  __REG__ Register to be written
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  __VALUE__ Value to be written in the register
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Read a value in I2C register
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  __INSTANCE__ I2C Instance
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  __REG__ Register to be read
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Register value
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EM_CONVERT_TIMINGS Convert SDA SCL timings
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure the SDA setup, hold time and the SCL high, low period.
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  __PRESCALER__ This parameter must be a value between  Min_Data=0 and Max_Data=0xF.
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  __SETUP_TIME__ This parameter must be a value between Min_Data=0 and Max_Data=0xF.
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                            (tscldel = (SCLDEL+1)xtpresc)
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  __HOLD_TIME__  This parameter must be a value between Min_Data=0 and Max_Data=0xF.
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                            (tsdadel = SDADELxtpresc)
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  __SCLH_PERIOD__ This parameter must be a value between Min_Data=0 and Max_Data=0xFF.
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                             (tsclh = (SCLH+1)xtpresc)
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  __SCLL_PERIOD__ This parameter must be a value between  Min_Data=0 and Max_Data=0xFF.
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                             (tscll = (SCLL+1)xtpresc)
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0 and Max_Data=0xFFFFFFFF
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define __LL_I2C_CONVERT_TIMINGS(__PRESCALER__, __SETUP_TIME__, __HOLD_TIME__, __SCLH_PERIOD__, __S
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   ((((uint32_t)(__PRESCALER__)    << I2C_TIMINGR_PRESC_Pos)  & I2C_TIMINGR_PRESC)   | \
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****    (((uint32_t)(__SETUP_TIME__)   << I2C_TIMINGR_SCLDEL_Pos) & I2C_TIMINGR_SCLDEL)  | \
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****    (((uint32_t)(__HOLD_TIME__)    << I2C_TIMINGR_SDADEL_Pos) & I2C_TIMINGR_SDADEL)  | \
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****    (((uint32_t)(__SCLH_PERIOD__)  << I2C_TIMINGR_SCLH_Pos)   & I2C_TIMINGR_SCLH)    | \
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****    (((uint32_t)(__SCLL_PERIOD__)  << I2C_TIMINGR_SCLL_Pos)   & I2C_TIMINGR_SCLL))
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /* Exported functions --------------------------------------------------------*/
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 24


 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_Exported_Functions I2C Exported Functions
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EF_Configuration Configuration
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable I2C peripheral (PE = 1).
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          PE            LL_I2C_Enable
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_Enable(I2C_TypeDef *I2Cx)
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_PE);
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable I2C peripheral (PE = 0).
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   When PE = 0, the I2C SCL and SDA lines are released.
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Internal state machines and status bits are put back to their reset value.
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         When cleared, PE must be kept low for at least 3 APB clock cycles.
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          PE            LL_I2C_Disable
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_Disable(I2C_TypeDef *I2Cx)
 130              		.loc 3 444 22 view .LVU27
 131              	.LBB31:
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_PE);
 132              		.loc 3 446 3 view .LVU28
 133 0002 0268     		ldr	r2, [r0]
 134 0004 0124     		movs	r4, #1
 135 0006 A243     		bics	r2, r4
 136 0008 0260     		str	r2, [r0]
 137              	.LVL7:
 138              		.loc 3 446 3 is_stmt 0 view .LVU29
 139              	.LBE31:
 140              	.LBE30:
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   /*---------------------------- I2Cx CR1 Configuration ------------------------
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****    * Configure the analog and digital noise filters with parameters :
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****    * - AnalogFilter: I2C_CR1_ANFOFF bit
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****    * - DigitalFilter: I2C_CR1_DNF[3:0] bits
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****    */
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   LL_I2C_ConfigFilters(I2Cx, I2C_InitStruct->AnalogFilter, I2C_InitStruct->DigitalFilter);
 141              		.loc 1 150 3 is_stmt 1 view .LVU30
 142              	.LBB32:
 143              	.LBI32:
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if the I2C peripheral is enabled or disabled.
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          PE            LL_I2C_IsEnabled
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 25


 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabled(I2C_TypeDef *I2Cx)
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_PE) == (I2C_CR1_PE)) ? 1UL : 0UL);
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure Noise Filters (Analog and Digital).
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   If the analog filter is also enabled, the digital filter is added to analog filter.
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         The filters can only be programmed when the I2C is disabled (PE = 0).
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ANFOFF        LL_I2C_ConfigFilters\n
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         CR1          DNF           LL_I2C_ConfigFilters
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  AnalogFilter This parameter can be one of the following values:
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ANALOGFILTER_ENABLE
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ANALOGFILTER_DISABLE
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  DigitalFilter This parameter must be a value between Min_Data=0x00 (Digital filter disa
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                           and Max_Data=0x0F (Digital filter enabled and filtering capability up to 
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         This parameter is used to configure the digital noise filter on SDA and SCL input.
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         The digital filter will filter spikes with a length of up to DNF[3:0]*ti2cclk.
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ConfigFilters(I2C_TypeDef *I2Cx, uint32_t AnalogFilter, uint32_t Digita
 144              		.loc 3 476 22 view .LVU31
 145              	.LBB33:
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR1, I2C_CR1_ANFOFF | I2C_CR1_DNF, AnalogFilter | (DigitalFilter << I2C_CR1_DNF_
 146              		.loc 3 478 3 view .LVU32
 147 000a 0368     		ldr	r3, [r0]
 148 000c 174A     		ldr	r2, .L9
 149 000e 1340     		ands	r3, r2
 150 0010 CA68     		ldr	r2, [r1, #12]
 151 0012 1202     		lsls	r2, r2, #8
 152 0014 8D68     		ldr	r5, [r1, #8]
 153 0016 2A43     		orrs	r2, r5
 154 0018 1343     		orrs	r3, r2
 155 001a 0360     		str	r3, [r0]
 156              	.LVL8:
 157              		.loc 3 478 3 is_stmt 0 view .LVU33
 158              	.LBE33:
 159              	.LBE32:
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   /*---------------------------- I2Cx TIMINGR Configuration --------------------
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****    * Configure the SDA setup, hold time and the SCL high, low period with parameter :
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****    * - Timing: I2C_TIMINGR_PRESC[3:0], I2C_TIMINGR_SCLDEL[3:0], I2C_TIMINGR_SDADEL[3:0],
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****    *           I2C_TIMINGR_SCLH[7:0] and I2C_TIMINGR_SCLL[7:0] bits
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****    */
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   LL_I2C_SetTiming(I2Cx, I2C_InitStruct->Timing);
 160              		.loc 1 157 3 is_stmt 1 view .LVU34
 161              	.LBB34:
 162              	.LBI34:
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure Digital Noise Filter.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 26


 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   If the analog filter is also enabled, the digital filter is added to analog filter.
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         This filter can only be programmed when the I2C is disabled (PE = 0).
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          DNF           LL_I2C_SetDigitalFilter
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  DigitalFilter This parameter must be a value between Min_Data=0x00 (Digital filter disa
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                           and Max_Data=0x0F (Digital filter enabled and filtering capability up to 
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         This parameter is used to configure the digital noise filter on SDA and SCL input.
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         The digital filter will filter spikes with a length of up to DNF[3:0]*ti2cclk.
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetDigitalFilter(I2C_TypeDef *I2Cx, uint32_t DigitalFilter)
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR1, I2C_CR1_DNF, DigitalFilter << I2C_CR1_DNF_Pos);
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the current Digital Noise Filter configuration.
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          DNF           LL_I2C_GetDigitalFilter
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xF
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetDigitalFilter(I2C_TypeDef *I2Cx)
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR1, I2C_CR1_DNF) >> I2C_CR1_DNF_Pos);
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable Analog Noise Filter.
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This filter can only be programmed when the I2C is disabled (PE = 0).
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ANFOFF        LL_I2C_EnableAnalogFilter
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableAnalogFilter(I2C_TypeDef *I2Cx)
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_ANFOFF);
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable Analog Noise Filter.
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This filter can only be programmed when the I2C is disabled (PE = 0).
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ANFOFF        LL_I2C_DisableAnalogFilter
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableAnalogFilter(I2C_TypeDef *I2Cx)
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_ANFOFF);
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if Analog Noise Filter is enabled or disabled.
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ANFOFF        LL_I2C_IsEnabledAnalogFilter
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledAnalogFilter(I2C_TypeDef *I2Cx)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 27


 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_ANFOFF) != (I2C_CR1_ANFOFF)) ? 1UL : 0UL);
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable DMA transmission requests.
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          TXDMAEN       LL_I2C_EnableDMAReq_TX
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableDMAReq_TX(I2C_TypeDef *I2Cx)
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_TXDMAEN);
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable DMA transmission requests.
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          TXDMAEN       LL_I2C_DisableDMAReq_TX
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableDMAReq_TX(I2C_TypeDef *I2Cx)
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_TXDMAEN);
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if DMA transmission requests are enabled or disabled.
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          TXDMAEN       LL_I2C_IsEnabledDMAReq_TX
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledDMAReq_TX(I2C_TypeDef *I2Cx)
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_TXDMAEN) == (I2C_CR1_TXDMAEN)) ? 1UL : 0UL);
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable DMA reception requests.
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          RXDMAEN       LL_I2C_EnableDMAReq_RX
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableDMAReq_RX(I2C_TypeDef *I2Cx)
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_RXDMAEN);
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable DMA reception requests.
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          RXDMAEN       LL_I2C_DisableDMAReq_RX
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableDMAReq_RX(I2C_TypeDef *I2Cx)
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_RXDMAEN);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 28


 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if DMA reception requests are enabled or disabled.
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          RXDMAEN       LL_I2C_IsEnabledDMAReq_RX
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledDMAReq_RX(I2C_TypeDef *I2Cx)
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_RXDMAEN) == (I2C_CR1_RXDMAEN)) ? 1UL : 0UL);
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the data register address used for DMA transfer
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TXDR         TXDATA        LL_I2C_DMA_GetRegAddr\n
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         RXDR         RXDATA        LL_I2C_DMA_GetRegAddr
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  Direction This parameter can be one of the following values:
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_DMA_REG_DATA_TRANSMIT
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_DMA_REG_DATA_RECEIVE
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Address of data register
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_DMA_GetRegAddr(I2C_TypeDef *I2Cx, uint32_t Direction)
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   uint32_t data_reg_addr;
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   if (Direction == LL_I2C_DMA_REG_DATA_TRANSMIT)
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   {
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****     /* return address of TXDR register */
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****     data_reg_addr = (uint32_t) &(I2Cx->TXDR);
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   }
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   else
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   {
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****     /* return address of RXDR register */
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****     data_reg_addr = (uint32_t) &(I2Cx->RXDR);
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   }
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return data_reg_addr;
 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable Clock stretching.
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This bit can only be programmed when the I2C is disabled (PE = 0).
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          NOSTRETCH     LL_I2C_EnableClockStretching
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableClockStretching(I2C_TypeDef *I2Cx)
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_NOSTRETCH);
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable Clock stretching.
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This bit can only be programmed when the I2C is disabled (PE = 0).
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          NOSTRETCH     LL_I2C_DisableClockStretching
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 29


 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableClockStretching(I2C_TypeDef *I2Cx)
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_NOSTRETCH);
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if Clock stretching is enabled or disabled.
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          NOSTRETCH     LL_I2C_IsEnabledClockStretching
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledClockStretching(I2C_TypeDef *I2Cx)
 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_NOSTRETCH) != (I2C_CR1_NOSTRETCH)) ? 1UL : 0UL);
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable hardware byte control in slave mode.
 675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          SBC           LL_I2C_EnableSlaveByteControl
 676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSlaveByteControl(I2C_TypeDef *I2Cx)
 680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_SBC);
 682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable hardware byte control in slave mode.
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          SBC           LL_I2C_DisableSlaveByteControl
 687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableSlaveByteControl(I2C_TypeDef *I2Cx)
 691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_SBC);
 693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if hardware byte control in slave mode is enabled or disabled.
 697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          SBC           LL_I2C_IsEnabledSlaveByteControl
 698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSlaveByteControl(I2C_TypeDef *I2Cx)
 702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_SBC) == (I2C_CR1_SBC)) ? 1UL : 0UL);
 704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #if defined(I2C_CR1_WUPEN)
 707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable Wakeup from STOP.
 709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_I2C_WAKEUP_FROMSTOP_INSTANCE(I2Cx) can be used to check whether or not
 710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         WakeUpFromStop feature is supported by the I2Cx Instance.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 30


 711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This bit can only be programmed when Digital Filter is disabled.
 712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          WUPEN         LL_I2C_EnableWakeUpFromStop
 713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableWakeUpFromStop(I2C_TypeDef *I2Cx)
 717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_WUPEN);
 719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable Wakeup from STOP.
 723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_I2C_WAKEUP_FROMSTOP_INSTANCE(I2Cx) can be used to check whether or not
 724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         WakeUpFromStop feature is supported by the I2Cx Instance.
 725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          WUPEN         LL_I2C_DisableWakeUpFromStop
 726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableWakeUpFromStop(I2C_TypeDef *I2Cx)
 730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_WUPEN);
 732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if Wakeup from STOP is enabled or disabled.
 736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_I2C_WAKEUP_FROMSTOP_INSTANCE(I2Cx) can be used to check whether or not
 737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         WakeUpFromStop feature is supported by the I2Cx Instance.
 738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          WUPEN         LL_I2C_IsEnabledWakeUpFromStop
 739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledWakeUpFromStop(I2C_TypeDef *I2Cx)
 743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_WUPEN) == (I2C_CR1_WUPEN)) ? 1UL : 0UL);
 745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #endif /* I2C_CR1_WUPEN */
 748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable General Call.
 750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   When enabled the Address 0x00 is ACKed.
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          GCEN          LL_I2C_EnableGeneralCall
 752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableGeneralCall(I2C_TypeDef *I2Cx)
 756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_GCEN);
 758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable General Call.
 762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   When disabled the Address 0x00 is NACKed.
 763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          GCEN          LL_I2C_DisableGeneralCall
 764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableGeneralCall(I2C_TypeDef *I2Cx)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 31


 768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_GCEN);
 770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if General Call is enabled or disabled.
 774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          GCEN          LL_I2C_IsEnabledGeneralCall
 775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledGeneralCall(I2C_TypeDef *I2Cx)
 779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_GCEN) == (I2C_CR1_GCEN)) ? 1UL : 0UL);
 781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure the Master to operate in 7-bit or 10-bit addressing mode.
 785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   Changing this bit is not allowed, when the START bit is set.
 786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          ADD10         LL_I2C_SetMasterAddressingMode
 787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  AddressingMode This parameter can be one of the following values:
 789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRESSING_MODE_7BIT
 790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRESSING_MODE_10BIT
 791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetMasterAddressingMode(I2C_TypeDef *I2Cx, uint32_t AddressingMode)
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR2, I2C_CR2_ADD10, AddressingMode);
 796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the Master addressing mode.
 800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          ADD10         LL_I2C_GetMasterAddressingMode
 801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Returned value can be one of the following values:
 803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRESSING_MODE_7BIT
 804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRESSING_MODE_10BIT
 805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetMasterAddressingMode(I2C_TypeDef *I2Cx)
 807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR2, I2C_CR2_ADD10));
 809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Set the Own Address1.
 813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll OAR1         OA1           LL_I2C_SetOwnAddress1\n
 814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         OAR1         OA1MODE       LL_I2C_SetOwnAddress1
 815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  OwnAddress1 This parameter must be a value between Min_Data=0 and Max_Data=0x3FF.
 817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  OwnAddrSize This parameter can be one of the following values:
 818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS1_7BIT
 819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS1_10BIT
 820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetOwnAddress1(I2C_TypeDef *I2Cx, uint32_t OwnAddress1, uint32_t OwnAdd
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   MODIFY_REG(I2Cx->OAR1, I2C_OAR1_OA1 | I2C_OAR1_OA1MODE, OwnAddress1 | OwnAddrSize);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 32


 825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable acknowledge on Own Address1 match address.
 829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll OAR1         OA1EN         LL_I2C_EnableOwnAddress1
 830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableOwnAddress1(I2C_TypeDef *I2Cx)
 834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->OAR1, I2C_OAR1_OA1EN);
 836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable acknowledge on Own Address1 match address.
 840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll OAR1         OA1EN         LL_I2C_DisableOwnAddress1
 841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableOwnAddress1(I2C_TypeDef *I2Cx)
 845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->OAR1, I2C_OAR1_OA1EN);
 847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if Own Address1 acknowledge is enabled or disabled.
 851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll OAR1         OA1EN         LL_I2C_IsEnabledOwnAddress1
 852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledOwnAddress1(I2C_TypeDef *I2Cx)
 856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->OAR1, I2C_OAR1_OA1EN) == (I2C_OAR1_OA1EN)) ? 1UL : 0UL);
 858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Set the 7bits Own Address2.
 862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This action has no effect if own address2 is enabled.
 863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll OAR2         OA2           LL_I2C_SetOwnAddress2\n
 864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         OAR2         OA2MSK        LL_I2C_SetOwnAddress2
 865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  OwnAddress2 Value between Min_Data=0 and Max_Data=0x7F.
 867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  OwnAddrMask This parameter can be one of the following values:
 868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_NOMASK
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK01
 870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK02
 871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK03
 872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK04
 873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK05
 874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK06
 875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK07
 876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetOwnAddress2(I2C_TypeDef *I2Cx, uint32_t OwnAddress2, uint32_t OwnAdd
 879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   MODIFY_REG(I2Cx->OAR2, I2C_OAR2_OA2 | I2C_OAR2_OA2MSK, OwnAddress2 | OwnAddrMask);
 881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 33


 882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable acknowledge on Own Address2 match address.
 885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll OAR2         OA2EN         LL_I2C_EnableOwnAddress2
 886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableOwnAddress2(I2C_TypeDef *I2Cx)
 890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->OAR2, I2C_OAR2_OA2EN);
 892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable  acknowledge on Own Address2 match address.
 896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll OAR2         OA2EN         LL_I2C_DisableOwnAddress2
 897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableOwnAddress2(I2C_TypeDef *I2Cx)
 901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->OAR2, I2C_OAR2_OA2EN);
 903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if Own Address1 acknowledge is enabled or disabled.
 907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll OAR2         OA2EN         LL_I2C_IsEnabledOwnAddress2
 908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledOwnAddress2(I2C_TypeDef *I2Cx)
 912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->OAR2, I2C_OAR2_OA2EN) == (I2C_OAR2_OA2EN)) ? 1UL : 0UL);
 914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure the SDA setup, hold time and the SCL high, low period.
 918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This bit can only be programmed when the I2C is disabled (PE = 0).
 919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMINGR      TIMINGR       LL_I2C_SetTiming
 920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  Timing This parameter must be a value between Min_Data=0 and Max_Data=0xFFFFFFFF.
 922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This parameter is computed with the STM32CubeMX Tool.
 923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetTiming(I2C_TypeDef *I2Cx, uint32_t Timing)
 163              		.loc 3 925 22 view .LVU35
 164              	.LBB35:
 926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   WRITE_REG(I2Cx->TIMINGR, Timing);
 165              		.loc 3 927 3 view .LVU36
 166 001c 4B68     		ldr	r3, [r1, #4]
 167 001e 0361     		str	r3, [r0, #16]
 168              	.LVL9:
 169              		.loc 3 927 3 is_stmt 0 view .LVU37
 170              	.LBE35:
 171              	.LBE34:
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   /* Enable the selected I2Cx Peripheral */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 34


 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   LL_I2C_Enable(I2Cx);
 172              		.loc 1 160 3 is_stmt 1 view .LVU38
 173              	.LBB36:
 174              	.LBI36:
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 175              		.loc 3 430 22 view .LVU39
 176              	.LBB37:
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 177              		.loc 3 432 3 view .LVU40
 178 0020 0368     		ldr	r3, [r0]
 179 0022 2343     		orrs	r3, r4
 180 0024 0360     		str	r3, [r0]
 181              	.LVL10:
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 182              		.loc 3 432 3 is_stmt 0 view .LVU41
 183              	.LBE37:
 184              	.LBE36:
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   /*---------------------------- I2Cx OAR1 Configuration -----------------------
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****    * Disable, Configure and Enable I2Cx device own address 1 with parameters :
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****    * - OwnAddress1:  I2C_OAR1_OA1[9:0] bits
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****    * - OwnAddrSize:  I2C_OAR1_OA1MODE bit
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****    */
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   LL_I2C_DisableOwnAddress1(I2Cx);
 185              		.loc 1 167 3 is_stmt 1 view .LVU42
 186              	.LBB38:
 187              	.LBI38:
 844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 188              		.loc 3 844 22 view .LVU43
 189              	.LBB39:
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 190              		.loc 3 846 3 view .LVU44
 191 0026 8368     		ldr	r3, [r0, #8]
 192 0028 114A     		ldr	r2, .L9+4
 193 002a 1340     		ands	r3, r2
 194 002c 8360     		str	r3, [r0, #8]
 195              	.LVL11:
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 196              		.loc 3 846 3 is_stmt 0 view .LVU45
 197              	.LBE39:
 198              	.LBE38:
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   LL_I2C_SetOwnAddress1(I2Cx, I2C_InitStruct->OwnAddress1, I2C_InitStruct->OwnAddrSize);
 199              		.loc 1 168 3 is_stmt 1 view .LVU46
 200              	.LBB40:
 201              	.LBI40:
 822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 202              		.loc 3 822 22 view .LVU47
 203              	.LBB41:
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 204              		.loc 3 824 3 view .LVU48
 205 002e 8368     		ldr	r3, [r0, #8]
 206 0030 DB0A     		lsrs	r3, r3, #11
 207 0032 DB02     		lsls	r3, r3, #11
 208 0034 0A69     		ldr	r2, [r1, #16]
 209 0036 8C69     		ldr	r4, [r1, #24]
 210 0038 2243     		orrs	r2, r4
 211 003a 1343     		orrs	r3, r2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 35


 212 003c 8360     		str	r3, [r0, #8]
 213              	.LVL12:
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 214              		.loc 3 824 3 is_stmt 0 view .LVU49
 215              	.LBE41:
 216              	.LBE40:
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   /* OwnAdress1 == 0 is reserved for General Call address */
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   if (I2C_InitStruct->OwnAddress1 != 0U)
 217              		.loc 1 171 3 is_stmt 1 view .LVU50
 218              		.loc 1 171 6 is_stmt 0 view .LVU51
 219 003e 0B69     		ldr	r3, [r1, #16]
 220 0040 002B     		cmp	r3, #0
 221 0042 04D0     		beq	.L8
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   {
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****     LL_I2C_EnableOwnAddress1(I2Cx);
 222              		.loc 1 173 5 is_stmt 1 view .LVU52
 223              	.LVL13:
 224              	.LBB42:
 225              	.LBI42:
 833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 226              		.loc 3 833 22 view .LVU53
 227              	.LBB43:
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 228              		.loc 3 835 3 view .LVU54
 229 0044 8268     		ldr	r2, [r0, #8]
 230 0046 8023     		movs	r3, #128
 231 0048 1B02     		lsls	r3, r3, #8
 232 004a 1343     		orrs	r3, r2
 233 004c 8360     		str	r3, [r0, #8]
 234              	.LVL14:
 235              	.L8:
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 236              		.loc 3 835 3 is_stmt 0 view .LVU55
 237              	.LBE43:
 238              	.LBE42:
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   }
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   /*---------------------------- I2Cx MODE Configuration -----------------------
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * Configure I2Cx peripheral mode with parameter :
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****    * - PeripheralMode: I2C_CR1_SMBDEN and I2C_CR1_SMBHEN bits
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****    */
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   LL_I2C_SetMode(I2Cx, I2C_InitStruct->PeripheralMode);
 239              		.loc 1 180 3 is_stmt 1 view .LVU56
 240              	.LBB44:
 241              	.LBI44:
 928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the Timing Prescaler setting.
 932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMINGR      PRESC         LL_I2C_GetTimingPrescaler
 933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xF
 935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetTimingPrescaler(I2C_TypeDef *I2Cx)
 937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_PRESC) >> I2C_TIMINGR_PRESC_Pos);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 36


 939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the SCL low period setting.
 943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMINGR      SCLL          LL_I2C_GetClockLowPeriod
 944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
 946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetClockLowPeriod(I2C_TypeDef *I2Cx)
 948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_SCLL) >> I2C_TIMINGR_SCLL_Pos);
 950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the SCL high period setting.
 954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMINGR      SCLH          LL_I2C_GetClockHighPeriod
 955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
 957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetClockHighPeriod(I2C_TypeDef *I2Cx)
 959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_SCLH) >> I2C_TIMINGR_SCLH_Pos);
 961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the SDA hold time.
 965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMINGR      SDADEL        LL_I2C_GetDataHoldTime
 966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xF
 968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetDataHoldTime(I2C_TypeDef *I2Cx)
 970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_SDADEL) >> I2C_TIMINGR_SDADEL_Pos);
 972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the SDA setup time.
 976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMINGR      SCLDEL        LL_I2C_GetDataSetupTime
 977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xF
 979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetDataSetupTime(I2C_TypeDef *I2Cx)
 981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_SCLDEL) >> I2C_TIMINGR_SCLDEL_Pos);
 983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure peripheral mode.
 987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
 988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
 989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          SMBHEN        LL_I2C_SetMode\n
 990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         CR1          SMBDEN        LL_I2C_SetMode
 991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  PeripheralMode This parameter can be one of the following values:
 993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_I2C
 994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_HOST
 995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_DEVICE
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 37


 996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_DEVICE_ARP
 997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetMode(I2C_TypeDef *I2Cx, uint32_t PeripheralMode)
 242              		.loc 3 999 22 view .LVU57
 243              	.LBB45:
1000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR1, I2C_CR1_SMBHEN | I2C_CR1_SMBDEN, PeripheralMode);
 244              		.loc 3 1001 3 view .LVU58
 245 004e 0368     		ldr	r3, [r0]
 246 0050 084A     		ldr	r2, .L9+8
 247 0052 1340     		ands	r3, r2
 248 0054 0A68     		ldr	r2, [r1]
 249 0056 1343     		orrs	r3, r2
 250 0058 0360     		str	r3, [r0]
 251              	.LVL15:
 252              		.loc 3 1001 3 is_stmt 0 view .LVU59
 253              	.LBE45:
 254              	.LBE44:
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   /*---------------------------- I2Cx CR2 Configuration ------------------------
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****    * Configure the ACKnowledge or Non ACKnowledge condition
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****    * after the address receive match code or next received byte with parameter :
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****    * - TypeAcknowledge: I2C_CR2_NACK bit
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****    */
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   LL_I2C_AcknowledgeNextData(I2Cx, I2C_InitStruct->TypeAcknowledge);
 255              		.loc 1 187 3 is_stmt 1 view .LVU60
 256 005a 4B69     		ldr	r3, [r1, #20]
 257              	.LVL16:
 258              	.LBB46:
 259              	.LBI46:
1002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get peripheral mode.
1006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          SMBHEN        LL_I2C_GetMode\n
1009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         CR1          SMBDEN        LL_I2C_GetMode
1010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Returned value can be one of the following values:
1012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_I2C
1013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_HOST
1014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_DEVICE
1015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_DEVICE_ARP
1016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetMode(I2C_TypeDef *I2Cx)
1018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR1, I2C_CR1_SMBHEN | I2C_CR1_SMBDEN));
1020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable SMBus alert (Host or Device mode)
1024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   SMBus Device mode:
1027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         - SMBus Alert pin is drived low and
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 38


1028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *           Alert Response Address Header acknowledge is enabled.
1029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus Host mode:
1030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         - SMBus Alert pin management is supported.
1031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ALERTEN       LL_I2C_EnableSMBusAlert
1032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSMBusAlert(I2C_TypeDef *I2Cx)
1036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_ALERTEN);
1038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1041:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable SMBus alert (Host or Device mode)
1042:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1043:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1044:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   SMBus Device mode:
1045:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         - SMBus Alert pin is not drived (can be used as a standard GPIO) and
1046:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *           Alert Response Address Header acknowledge is disabled.
1047:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus Host mode:
1048:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         - SMBus Alert pin management is not supported.
1049:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ALERTEN       LL_I2C_DisableSMBusAlert
1050:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1051:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1052:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1053:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableSMBusAlert(I2C_TypeDef *I2Cx)
1054:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1055:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_ALERTEN);
1056:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1057:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1059:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if SMBus alert (Host or Device mode) is enabled or disabled.
1060:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1061:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1062:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ALERTEN       LL_I2C_IsEnabledSMBusAlert
1063:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1064:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1065:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1066:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSMBusAlert(I2C_TypeDef *I2Cx)
1067:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1068:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_ALERTEN) == (I2C_CR1_ALERTEN)) ? 1UL : 0UL);
1069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1071:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable SMBus Packet Error Calculation (PEC).
1073:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1074:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1075:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          PECEN         LL_I2C_EnableSMBusPEC
1076:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1077:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1078:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1079:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSMBusPEC(I2C_TypeDef *I2Cx)
1080:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1081:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_PECEN);
1082:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1083:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1084:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 39


1085:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable SMBus Packet Error Calculation (PEC).
1086:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1087:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1088:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          PECEN         LL_I2C_DisableSMBusPEC
1089:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1090:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1091:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableSMBusPEC(I2C_TypeDef *I2Cx)
1093:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1094:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_PECEN);
1095:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1096:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1097:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1098:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if SMBus Packet Error Calculation (PEC) is enabled or disabled.
1099:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          PECEN         LL_I2C_IsEnabledSMBusPEC
1102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSMBusPEC(I2C_TypeDef *I2Cx)
1106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_PECEN) == (I2C_CR1_PECEN)) ? 1UL : 0UL);
1108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure the SMBus Clock Timeout.
1112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This configuration can only be programmed when associated Timeout is disabled (TimeoutA
1115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTA      LL_I2C_ConfigSMBusTimeout\n
1116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         TIMEOUTR     TIDLE         LL_I2C_ConfigSMBusTimeout\n
1117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         TIMEOUTR     TIMEOUTB      LL_I2C_ConfigSMBusTimeout
1118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  TimeoutA This parameter must be a value between  Min_Data=0 and Max_Data=0xFFF.
1120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  TimeoutAMode This parameter can be one of the following values:
1121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW
1122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH
1123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  TimeoutB
1124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ConfigSMBusTimeout(I2C_TypeDef *I2Cx, uint32_t TimeoutA, uint32_t Timeo
1127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                uint32_t TimeoutB)
1128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   MODIFY_REG(I2Cx->TIMEOUTR, I2C_TIMEOUTR_TIMEOUTA | I2C_TIMEOUTR_TIDLE | I2C_TIMEOUTR_TIMEOUTB,
1130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****              TimeoutA | TimeoutAMode | (TimeoutB << I2C_TIMEOUTR_TIMEOUTB_Pos));
1131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure the SMBus Clock TimeoutA (SCL low timeout or SCL and SDA high timeout depends
1135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   These bits can only be programmed when TimeoutA is disabled.
1138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTA      LL_I2C_SetSMBusTimeoutA
1139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  TimeoutA This parameter must be a value between  Min_Data=0 and Max_Data=0xFFF.
1141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 40


1142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetSMBusTimeoutA(I2C_TypeDef *I2Cx, uint32_t TimeoutA)
1144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   WRITE_REG(I2Cx->TIMEOUTR, TimeoutA);
1146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the SMBus Clock TimeoutA setting.
1150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTA      LL_I2C_GetSMBusTimeoutA
1153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0 and Max_Data=0xFFF
1155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetSMBusTimeoutA(I2C_TypeDef *I2Cx)
1157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMEOUTR, I2C_TIMEOUTR_TIMEOUTA));
1159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Set the SMBus Clock TimeoutA mode.
1163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This bit can only be programmed when TimeoutA is disabled.
1166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIDLE         LL_I2C_SetSMBusTimeoutAMode
1167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  TimeoutAMode This parameter can be one of the following values:
1169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW
1170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH
1171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetSMBusTimeoutAMode(I2C_TypeDef *I2Cx, uint32_t TimeoutAMode)
1174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   WRITE_REG(I2Cx->TIMEOUTR, TimeoutAMode);
1176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the SMBus Clock TimeoutA mode.
1180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIDLE         LL_I2C_GetSMBusTimeoutAMode
1183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Returned value can be one of the following values:
1185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW
1186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH
1187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetSMBusTimeoutAMode(I2C_TypeDef *I2Cx)
1189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMEOUTR, I2C_TIMEOUTR_TIDLE));
1191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure the SMBus Extended Cumulative Clock TimeoutB (Master or Slave mode).
1195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   These bits can only be programmed when TimeoutB is disabled.
1198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTB      LL_I2C_SetSMBusTimeoutB
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 41


1199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  TimeoutB This parameter must be a value between  Min_Data=0 and Max_Data=0xFFF.
1201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetSMBusTimeoutB(I2C_TypeDef *I2Cx, uint32_t TimeoutB)
1204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   WRITE_REG(I2Cx->TIMEOUTR, TimeoutB << I2C_TIMEOUTR_TIMEOUTB_Pos);
1206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the SMBus Extended Cumulative Clock TimeoutB setting.
1210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTB      LL_I2C_GetSMBusTimeoutB
1213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0 and Max_Data=0xFFF
1215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetSMBusTimeoutB(I2C_TypeDef *I2Cx)
1217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMEOUTR, I2C_TIMEOUTR_TIMEOUTB) >> I2C_TIMEOUTR_TIMEOUTB_Pos);
1219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable the SMBus Clock Timeout.
1223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMOUTEN      LL_I2C_EnableSMBusTimeout\n
1226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         TIMEOUTR     TEXTEN        LL_I2C_EnableSMBusTimeout
1227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  ClockTimeout This parameter can be one of the following values:
1229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA
1230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTB
1231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_ALL_TIMEOUT
1232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSMBusTimeout(I2C_TypeDef *I2Cx, uint32_t ClockTimeout)
1235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->TIMEOUTR, ClockTimeout);
1237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable the SMBus Clock Timeout.
1241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMOUTEN      LL_I2C_DisableSMBusTimeout\n
1244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         TIMEOUTR     TEXTEN        LL_I2C_DisableSMBusTimeout
1245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  ClockTimeout This parameter can be one of the following values:
1247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA
1248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTB
1249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_ALL_TIMEOUT
1250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableSMBusTimeout(I2C_TypeDef *I2Cx, uint32_t ClockTimeout)
1253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->TIMEOUTR, ClockTimeout);
1255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 42


1256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if the SMBus Clock Timeout is enabled or disabled.
1259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMOUTEN      LL_I2C_IsEnabledSMBusTimeout\n
1262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         TIMEOUTR     TEXTEN        LL_I2C_IsEnabledSMBusTimeout
1263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  ClockTimeout This parameter can be one of the following values:
1265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA
1266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTB
1267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_ALL_TIMEOUT
1268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSMBusTimeout(I2C_TypeDef *I2Cx, uint32_t ClockTimeout)
1271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->TIMEOUTR, (I2C_TIMEOUTR_TIMOUTEN | I2C_TIMEOUTR_TEXTEN)) == \
1273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****            (ClockTimeout)) ? 1UL : 0UL);
1274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
1278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EF_IT_Management IT_Management
1281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
1282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable TXIS interrupt.
1286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          TXIE          LL_I2C_EnableIT_TX
1287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_TX(I2C_TypeDef *I2Cx)
1291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_TXIE);
1293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable TXIS interrupt.
1297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          TXIE          LL_I2C_DisableIT_TX
1298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_TX(I2C_TypeDef *I2Cx)
1302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_TXIE);
1304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if the TXIS Interrupt is enabled or disabled.
1308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          TXIE          LL_I2C_IsEnabledIT_TX
1309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_TX(I2C_TypeDef *I2Cx)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 43


1313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_TXIE) == (I2C_CR1_TXIE)) ? 1UL : 0UL);
1315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable RXNE interrupt.
1319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          RXIE          LL_I2C_EnableIT_RX
1320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_RX(I2C_TypeDef *I2Cx)
1324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_RXIE);
1326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable RXNE interrupt.
1330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          RXIE          LL_I2C_DisableIT_RX
1331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_RX(I2C_TypeDef *I2Cx)
1335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_RXIE);
1337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if the RXNE Interrupt is enabled or disabled.
1341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          RXIE          LL_I2C_IsEnabledIT_RX
1342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_RX(I2C_TypeDef *I2Cx)
1346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_RXIE) == (I2C_CR1_RXIE)) ? 1UL : 0UL);
1348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable Address match interrupt (slave mode only).
1352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ADDRIE        LL_I2C_EnableIT_ADDR
1353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_ADDR(I2C_TypeDef *I2Cx)
1357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_ADDRIE);
1359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable Address match interrupt (slave mode only).
1363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ADDRIE        LL_I2C_DisableIT_ADDR
1364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_ADDR(I2C_TypeDef *I2Cx)
1368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_ADDRIE);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 44


1370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if Address match interrupt is enabled or disabled.
1374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ADDRIE        LL_I2C_IsEnabledIT_ADDR
1375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_ADDR(I2C_TypeDef *I2Cx)
1379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_ADDRIE) == (I2C_CR1_ADDRIE)) ? 1UL : 0UL);
1381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable Not acknowledge received interrupt.
1385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          NACKIE        LL_I2C_EnableIT_NACK
1386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_NACK(I2C_TypeDef *I2Cx)
1390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_NACKIE);
1392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable Not acknowledge received interrupt.
1396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          NACKIE        LL_I2C_DisableIT_NACK
1397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_NACK(I2C_TypeDef *I2Cx)
1401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_NACKIE);
1403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if Not acknowledge received interrupt is enabled or disabled.
1407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          NACKIE        LL_I2C_IsEnabledIT_NACK
1408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_NACK(I2C_TypeDef *I2Cx)
1412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_NACKIE) == (I2C_CR1_NACKIE)) ? 1UL : 0UL);
1414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable STOP detection interrupt.
1418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          STOPIE        LL_I2C_EnableIT_STOP
1419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_STOP(I2C_TypeDef *I2Cx)
1423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_STOPIE);
1425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 45


1427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable STOP detection interrupt.
1429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          STOPIE        LL_I2C_DisableIT_STOP
1430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_STOP(I2C_TypeDef *I2Cx)
1434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_STOPIE);
1436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if STOP detection interrupt is enabled or disabled.
1440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          STOPIE        LL_I2C_IsEnabledIT_STOP
1441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_STOP(I2C_TypeDef *I2Cx)
1445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_STOPIE) == (I2C_CR1_STOPIE)) ? 1UL : 0UL);
1447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable Transfer Complete interrupt.
1451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   Any of these events will generate interrupt :
1452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Transfer Complete (TC)
1453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Transfer Complete Reload (TCR)
1454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          TCIE          LL_I2C_EnableIT_TC
1455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_TC(I2C_TypeDef *I2Cx)
1459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_TCIE);
1461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable Transfer Complete interrupt.
1465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   Any of these events will generate interrupt :
1466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Transfer Complete (TC)
1467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Transfer Complete Reload (TCR)
1468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          TCIE          LL_I2C_DisableIT_TC
1469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_TC(I2C_TypeDef *I2Cx)
1473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_TCIE);
1475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if Transfer Complete interrupt is enabled or disabled.
1479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          TCIE          LL_I2C_IsEnabledIT_TC
1480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_TC(I2C_TypeDef *I2Cx)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 46


1484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_TCIE) == (I2C_CR1_TCIE)) ? 1UL : 0UL);
1486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable Error interrupts.
1490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   Any of these errors will generate interrupt :
1493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Arbitration Loss (ARLO)
1494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Bus Error detection (BERR)
1495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Overrun/Underrun (OVR)
1496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus Timeout detection (TIMEOUT)
1497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus PEC error detection (PECERR)
1498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus Alert pin event detection (ALERT)
1499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ERRIE         LL_I2C_EnableIT_ERR
1500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_ERR(I2C_TypeDef *I2Cx)
1504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_ERRIE);
1506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable Error interrupts.
1510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   Any of these errors will generate interrupt :
1513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Arbitration Loss (ARLO)
1514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Bus Error detection (BERR)
1515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Overrun/Underrun (OVR)
1516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus Timeout detection (TIMEOUT)
1517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus PEC error detection (PECERR)
1518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus Alert pin event detection (ALERT)
1519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ERRIE         LL_I2C_DisableIT_ERR
1520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_ERR(I2C_TypeDef *I2Cx)
1524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_ERRIE);
1526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if Error interrupts are enabled or disabled.
1530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ERRIE         LL_I2C_IsEnabledIT_ERR
1531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_ERR(I2C_TypeDef *I2Cx)
1535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_ERRIE) == (I2C_CR1_ERRIE)) ? 1UL : 0UL);
1537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 47


1541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EF_FLAG_management FLAG_management
1544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
1545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Transmit data register empty flag.
1549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: When next data is written in Transmit data register.
1550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When Transmit data register is empty.
1551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          TXE           LL_I2C_IsActiveFlag_TXE
1552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_TXE(I2C_TypeDef *I2Cx)
1556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TXE) == (I2C_ISR_TXE)) ? 1UL : 0UL);
1558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Transmit interrupt flag.
1562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: When next data is written in Transmit data register.
1563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When Transmit data register is empty.
1564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          TXIS          LL_I2C_IsActiveFlag_TXIS
1565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_TXIS(I2C_TypeDef *I2Cx)
1569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TXIS) == (I2C_ISR_TXIS)) ? 1UL : 0UL);
1571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Receive data register not empty flag.
1575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: When Receive data register is read.
1576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When the received data is copied in Receive data register.
1577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          RXNE          LL_I2C_IsActiveFlag_RXNE
1578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_RXNE(I2C_TypeDef *I2Cx)
1582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_RXNE) == (I2C_ISR_RXNE)) ? 1UL : 0UL);
1584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Address matched flag (slave mode).
1588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When the received slave address matched with one of the enabled slave address.
1590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          ADDR          LL_I2C_IsActiveFlag_ADDR
1591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_ADDR(I2C_TypeDef *I2Cx)
1595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_ADDR) == (I2C_ISR_ADDR)) ? 1UL : 0UL);
1597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 48


1598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Not Acknowledge received flag.
1601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When a NACK is received after a byte transmission.
1603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          NACKF         LL_I2C_IsActiveFlag_NACK
1604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_NACK(I2C_TypeDef *I2Cx)
1608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_NACKF) == (I2C_ISR_NACKF)) ? 1UL : 0UL);
1610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Stop detection flag.
1614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When a Stop condition is detected.
1616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          STOPF         LL_I2C_IsActiveFlag_STOP
1617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_STOP(I2C_TypeDef *I2Cx)
1621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_STOPF) == (I2C_ISR_STOPF)) ? 1UL : 0UL);
1623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Transfer complete flag (master mode).
1627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When RELOAD=0, AUTOEND=0 and NBYTES date have been transferred.
1629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          TC            LL_I2C_IsActiveFlag_TC
1630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_TC(I2C_TypeDef *I2Cx)
1634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TC) == (I2C_ISR_TC)) ? 1UL : 0UL);
1636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Transfer complete flag (master mode).
1640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When RELOAD=1 and NBYTES date have been transferred.
1642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          TCR           LL_I2C_IsActiveFlag_TCR
1643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_TCR(I2C_TypeDef *I2Cx)
1647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TCR) == (I2C_ISR_TCR)) ? 1UL : 0UL);
1649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Bus error flag.
1653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When a misplaced Start or Stop condition is detected.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 49


1655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          BERR          LL_I2C_IsActiveFlag_BERR
1656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_BERR(I2C_TypeDef *I2Cx)
1660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_BERR) == (I2C_ISR_BERR)) ? 1UL : 0UL);
1662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Arbitration lost flag.
1666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When arbitration lost.
1668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          ARLO          LL_I2C_IsActiveFlag_ARLO
1669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_ARLO(I2C_TypeDef *I2Cx)
1673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_ARLO) == (I2C_ISR_ARLO)) ? 1UL : 0UL);
1675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Overrun/Underrun flag (slave mode).
1679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When an overrun/underrun error occurs (Clock Stretching Disabled).
1681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          OVR           LL_I2C_IsActiveFlag_OVR
1682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_OVR(I2C_TypeDef *I2Cx)
1686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_OVR) == (I2C_ISR_OVR)) ? 1UL : 0UL);
1688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of SMBus PEC error flag in reception.
1692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When the received PEC does not match with the PEC register content.
1696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          PECERR        LL_I2C_IsActiveSMBusFlag_PECERR
1697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveSMBusFlag_PECERR(I2C_TypeDef *I2Cx)
1701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_PECERR) == (I2C_ISR_PECERR)) ? 1UL : 0UL);
1703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of SMBus Timeout detection flag.
1707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When a timeout or extended clock timeout occurs.
1711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          TIMEOUT       LL_I2C_IsActiveSMBusFlag_TIMEOUT
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 50


1712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveSMBusFlag_TIMEOUT(I2C_TypeDef *I2Cx)
1716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TIMEOUT) == (I2C_ISR_TIMEOUT)) ? 1UL : 0UL);
1718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of SMBus alert flag.
1722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When SMBus host configuration, SMBus alert enabled and
1726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *              a falling edge event occurs on SMBA pin.
1727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          ALERT         LL_I2C_IsActiveSMBusFlag_ALERT
1728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveSMBusFlag_ALERT(I2C_TypeDef *I2Cx)
1732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_ALERT) == (I2C_ISR_ALERT)) ? 1UL : 0UL);
1734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Bus Busy flag.
1738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When a Start condition is detected.
1740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          BUSY          LL_I2C_IsActiveFlag_BUSY
1741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_BUSY(I2C_TypeDef *I2Cx)
1745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_BUSY) == (I2C_ISR_BUSY)) ? 1UL : 0UL);
1747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Clear Address Matched flag.
1751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ICR          ADDRCF        LL_I2C_ClearFlag_ADDR
1752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_ADDR(I2C_TypeDef *I2Cx)
1756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_ADDRCF);
1758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Clear Not Acknowledge flag.
1762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ICR          NACKCF        LL_I2C_ClearFlag_NACK
1763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_NACK(I2C_TypeDef *I2Cx)
1767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_NACKCF);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 51


1769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Clear Stop detection flag.
1773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ICR          STOPCF        LL_I2C_ClearFlag_STOP
1774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_STOP(I2C_TypeDef *I2Cx)
1778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_STOPCF);
1780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Clear Transmit data register empty flag (TXE).
1784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This bit can be clear by software in order to flush the transmit data register (TXDR).
1785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          TXE           LL_I2C_ClearFlag_TXE
1786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_TXE(I2C_TypeDef *I2Cx)
1790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   WRITE_REG(I2Cx->ISR, I2C_ISR_TXE);
1792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Clear Bus error flag.
1796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ICR          BERRCF        LL_I2C_ClearFlag_BERR
1797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_BERR(I2C_TypeDef *I2Cx)
1801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_BERRCF);
1803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Clear Arbitration lost flag.
1807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ICR          ARLOCF        LL_I2C_ClearFlag_ARLO
1808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_ARLO(I2C_TypeDef *I2Cx)
1812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_ARLOCF);
1814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Clear Overrun/Underrun flag.
1818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ICR          OVRCF         LL_I2C_ClearFlag_OVR
1819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_OVR(I2C_TypeDef *I2Cx)
1823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_OVRCF);
1825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 52


1826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Clear SMBus PEC error flag.
1829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ICR          PECCF         LL_I2C_ClearSMBusFlag_PECERR
1832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearSMBusFlag_PECERR(I2C_TypeDef *I2Cx)
1836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_PECCF);
1838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Clear SMBus Timeout detection flag.
1842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ICR          TIMOUTCF      LL_I2C_ClearSMBusFlag_TIMEOUT
1845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearSMBusFlag_TIMEOUT(I2C_TypeDef *I2Cx)
1849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_TIMOUTCF);
1851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Clear SMBus Alert flag.
1855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ICR          ALERTCF       LL_I2C_ClearSMBusFlag_ALERT
1858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearSMBusFlag_ALERT(I2C_TypeDef *I2Cx)
1862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_ALERTCF);
1864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
1868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EF_Data_Management Data_Management
1871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
1872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable automatic STOP condition generation (master mode).
1876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   Automatic end mode : a STOP condition is automatically sent when NBYTES data are transf
1877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         This bit has no effect in slave mode or when RELOAD bit is set.
1878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          AUTOEND       LL_I2C_EnableAutoEndMode
1879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableAutoEndMode(I2C_TypeDef *I2Cx)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 53


1883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR2, I2C_CR2_AUTOEND);
1885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable automatic STOP condition generation (master mode).
1889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   Software end mode : TC flag is set when NBYTES data are transferre, stretching SCL low.
1890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          AUTOEND       LL_I2C_DisableAutoEndMode
1891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableAutoEndMode(I2C_TypeDef *I2Cx)
1895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR2, I2C_CR2_AUTOEND);
1897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if automatic STOP condition is enabled or disabled.
1901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          AUTOEND       LL_I2C_IsEnabledAutoEndMode
1902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledAutoEndMode(I2C_TypeDef *I2Cx)
1906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR2, I2C_CR2_AUTOEND) == (I2C_CR2_AUTOEND)) ? 1UL : 0UL);
1908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable reload mode (master mode).
1912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The transfer is not completed after the NBYTES data transfer, NBYTES will be reloaded w
1913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          RELOAD       LL_I2C_EnableReloadMode
1914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableReloadMode(I2C_TypeDef *I2Cx)
1918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR2, I2C_CR2_RELOAD);
1920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable reload mode (master mode).
1924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The transfer is completed after the NBYTES data transfer(STOP or RESTART will follow).
1925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          RELOAD       LL_I2C_DisableReloadMode
1926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableReloadMode(I2C_TypeDef *I2Cx)
1930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR2, I2C_CR2_RELOAD);
1932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if reload mode is enabled or disabled.
1936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          RELOAD       LL_I2C_IsEnabledReloadMode
1937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 54


1940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledReloadMode(I2C_TypeDef *I2Cx)
1941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR2, I2C_CR2_RELOAD) == (I2C_CR2_RELOAD)) ? 1UL : 0UL);
1943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure the number of bytes for transfer.
1947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   Changing these bits when START bit is set is not allowed.
1948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          NBYTES           LL_I2C_SetTransferSize
1949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  TransferSize This parameter must be a value between Min_Data=0x00 and Max_Data=0xFF.
1951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetTransferSize(I2C_TypeDef *I2Cx, uint32_t TransferSize)
1954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR2, I2C_CR2_NBYTES, TransferSize << I2C_CR2_NBYTES_Pos);
1956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the number of bytes configured for transfer.
1960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          NBYTES           LL_I2C_GetTransferSize
1961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xFF
1963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetTransferSize(I2C_TypeDef *I2Cx)
1965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR2, I2C_CR2_NBYTES) >> I2C_CR2_NBYTES_Pos);
1967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Prepare the generation of a ACKnowledge or Non ACKnowledge condition after the address 
1971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****             or next received byte.
1972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   Usage in Slave mode only.
1973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          NACK          LL_I2C_AcknowledgeNextData
1974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  TypeAcknowledge This parameter can be one of the following values:
1976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ACK
1977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_NACK
1978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_AcknowledgeNextData(I2C_TypeDef *I2Cx, uint32_t TypeAcknowledge)
 260              		.loc 3 1980 22 view .LVU61
 261              	.LBB47:
1981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR2, I2C_CR2_NACK, TypeAcknowledge);
 262              		.loc 3 1982 3 view .LVU62
 263 005c 4268     		ldr	r2, [r0, #4]
 264 005e 0449     		ldr	r1, .L9+4
 265              	.LVL17:
 266              		.loc 3 1982 3 is_stmt 0 view .LVU63
 267 0060 0A40     		ands	r2, r1
 268 0062 1343     		orrs	r3, r2
 269              	.LVL18:
 270              		.loc 3 1982 3 view .LVU64
 271 0064 4360     		str	r3, [r0, #4]
 272              	.LVL19:
 273              		.loc 3 1982 3 view .LVU65
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 55


 274              	.LBE47:
 275              	.LBE46:
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   return SUCCESS;
 276              		.loc 1 189 3 is_stmt 1 view .LVU66
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** }
 277              		.loc 1 190 1 is_stmt 0 view .LVU67
 278 0066 0020     		movs	r0, #0
 279              	.LVL20:
 280              		.loc 1 190 1 view .LVU68
 281              		@ sp needed
 282 0068 30BD     		pop	{r4, r5, pc}
 283              	.L10:
 284 006a C046     		.align	2
 285              	.L9:
 286 006c FFE0FFFF 		.word	-7937
 287 0070 FF7FFFFF 		.word	-32769
 288 0074 FFFFCFFF 		.word	-3145729
 289              		.cfi_endproc
 290              	.LFE187:
 292              		.section	.text.LL_I2C_StructInit,"ax",%progbits
 293              		.align	1
 294              		.global	LL_I2C_StructInit
 295              		.syntax unified
 296              		.code	16
 297              		.thumb_func
 299              	LL_I2C_StructInit:
 300              	.LVL21:
 301              	.LFB188:
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** 
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** /**
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * @brief  Set each @ref LL_I2C_InitTypeDef field to default value.
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * @param  I2C_InitStruct Pointer to a @ref LL_I2C_InitTypeDef structure.
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   * @retval None
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   */
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** void LL_I2C_StructInit(LL_I2C_InitTypeDef *I2C_InitStruct)
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** {
 302              		.loc 1 198 1 is_stmt 1 view -0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306              		@ link register save eliminated.
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   /* Set I2C_InitStruct fields to default values */
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   I2C_InitStruct->PeripheralMode  = LL_I2C_MODE_I2C;
 307              		.loc 1 200 3 view .LVU70
 308              		.loc 1 200 35 is_stmt 0 view .LVU71
 309 0000 0023     		movs	r3, #0
 310 0002 0360     		str	r3, [r0]
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   I2C_InitStruct->Timing          = 0U;
 311              		.loc 1 201 3 is_stmt 1 view .LVU72
 312              		.loc 1 201 35 is_stmt 0 view .LVU73
 313 0004 4360     		str	r3, [r0, #4]
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   I2C_InitStruct->AnalogFilter    = LL_I2C_ANALOGFILTER_ENABLE;
 314              		.loc 1 202 3 is_stmt 1 view .LVU74
 315              		.loc 1 202 35 is_stmt 0 view .LVU75
 316 0006 8360     		str	r3, [r0, #8]
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   I2C_InitStruct->DigitalFilter   = 0U;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 56


 317              		.loc 1 203 3 is_stmt 1 view .LVU76
 318              		.loc 1 203 35 is_stmt 0 view .LVU77
 319 0008 C360     		str	r3, [r0, #12]
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   I2C_InitStruct->OwnAddress1     = 0U;
 320              		.loc 1 204 3 is_stmt 1 view .LVU78
 321              		.loc 1 204 35 is_stmt 0 view .LVU79
 322 000a 0361     		str	r3, [r0, #16]
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   I2C_InitStruct->TypeAcknowledge = LL_I2C_NACK;
 323              		.loc 1 205 3 is_stmt 1 view .LVU80
 324              		.loc 1 205 35 is_stmt 0 view .LVU81
 325 000c 8022     		movs	r2, #128
 326 000e 1202     		lsls	r2, r2, #8
 327 0010 4261     		str	r2, [r0, #20]
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c ****   I2C_InitStruct->OwnAddrSize     = LL_I2C_OWNADDRESS1_7BIT;
 328              		.loc 1 206 3 is_stmt 1 view .LVU82
 329              		.loc 1 206 35 is_stmt 0 view .LVU83
 330 0012 8361     		str	r3, [r0, #24]
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_i2c.c **** }
 331              		.loc 1 207 1 view .LVU84
 332              		@ sp needed
 333 0014 7047     		bx	lr
 334              		.cfi_endproc
 335              	.LFE188:
 337              		.text
 338              	.Letext0:
 339              		.file 4 "e:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 340              		.file 5 "e:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 341              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h"
 342              		.file 7 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s 			page 57


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_ll_i2c.c
C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s:18     .text.LL_I2C_DeInit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s:24     .text.LL_I2C_DeInit:00000000 LL_I2C_DeInit
C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s:89     .text.LL_I2C_DeInit:00000024 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s:98     .text.LL_I2C_Init:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s:104    .text.LL_I2C_Init:00000000 LL_I2C_Init
C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s:286    .text.LL_I2C_Init:0000006c $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s:293    .text.LL_I2C_StructInit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccqmtnux.s:299    .text.LL_I2C_StructInit:00000000 LL_I2C_StructInit

NO UNDEFINED SYMBOLS
