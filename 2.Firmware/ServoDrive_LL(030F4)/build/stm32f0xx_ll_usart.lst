ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0xx_ll_usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.LL_USART_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	LL_USART_DeInit
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	LL_USART_DeInit:
  25              	.LVL0:
  26              	.LFB312:
  27              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @file    stm32f0xx_ll_usart.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @brief   USART LL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   ******************************************************************************
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USE_FULL_LL_DRIVER)
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /* Includes ------------------------------------------------------------------*/
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #include "stm32f0xx_ll_usart.h"
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #include "stm32f0xx_ll_rcc.h"
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #include "stm32f0xx_ll_bus.h"
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #ifdef USE_FULL_ASSERT
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #include "stm32_assert.h"
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #else
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define assert_param(expr) ((void)0U)
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USE_FULL_ASSERT */
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /** @addtogroup STM32F0xx_LL_Driver
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 2


  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @{
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined (USART1) || defined (USART2) || defined (USART3) || defined (UART4) || defined (UART5) 
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /** @addtogroup USART_LL
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @{
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /* Private macros ------------------------------------------------------------*/
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /** @addtogroup USART_LL_Private_Macros
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @{
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /* __BAUDRATE__ The maximum Baud Rate is derived from the maximum clock available
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****  *              divided by the smallest oversampling used on the USART (i.e. 8)    */
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_BAUDRATE(__BAUDRATE__) ((__BAUDRATE__) <= 6000000U)
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /* __VALUE__ In case of oversampling by 16 and 8, BRR content must be greater than or equal to 16d.
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_BRR_MIN(__VALUE__) ((__VALUE__) >= 16U)
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_DIRECTION(__VALUE__) (((__VALUE__) == LL_USART_DIRECTION_NONE) \
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                           || ((__VALUE__) == LL_USART_DIRECTION_RX) \
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                           || ((__VALUE__) == LL_USART_DIRECTION_TX) \
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                           || ((__VALUE__) == LL_USART_DIRECTION_TX_RX))
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_PARITY(__VALUE__) (((__VALUE__) == LL_USART_PARITY_NONE) \
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                        || ((__VALUE__) == LL_USART_PARITY_EVEN) \
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                        || ((__VALUE__) == LL_USART_PARITY_ODD))
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART_7BITS_SUPPORT)
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_DATAWIDTH(__VALUE__) (((__VALUE__) == LL_USART_DATAWIDTH_7B) \
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                           || ((__VALUE__) == LL_USART_DATAWIDTH_8B) \
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                           || ((__VALUE__) == LL_USART_DATAWIDTH_9B))
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #else
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_DATAWIDTH(__VALUE__) (((__VALUE__) == LL_USART_DATAWIDTH_8B) \
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                           || ((__VALUE__) == LL_USART_DATAWIDTH_9B))
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART_7BITS_SUPPORT */
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_OVERSAMPLING(__VALUE__) (((__VALUE__) == LL_USART_OVERSAMPLING_16) \
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                              || ((__VALUE__) == LL_USART_OVERSAMPLING_8))
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_LASTBITCLKOUTPUT(__VALUE__) (((__VALUE__) == LL_USART_LASTCLKPULSE_NO_OUTPUT) \
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                                  || ((__VALUE__) == LL_USART_LASTCLKPULSE_OUTPUT))
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_CLOCKPHASE(__VALUE__) (((__VALUE__) == LL_USART_PHASE_1EDGE) \
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                            || ((__VALUE__) == LL_USART_PHASE_2EDGE))
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_CLOCKPOLARITY(__VALUE__) (((__VALUE__) == LL_USART_POLARITY_LOW) \
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                               || ((__VALUE__) == LL_USART_POLARITY_HIGH))
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_CLOCKOUTPUT(__VALUE__) (((__VALUE__) == LL_USART_CLOCK_DISABLE) \
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                             || ((__VALUE__) == LL_USART_CLOCK_ENABLE))
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 3


  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART_SMARTCARD_SUPPORT)
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_STOPBITS(__VALUE__) (((__VALUE__) == LL_USART_STOPBITS_0_5) \
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                          || ((__VALUE__) == LL_USART_STOPBITS_1) \
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                          || ((__VALUE__) == LL_USART_STOPBITS_1_5) \
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                          || ((__VALUE__) == LL_USART_STOPBITS_2))
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #else
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_STOPBITS(__VALUE__) (((__VALUE__) == LL_USART_STOPBITS_1) \
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                          || ((__VALUE__) == LL_USART_STOPBITS_2))
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_HWCONTROL(__VALUE__) (((__VALUE__) == LL_USART_HWCONTROL_NONE) \
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                           || ((__VALUE__) == LL_USART_HWCONTROL_RTS) \
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                           || ((__VALUE__) == LL_USART_HWCONTROL_CTS) \
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                           || ((__VALUE__) == LL_USART_HWCONTROL_RTS_CTS))
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /**
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @}
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /* Private function prototypes -----------------------------------------------*/
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /* Exported functions --------------------------------------------------------*/
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /** @addtogroup USART_LL_Exported_Functions
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @{
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /** @addtogroup USART_LL_EF_Init
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @{
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /**
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @brief  De-initialize USART registers (Registers restored to their default values).
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @param  USARTx USART Instance
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @retval An ErrorStatus enumeration value:
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *          - SUCCESS: USART registers are de-initialized
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *          - ERROR: USART registers are not de-initialized
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** ErrorStatus LL_USART_DeInit(USART_TypeDef *USARTx)
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** {
  28              		.loc 1 127 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   ErrorStatus status = SUCCESS;
  33              		.loc 1 128 3 view .LVU1
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   /* Check the parameters */
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_UART_INSTANCE(USARTx));
  34              		.loc 1 131 3 view .LVU2
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   if (USARTx == USART1)
  35              		.loc 1 133 3 view .LVU3
  36              		.loc 1 133 6 is_stmt 0 view .LVU4
  37 0000 084B     		ldr	r3, .L5
  38 0002 9842     		cmp	r0, r3
  39 0004 01D0     		beq	.L4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 4


 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Force reset of USART clock */
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP2_ForceReset(LL_APB1_GRP2_PERIPH_USART1);
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Release reset of USART clock */
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP2_ReleaseReset(LL_APB1_GRP2_PERIPH_USART1);
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART2)
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   else if (USARTx == USART2)
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Force reset of USART clock */
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP1_ForceReset(LL_APB1_GRP1_PERIPH_USART2);
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Release reset of USART clock */
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP1_ReleaseReset(LL_APB1_GRP1_PERIPH_USART2);
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART2 */
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART3)
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   else if (USARTx == USART3)
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Force reset of USART clock */
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP1_ForceReset(LL_APB1_GRP1_PERIPH_USART3);
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Release reset of USART clock */
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP1_ReleaseReset(LL_APB1_GRP1_PERIPH_USART3);
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART3 */
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART4)
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   else if (USARTx == USART4)
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Force reset of USART clock */
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP1_ForceReset(LL_APB1_GRP1_PERIPH_USART4);
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Release reset of USART clock */
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP1_ReleaseReset(LL_APB1_GRP1_PERIPH_USART4);
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART4 */
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART5)
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   else if (USARTx == USART5)
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Force reset of USART clock */
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP1_ForceReset(LL_APB1_GRP1_PERIPH_USART5);
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Release reset of USART clock */
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP1_ReleaseReset(LL_APB1_GRP1_PERIPH_USART5);
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART5 */
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART6)
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   else if (USARTx == USART6)
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Force reset of USART clock */
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP2_ForceReset(LL_APB1_GRP2_PERIPH_USART6);
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Release reset of USART clock */
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP2_ReleaseReset(LL_APB1_GRP2_PERIPH_USART6);
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART6 */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 5


 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART7)
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   else if (USARTx == USART7)
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Force reset of USART clock */
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP2_ForceReset(LL_APB1_GRP2_PERIPH_USART7);
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Release reset of USART clock */
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP2_ReleaseReset(LL_APB1_GRP2_PERIPH_USART7);
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART7 */
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART8)
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   else if (USARTx == USART8)
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Force reset of USART clock */
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP2_ForceReset(LL_APB1_GRP2_PERIPH_USART8);
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Release reset of USART clock */
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP2_ReleaseReset(LL_APB1_GRP2_PERIPH_USART8);
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART8 */
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   else
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     status = ERROR;
  40              		.loc 1 213 12 view .LVU5
  41 0006 0120     		movs	r0, #1
  42              	.LVL1:
  43              	.L2:
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   return (status);
  44              		.loc 1 216 3 is_stmt 1 view .LVU6
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** }
  45              		.loc 1 217 1 is_stmt 0 view .LVU7
  46              		@ sp needed
  47 0008 7047     		bx	lr
  48              	.LVL2:
  49              	.L4:
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  50              		.loc 1 136 5 is_stmt 1 view .LVU8
  51              	.LBB16:
  52              	.LBI16:
  53              		.file 2 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @file    stm32f0xx_ll_bus.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   @verbatim                
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****     [..]  
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write 
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 6


  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****     [..]  
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @attention
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * All rights reserved.</center></h2>
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * the "License"; You may not use this file except in compliance with the
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * License. You may obtain a copy of the License at:
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *                        opensource.org/licenses/BSD-3-Clause
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ******************************************************************************
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #ifndef __STM32F0xx_LL_BUS_H
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define __STM32F0xx_LL_BUS_H
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #ifdef __cplusplus
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** extern "C" {
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #include "stm32f0xx.h"
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @addtogroup STM32F0xx_LL_Driver
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(RCC)
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 7


  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHBENR_DMA1EN
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(DMA2)
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2           RCC_AHBENR_DMA2EN
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*DMA2*/
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM           RCC_AHBENR_SRAMEN
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FLASH          RCC_AHBENR_FLITFEN
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHBENR_CRCEN
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOA          RCC_AHBENR_GPIOAEN
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOB          RCC_AHBENR_GPIOBEN
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOC          RCC_AHBENR_GPIOCEN
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(GPIOD)
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOD          RCC_AHBENR_GPIODEN
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*GPIOD*/
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(GPIOE)
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOE          RCC_AHBENR_GPIOEEN
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*GPIOE*/
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOF          RCC_AHBENR_GPIOFEN
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TSC)
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_TSC            RCC_AHBENR_TSCEN
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TSC*/
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM2)
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR_TIM2EN
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM2*/
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR_TIM3EN
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM6)
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR_TIM6EN
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM6*/
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM7)
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR_TIM7EN
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM7*/
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM14          RCC_APB1ENR_TIM14EN
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR_WWDGEN
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(SPI2)
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR_SPI2EN
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*SPI2*/
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART2)
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR_USART2EN
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART2 */
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART3)
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART3         RCC_APB1ENR_USART3EN
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART3 */
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART4)
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART4         RCC_APB1ENR_USART4EN
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART4 */
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART5)
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART5         RCC_APB1ENR_USART5EN
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART5 */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 8


 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR_I2C1EN
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(I2C2)
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR_I2C2EN
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*I2C2*/
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USB)
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR_USBEN
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USB */
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(CAN)
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN            RCC_APB1ENR_CANEN
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*CAN*/
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(CRS)
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CRS            RCC_APB1ENR_CRSEN
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*CRS*/
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR_PWREN
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(DAC)
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR_DACEN
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*DAC*/
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(CEC)
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CEC            RCC_APB1ENR_CECEN
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*CEC*/
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP2_PERIPH  APB1 GRP2 PERIPH
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_SYSCFG         RCC_APB2ENR_SYSCFGEN
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ADC1           RCC_APB2ENR_ADC1EN
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART8)
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART8         RCC_APB2ENR_USART8EN
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*USART8*/
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART7)
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART7         RCC_APB2ENR_USART7EN
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*USART7*/
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART6)
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART6         RCC_APB2ENR_USART6EN
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*USART6*/
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM1           RCC_APB2ENR_TIM1EN
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_SPI1           RCC_APB2ENR_SPI1EN
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART1         RCC_APB2ENR_USART1EN
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM15)
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM15          RCC_APB2ENR_TIM15EN
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM15*/
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM16          RCC_APB2ENR_TIM16EN
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM17          RCC_APB2ENR_TIM17EN
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_DBGMCU         RCC_APB2ENR_DBGMCUEN
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 9


 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_EnableClock\n
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_EnableClock\n
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_EnableClock\n
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_EnableClock\n
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_EnableClock\n
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOAEN       LL_AHB1_GRP1_EnableClock\n
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_EnableClock\n
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_EnableClock\n
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_EnableClock\n
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_EnableClock\n
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_EnableClock\n
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       TSCEN         LL_AHB1_GRP1_EnableClock
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBENR, Periphs);
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_IsEnabledClock\n
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_IsEnabledClock\n
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_IsEnabledClock\n
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOAEN       LL_AHB1_GRP1_IsEnabledClock\n
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 10


 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_IsEnabledClock\n
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_IsEnabledClock\n
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_IsEnabledClock\n
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_IsEnabledClock\n
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_IsEnabledClock\n
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       TSCEN         LL_AHB1_GRP1_IsEnabledClock
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   return (READ_BIT(RCC->AHBENR, Periphs) == Periphs);
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_DisableClock\n
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_DisableClock\n
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_DisableClock\n
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_DisableClock\n
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_DisableClock\n
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOAEN       LL_AHB1_GRP1_DisableClock\n
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_DisableClock\n
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_DisableClock\n
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_DisableClock\n
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_DisableClock\n
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_DisableClock\n
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       TSCEN         LL_AHB1_GRP1_DisableClock
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 11


 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBENR, Periphs);
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBRSTR      GPIOARST      LL_AHB1_GRP1_ForceReset\n
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOBRST      LL_AHB1_GRP1_ForceReset\n
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOCRST      LL_AHB1_GRP1_ForceReset\n
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIODRST      LL_AHB1_GRP1_ForceReset\n
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOERST      LL_AHB1_GRP1_ForceReset\n
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOFRST      LL_AHB1_GRP1_ForceReset\n
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ForceReset
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->AHBRSTR, Periphs);
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBRSTR      GPIOARST      LL_AHB1_GRP1_ReleaseReset\n
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOBRST      LL_AHB1_GRP1_ReleaseReset\n
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOCRST      LL_AHB1_GRP1_ReleaseReset\n
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIODRST      LL_AHB1_GRP1_ReleaseReset\n
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOERST      LL_AHB1_GRP1_ReleaseReset\n
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOFRST      LL_AHB1_GRP1_ReleaseReset\n
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ReleaseReset
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 12


 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBRSTR, Periphs);
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1_GRP1 APB1 GRP1
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock (available in register 1).
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_EnableClock\n
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_EnableClock\n
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_EnableClock\n
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_EnableClock\n
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_EnableClock\n
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_EnableClock\n
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_EnableClock\n
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_EnableClock\n
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_EnableClock\n
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART4EN      LL_APB1_GRP1_EnableClock\n
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART5EN      LL_APB1_GRP1_EnableClock\n
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_EnableClock\n
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_EnableClock\n
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_EnableClock\n
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CANEN         LL_APB1_GRP1_EnableClock\n
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CRSEN         LL_APB1_GRP1_EnableClock\n
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_EnableClock\n
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_EnableClock\n
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_EnableClock
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 13


 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not (available in register 1).
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_IsEnabledClock\n
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_IsEnabledClock\n
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART4EN      LL_APB1_GRP1_IsEnabledClock\n
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART5EN      LL_APB1_GRP1_IsEnabledClock\n
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_IsEnabledClock\n
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CANEN         LL_APB1_GRP1_IsEnabledClock\n
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CRSEN         LL_APB1_GRP1_IsEnabledClock\n
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_IsEnabledClock\n
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_IsEnabledClock\n
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_IsEnabledClock
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   return (READ_BIT(RCC->APB1ENR, Periphs) == Periphs);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 14


 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock (available in register 1).
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_DisableClock\n
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_DisableClock\n
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_DisableClock\n
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_DisableClock\n
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_DisableClock\n
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_DisableClock\n
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_DisableClock\n
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_DisableClock\n
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_DisableClock\n
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART4EN      LL_APB1_GRP1_DisableClock\n
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART5EN      LL_APB1_GRP1_DisableClock\n
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_DisableClock\n
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_DisableClock\n
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_DisableClock\n
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CANEN         LL_APB1_GRP1_DisableClock\n
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CRSEN         LL_APB1_GRP1_DisableClock\n
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_DisableClock\n
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_DisableClock\n
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_DisableClock
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR, Periphs);
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset (available in register 1).
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST       LL_APB1_GRP1_ForceReset\n
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST       LL_APB1_GRP1_ForceReset\n
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST       LL_APB1_GRP1_ForceReset\n
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 15


 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST       LL_APB1_GRP1_ForceReset\n
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM14RST      LL_APB1_GRP1_ForceReset\n
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST       LL_APB1_GRP1_ForceReset\n
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST       LL_APB1_GRP1_ForceReset\n
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART2RST     LL_APB1_GRP1_ForceReset\n
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART3RST     LL_APB1_GRP1_ForceReset\n
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART4RST     LL_APB1_GRP1_ForceReset\n
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART5RST     LL_APB1_GRP1_ForceReset\n
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST       LL_APB1_GRP1_ForceReset\n
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST       LL_APB1_GRP1_ForceReset\n
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USBRST        LL_APB1_GRP1_ForceReset\n
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CANRST        LL_APB1_GRP1_ForceReset\n
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CRSRST        LL_APB1_GRP1_ForceReset\n
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     PWRRST        LL_APB1_GRP1_ForceReset\n
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     DACRST        LL_APB1_GRP1_ForceReset\n
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CECRST        LL_APB1_GRP1_ForceReset
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR, Periphs);
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset (available in register 1).
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST       LL_APB1_GRP1_ReleaseReset\n
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST       LL_APB1_GRP1_ReleaseReset\n
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST       LL_APB1_GRP1_ReleaseReset\n
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST       LL_APB1_GRP1_ReleaseReset\n
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM14RST      LL_APB1_GRP1_ReleaseReset\n
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST       LL_APB1_GRP1_ReleaseReset\n
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST       LL_APB1_GRP1_ReleaseReset\n
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART2RST     LL_APB1_GRP1_ReleaseReset\n
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART3RST     LL_APB1_GRP1_ReleaseReset\n
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 16


 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART4RST     LL_APB1_GRP1_ReleaseReset\n
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART5RST     LL_APB1_GRP1_ReleaseReset\n
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST       LL_APB1_GRP1_ReleaseReset\n
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST       LL_APB1_GRP1_ReleaseReset\n
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USBRST        LL_APB1_GRP1_ReleaseReset\n
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CANRST        LL_APB1_GRP1_ReleaseReset\n
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CRSRST        LL_APB1_GRP1_ReleaseReset\n
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     PWRRST        LL_APB1_GRP1_ReleaseReset\n
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     DACRST        LL_APB1_GRP1_ReleaseReset\n
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CECRST        LL_APB1_GRP1_ReleaseReset
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR, Periphs);
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1_GRP2 APB1 GRP2
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock (available in register 2).
 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB1_GRP2_EnableClock\n
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      ADC1EN        LL_APB1_GRP2_EnableClock\n
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART8EN      LL_APB1_GRP2_EnableClock\n
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART7EN      LL_APB1_GRP2_EnableClock\n
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART6EN      LL_APB1_GRP2_EnableClock\n
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM1EN        LL_APB1_GRP2_EnableClock\n
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB1_GRP2_EnableClock\n
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 17


 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB1_GRP2_EnableClock\n
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM15EN       LL_APB1_GRP2_EnableClock\n
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM16EN       LL_APB1_GRP2_EnableClock\n
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM17EN       LL_APB1_GRP2_EnableClock\n
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      DBGMCUEN      LL_APB1_GRP2_EnableClock
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SYSCFG
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ADC1
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART8 (*)
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART7 (*)
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART6 (*)
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM1
 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SPI1
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART1
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM15 (*)
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM16
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM17
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_DBGMCU
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_EnableClock(uint32_t Periphs)
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not (available in register 2).
 676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB1_GRP2_IsEnabledClock\n
 677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      ADC1EN        LL_APB1_GRP2_IsEnabledClock\n
 678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART8EN      LL_APB1_GRP2_IsEnabledClock\n
 679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART7EN      LL_APB1_GRP2_IsEnabledClock\n
 680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART6EN      LL_APB1_GRP2_IsEnabledClock\n
 681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM1EN        LL_APB1_GRP2_IsEnabledClock\n
 682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB1_GRP2_IsEnabledClock\n
 683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB1_GRP2_IsEnabledClock\n
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM15EN       LL_APB1_GRP2_IsEnabledClock\n
 685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM16EN       LL_APB1_GRP2_IsEnabledClock\n
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM17EN       LL_APB1_GRP2_IsEnabledClock\n
 687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      DBGMCUEN      LL_APB1_GRP2_IsEnabledClock
 688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SYSCFG
 690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ADC1
 691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART8 (*)
 692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART7 (*)
 693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART6 (*)
 694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM1
 695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SPI1
 696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART1
 697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM15 (*)
 698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM16
 699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM17
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 18


 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_DBGMCU
 701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP2_IsEnabledClock(uint32_t Periphs)
 706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   return (READ_BIT(RCC->APB2ENR, Periphs) == Periphs);
 708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock (available in register 2).
 712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB1_GRP2_DisableClock\n
 713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      ADC1EN        LL_APB1_GRP2_DisableClock\n
 714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART8EN      LL_APB1_GRP2_DisableClock\n
 715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART7EN      LL_APB1_GRP2_DisableClock\n
 716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART6EN      LL_APB1_GRP2_DisableClock\n
 717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM1EN        LL_APB1_GRP2_DisableClock\n
 718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB1_GRP2_DisableClock\n
 719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB1_GRP2_DisableClock\n
 720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM15EN       LL_APB1_GRP2_DisableClock\n
 721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM16EN       LL_APB1_GRP2_DisableClock\n
 722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM17EN       LL_APB1_GRP2_DisableClock\n
 723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      DBGMCUEN      LL_APB1_GRP2_DisableClock
 724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SYSCFG
 726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ADC1
 727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART8 (*)
 728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART7 (*)
 729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART6 (*)
 730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM1
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SPI1
 732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART1
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM15 (*)
 734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM16
 735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM17
 736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_DBGMCU
 737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_DisableClock(uint32_t Periphs)
 742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2ENR, Periphs);
 744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset (available in register 2).
 748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB2RSTR     SYSCFGRST     LL_APB1_GRP2_ForceReset\n
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     ADC1RST       LL_APB1_GRP2_ForceReset\n
 750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     USART8RST     LL_APB1_GRP2_ForceReset\n
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     USART7RST     LL_APB1_GRP2_ForceReset\n
 752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     USART6RST     LL_APB1_GRP2_ForceReset\n
 753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     TIM1RST       LL_APB1_GRP2_ForceReset\n
 754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     SPI1RST       LL_APB1_GRP2_ForceReset\n
 755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     USART1RST     LL_APB1_GRP2_ForceReset\n
 756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     TIM15RST      LL_APB1_GRP2_ForceReset\n
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 19


 757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     TIM16RST      LL_APB1_GRP2_ForceReset\n
 758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     TIM17RST      LL_APB1_GRP2_ForceReset\n
 759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     DBGMCURST     LL_APB1_GRP2_ForceReset
 760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ALL
 762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SYSCFG
 763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ADC1
 764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART8 (*)
 765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART7 (*)
 766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART6 (*)
 767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM1
 768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SPI1
 769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART1
 770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM15 (*)
 771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM16
 772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM17
 773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_DBGMCU
 774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_ForceReset(uint32_t Periphs)
  54              		.loc 2 778 22 view .LVU9
  55              	.LBB17:
 779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->APB2RSTR, Periphs);
  56              		.loc 2 780 3 view .LVU10
  57 000a 074B     		ldr	r3, .L5+4
  58 000c D968     		ldr	r1, [r3, #12]
  59 000e 8022     		movs	r2, #128
  60 0010 D201     		lsls	r2, r2, #7
  61 0012 0A43     		orrs	r2, r1
  62 0014 DA60     		str	r2, [r3, #12]
  63              	.LVL3:
  64              		.loc 2 780 3 is_stmt 0 view .LVU11
  65              	.LBE17:
  66              	.LBE16:
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
  67              		.loc 1 139 5 is_stmt 1 view .LVU12
  68              	.LBB18:
  69              	.LBI18:
 781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset (available in register 2).
 785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB2RSTR     SYSCFGRST     LL_APB1_GRP2_ReleaseReset\n
 786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     ADC1RST       LL_APB1_GRP2_ReleaseReset\n
 787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     USART8RST     LL_APB1_GRP2_ReleaseReset\n
 788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     USART7RST     LL_APB1_GRP2_ReleaseReset\n
 789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     USART6RST     LL_APB1_GRP2_ReleaseReset\n
 790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     TIM1RST       LL_APB1_GRP2_ReleaseReset\n
 791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     SPI1RST       LL_APB1_GRP2_ReleaseReset\n
 792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     USART1RST     LL_APB1_GRP2_ReleaseReset\n
 793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     TIM15RST      LL_APB1_GRP2_ReleaseReset\n
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     TIM16RST      LL_APB1_GRP2_ReleaseReset\n
 795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     TIM17RST      LL_APB1_GRP2_ReleaseReset\n
 796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     DBGMCURST     LL_APB1_GRP2_ReleaseReset
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 20


 797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ALL
 799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SYSCFG
 800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ADC1
 801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART8 (*)
 802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART7 (*)
 803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART6 (*)
 804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM1
 805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SPI1
 806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART1
 807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM15 (*)
 808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM16
 809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM17
 810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_DBGMCU
 811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_ReleaseReset(uint32_t Periphs)
  70              		.loc 2 815 22 view .LVU13
  71              	.LBB19:
 816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2RSTR, Periphs);
  72              		.loc 2 817 3 view .LVU14
  73 0016 DA68     		ldr	r2, [r3, #12]
  74 0018 0449     		ldr	r1, .L5+8
  75 001a 0A40     		ands	r2, r1
  76 001c DA60     		str	r2, [r3, #12]
  77              	.LBE19:
  78              	.LBE18:
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  79              		.loc 1 128 15 is_stmt 0 view .LVU15
  80 001e 0020     		movs	r0, #0
  81              	.LVL4:
  82              	.LBB21:
  83              	.LBB20:
 818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
  84              		.loc 2 818 1 view .LVU16
  85 0020 F2E7     		b	.L2
  86              	.L6:
  87 0022 C046     		.align	2
  88              	.L5:
  89 0024 00380140 		.word	1073821696
  90 0028 00100240 		.word	1073876992
  91 002c FFBFFFFF 		.word	-16385
  92              	.LBE20:
  93              	.LBE21:
  94              		.cfi_endproc
  95              	.LFE312:
  97              		.global	__aeabi_uidiv
  98              		.section	.text.LL_USART_Init,"ax",%progbits
  99              		.align	1
 100              		.global	LL_USART_Init
 101              		.syntax unified
 102              		.code	16
 103              		.thumb_func
 105              	LL_USART_Init:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 21


 106              	.LVL5:
 107              	.LFB313:
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /**
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @brief  Initialize USART registers according to the specified
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *         parameters in USART_InitStruct.
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @note   As some bits in USART configuration registers can only be written when
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *         the USART is disabled (USART_CR1_UE bit =0), USART Peripheral should be in disabled sta
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *         this function. Otherwise, ERROR result will be returned.
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @note   Baud rate value stored in USART_InitStruct BaudRate field, should be valid (different f
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @param  USARTx USART Instance
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @param  USART_InitStruct pointer to a LL_USART_InitTypeDef structure
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *         that contains the configuration information for the specified USART peripheral.
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @retval An ErrorStatus enumeration value:
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *          - SUCCESS: USART registers are initialized according to USART_InitStruct content
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *          - ERROR: Problem occurred during USART Registers initialization
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** ErrorStatus LL_USART_Init(USART_TypeDef *USARTx, LL_USART_InitTypeDef *USART_InitStruct)
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** {
 108              		.loc 1 234 1 is_stmt 1 view -0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112              		.loc 1 234 1 is_stmt 0 view .LVU18
 113 0000 70B5     		push	{r4, r5, r6, lr}
 114              	.LCFI0:
 115              		.cfi_def_cfa_offset 16
 116              		.cfi_offset 4, -16
 117              		.cfi_offset 5, -12
 118              		.cfi_offset 6, -8
 119              		.cfi_offset 14, -4
 120 0002 0400     		movs	r4, r0
 121 0004 0D00     		movs	r5, r1
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   ErrorStatus status = ERROR;
 122              		.loc 1 235 3 is_stmt 1 view .LVU19
 123              	.LVL6:
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   uint32_t periphclk = LL_RCC_PERIPH_FREQUENCY_NO;
 124              		.loc 1 236 3 view .LVU20
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART2)||defined(USART3)||defined(USART4)
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   LL_RCC_ClocksTypeDef RCC_Clocks;
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART2 ||USART3 || USART4 */
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   /* Check the parameters */
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_UART_INSTANCE(USARTx));
 125              		.loc 1 242 3 view .LVU21
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_LL_USART_BAUDRATE(USART_InitStruct->BaudRate));
 126              		.loc 1 243 3 view .LVU22
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_LL_USART_DATAWIDTH(USART_InitStruct->DataWidth));
 127              		.loc 1 244 3 view .LVU23
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_LL_USART_STOPBITS(USART_InitStruct->StopBits));
 128              		.loc 1 245 3 view .LVU24
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_LL_USART_PARITY(USART_InitStruct->Parity));
 129              		.loc 1 246 3 view .LVU25
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_LL_USART_DIRECTION(USART_InitStruct->TransferDirection));
 130              		.loc 1 247 3 view .LVU26
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_LL_USART_HWCONTROL(USART_InitStruct->HardwareFlowControl));
 131              		.loc 1 248 3 view .LVU27
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 22


 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_LL_USART_OVERSAMPLING(USART_InitStruct->OverSampling));
 132              		.loc 1 249 3 view .LVU28
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   /* USART needs to be in disabled state, in order to be able to configure some bits in
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      CRx registers */
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   if (LL_USART_IsEnabled(USARTx) == 0U)
 133              		.loc 1 253 3 view .LVU29
 134              	.LBB30:
 135              	.LBI30:
 136              		.file 3 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @file    stm32f0xx_ll_usart.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief   Header file of USART LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ******************************************************************************
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #ifndef STM32F0xx_LL_USART_H
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define STM32F0xx_LL_USART_H
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #ifdef __cplusplus
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** extern "C" {
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #include "stm32f0xx.h"
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @addtogroup STM32F0xx_LL_Driver
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined (USART1) || defined (USART2) || defined (USART3) || defined (UART4) || defined (UART5) 
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL USART
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Private constants ---------------------------------------------------------*/
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Private macros ------------------------------------------------------------*/
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_Private_Macros USART Private Macros
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 23


  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Exported types ------------------------------------------------------------*/
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_ES_INIT USART Exported Init structures
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief LL USART Init Structure definition
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** typedef struct
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t BaudRate;                  /*!< This field defines expected Usart communication baud rat
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            function @ref LL_USART_SetBaudRate().*/
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t DataWidth;                 /*!< Specifies the number of data bits transmitted or receive
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DATAWI
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            function @ref LL_USART_SetDataWidth().*/
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t StopBits;                  /*!< Specifies the number of stop bits transmitted.
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_STOPBI
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            function @ref LL_USART_SetStopBitsLength().*/
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t Parity;                    /*!< Specifies the parity mode.
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PARITY
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            function @ref LL_USART_SetParity().*/
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t TransferDirection;         /*!< Specifies whether the Receive and/or Transmit mode is en
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DIRECT
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            function @ref LL_USART_SetTransferDirection().*/
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t HardwareFlowControl;       /*!< Specifies whether the hardware flow control mode is enab
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_HWCONT
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            function @ref LL_USART_SetHWFlowCtrl().*/
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t OverSampling;              /*!< Specifies whether USART oversampling mode is 16 or 8.
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_OVERSA
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 24


 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            function @ref LL_USART_SetOverSampling().*/
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** } LL_USART_InitTypeDef;
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief LL USART Clock Init Structure definition
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** typedef struct
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t ClockOutput;               /*!< Specifies whether the USART clock is enabled or disabled
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_CLOCK.
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            @ref LL_USART_EnableSCLKOutput() or @ref LL_USART_Disabl
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t ClockPolarity;             /*!< Specifies the steady state of the serial clock.
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_POLARI
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            functions @ref LL_USART_SetClockPolarity().
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t ClockPhase;                /*!< Specifies the clock transition on which the bit capture 
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PHASE.
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            functions @ref LL_USART_SetClockPhase().
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t LastBitClockPulse;         /*!< Specifies whether the clock pulse corresponding to the l
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            data bit (MSB) has to be output on the SCLK pin in synch
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_LASTCL
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            functions @ref LL_USART_SetLastClkPulseOutput().
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** } LL_USART_ClockInitTypeDef;
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USE_FULL_LL_DRIVER */
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Exported constants --------------------------------------------------------*/
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Constants USART Exported Constants
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLEAR_FLAG Clear Flags Defines
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_WriteReg function
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_PECF                       USART_ICR_PECF                /*!< Parity error cle
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_FECF                       USART_ICR_FECF                /*!< Framing error cl
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 25


 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_NCF                        USART_ICR_NCF                 /*!< Noise error dete
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_ORECF                      USART_ICR_ORECF               /*!< Overrun error cl
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_IDLECF                     USART_ICR_IDLECF              /*!< Idle line detect
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_TCCF                       USART_ICR_TCCF                /*!< Transmission com
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined USART_LIN_SUPPORT
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_LBDCF                      USART_ICR_LBDCF               /*!< LIN break detect
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_LIN_SUPPORT */
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_CTSCF                      USART_ICR_CTSCF               /*!< CTS clear flag *
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_RTOCF                      USART_ICR_RTOCF               /*!< Receiver timeout
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined USART_SMARTCARD_SUPPORT
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_EOBCF                      USART_ICR_EOBCF               /*!< End of block cle
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_CMCF                       USART_ICR_CMCF                /*!< Character match 
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR1_UESM)
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR3_WUFIE)
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_WUCF                       USART_ICR_WUCF                /*!< Wakeup from Stop
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR3_WUFIE */
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR1_UESM */
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_GET_FLAG Get Flags Defines
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_ReadReg function
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_PE                         USART_ISR_PE                  /*!< Parity error fla
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_FE                         USART_ISR_FE                  /*!< Framing error fl
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_NE                         USART_ISR_NE                  /*!< Noise detected f
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_ORE                        USART_ISR_ORE                 /*!< Overrun error fl
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_IDLE                       USART_ISR_IDLE                /*!< Idle line detect
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_RXNE                       USART_ISR_RXNE                /*!< Read data regist
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_TC                         USART_ISR_TC                  /*!< Transmission com
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_TXE                        USART_ISR_TXE                 /*!< Transmit data re
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined USART_LIN_SUPPORT
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_LBDF                       USART_ISR_LBDF                /*!< LIN break detect
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_LIN_SUPPORT */
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_CTSIF                      USART_ISR_CTSIF               /*!< CTS interrupt fl
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_CTS                        USART_ISR_CTS                 /*!< CTS flag */
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_RTOF                       USART_ISR_RTOF                /*!< Receiver timeout
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined USART_SMARTCARD_SUPPORT
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_EOBF                       USART_ISR_EOBF                /*!< End of block fla
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_ABRE                       USART_ISR_ABRE                /*!< Auto baud rate e
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_ABRF                       USART_ISR_ABRF                /*!< Auto baud rate f
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_BUSY                       USART_ISR_BUSY                /*!< Busy flag */
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_CMF                        USART_ISR_CMF                 /*!< Character match 
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_SBKF                       USART_ISR_SBKF                /*!< Send break flag 
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_RWU                        USART_ISR_RWU                 /*!< Receiver wakeup 
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR1_UESM)
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR3_WUFIE)
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_WUF                        USART_ISR_WUF                 /*!< Wakeup from Stop
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR3_WUFIE */
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR1_UESM */
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_TEACK                      USART_ISR_TEACK               /*!< Transmit enable 
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_REACK                      USART_ISR_REACK               /*!< Receive enable a
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 26


 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_IT IT Defines
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief    IT defines which can be used with LL_USART_ReadReg and  LL_USART_WriteReg functions
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_IDLEIE                     USART_CR1_IDLEIE              /*!< IDLE interrupt e
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_RXNEIE                     USART_CR1_RXNEIE              /*!< Read data regist
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_TCIE                       USART_CR1_TCIE                /*!< Transmission com
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_TXEIE                      USART_CR1_TXEIE               /*!< Transmit data re
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_PEIE                       USART_CR1_PEIE                /*!< Parity error */
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_CMIE                       USART_CR1_CMIE                /*!< Character match 
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_RTOIE                      USART_CR1_RTOIE               /*!< Receiver timeout
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_EOBIE                      USART_CR1_EOBIE               /*!< End of Block int
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR2_LBDIE                      USART_CR2_LBDIE               /*!< LIN break detect
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_LIN_SUPPORT */
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR3_EIE                        USART_CR3_EIE                 /*!< Error interrupt 
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR3_CTSIE                      USART_CR3_CTSIE               /*!< CTS interrupt en
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR1_UESM)
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR3_WUFIE)
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR3_WUFIE                      USART_CR3_WUFIE               /*!< Wakeup from Stop
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR3_WUFIE */
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR1_UESM */
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DIRECTION Communication Direction
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DIRECTION_NONE                 0x00000000U                        /*!< Transmitter
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DIRECTION_RX                   USART_CR1_RE                       /*!< Transmitter
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DIRECTION_TX                   USART_CR1_TE                       /*!< Transmitter
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DIRECTION_TX_RX                (USART_CR1_TE |USART_CR1_RE)       /*!< Transmitter
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_PARITY Parity Control
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_PARITY_NONE                    0x00000000U                          /*!< Parity co
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_PARITY_EVEN                    USART_CR1_PCE                        /*!< Parity co
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_PARITY_ODD                     (USART_CR1_PCE | USART_CR1_PS)       /*!< Parity co
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP Wakeup
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WAKEUP_IDLELINE                0x00000000U           /*!<  USART wake up from Mute
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WAKEUP_ADDRESSMARK             USART_CR1_WAKE        /*!<  USART wake up from Mute
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 27


 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DATAWIDTH Datawidth
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_7BITS_SUPPORT)
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_7B                   USART_CR1_M1            /*!< 7 bits word length : S
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_8B                   0x00000000U             /*!< 8 bits word length : S
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_9B                   USART_CR1_M0            /*!< 9 bits word length : S
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_8B                   0x00000000U             /*!< 8 bits word length : S
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_9B                   USART_CR1_M             /*!< 9 bits word length : S
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif/* USART_7BITS_SUPPORT */
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_OVERSAMPLING Oversampling
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_16                0x00000000U            /*!< Oversampling by 16 */
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_8                 USART_CR1_OVER8        /*!< Oversampling by 8 */
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLOCK Clock Signal
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CLOCK_DISABLE                  0x00000000U            /*!< Clock signal not provid
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CLOCK_ENABLE                   USART_CR2_CLKEN        /*!< Clock signal provided *
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_LASTCLKPULSE Last Clock Pulse
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_NO_OUTPUT         0x00000000U           /*!< The clock pulse of the l
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_OUTPUT            USART_CR2_LBCL        /*!< The clock pulse of the l
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_PHASE Clock Phase
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_PHASE_1EDGE                    0x00000000U           /*!< The first clock transiti
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_PHASE_2EDGE                    USART_CR2_CPHA        /*!< The second clock transit
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 28


 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_POLARITY Clock Polarity
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_POLARITY_LOW                   0x00000000U           /*!< Steady low value on SCLK
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_POLARITY_HIGH                  USART_CR2_CPOL        /*!< Steady high value on SCL
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_STOPBITS Stop Bits
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_STOPBITS_0_5                   USART_CR2_STOP_0                           /*!< 0.5
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_STOPBITS_1                     0x00000000U                                /*!< 1 s
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_STOPBITS_1_5                   (USART_CR2_STOP_0 | USART_CR2_STOP_1)      /*!< 1.5
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_STOPBITS_2                     USART_CR2_STOP_1                           /*!< 2 s
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXRX TX RX Pins Swap
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_TXRX_STANDARD                  0x00000000U           /*!< TX/RX pins are used as d
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_TXRX_SWAPPED                   (USART_CR2_SWAP)      /*!< TX and RX pins functions
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_RXPIN_LEVEL RX Pin Active Level Inversion
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_STANDARD           0x00000000U           /*!< RX pin signal works usin
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_INVERTED           (USART_CR2_RXINV)     /*!< RX pin signal values are
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXPIN_LEVEL TX Pin Active Level Inversion
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_STANDARD           0x00000000U           /*!< TX pin signal works usin
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_INVERTED           (USART_CR2_TXINV)     /*!< TX pin signal values are
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_BINARY_LOGIC Binary Data Inversion
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_POSITIVE          0x00000000U           /*!< Logical data from the da
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_NEGATIVE          USART_CR2_DATAINV     /*!< Logical data from the da
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 29


 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_BITORDER Bit Order
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_BITORDER_LSBFIRST              0x00000000U           /*!< data is transmitted/rece
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_BITORDER_MSBFIRST              USART_CR2_MSBFIRST    /*!< data is transmitted/rece
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_AUTOBAUD_DETECT_ON Autobaud Detection
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_STARTBIT    0x00000000U                                 /*!< Me
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE USART_CR2_ABRMODE_0                         /*!< Fa
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_FABR_SUPPORT)
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME    USART_CR2_ABRMODE_1                         /*!< 0x
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_55_FRAME    (USART_CR2_ABRMODE_1 | USART_CR2_ABRMODE_0) /*!< 0x
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_FABR_SUPPORT */
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_ADDRESS_DETECT Address Length Detection
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_4B              0x00000000U           /*!< 4-bit address detection 
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_7B              USART_CR2_ADDM7       /*!< 7-bit address detection 
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_HWCONTROL Hardware Control
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_HWCONTROL_NONE                 0x00000000U                          /*!< CTS and R
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS                  USART_CR3_RTSE                       /*!< RTS outpu
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_HWCONTROL_CTS                  USART_CR3_CTSE                       /*!< CTS mode 
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS_CTS              (USART_CR3_RTSE | USART_CR3_CTSE)    /*!< CTS and R
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR1_UESM)
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR3_WUS)
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP_ON Wakeup Activation
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_ADDRESS              0x00000000U                             /*!< Wake u
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_STARTBIT             USART_CR3_WUS_1                         /*!< Wake u
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_RXNE                 (USART_CR3_WUS_0 | USART_CR3_WUS_1)     /*!< Wake u
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 30


 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR3_WUS */
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR1_UESM */
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_IRDA_POWER IrDA Power
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_IRDA_POWER_NORMAL              0x00000000U           /*!< IrDA normal power mode *
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_IRDA_POWER_LOW                 USART_CR3_IRLP        /*!< IrDA low power mode */
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_IRDA_SUPPORT */
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_LINBREAK_DETECT LIN Break Detection Length
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_10B            0x00000000U           /*!< 10-bit break detection m
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_11B            USART_CR2_LBDL        /*!< 11-bit break detection m
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_LIN_SUPPORT */
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DE_POLARITY Driver Enable Polarity
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DE_POLARITY_HIGH               0x00000000U           /*!< DE signal is active high
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DE_POLARITY_LOW                USART_CR3_DEP         /*!< DE signal is active low 
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DMA_REG_DATA DMA Register Data
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_TRANSMIT          0x00000000U          /*!< Get address of data regis
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_RECEIVE           0x00000001U          /*!< Get address of data regis
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Exported macro ------------------------------------------------------------*/
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Macros USART Exported Macros
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EM_WRITE_READ Common Write and read registers Macros
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 31


 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Write a value in USART register
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __REG__ Register to be written
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __VALUE__ Value to be written in the register
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VAL
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Read a value in USART register
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __REG__ Register to be read
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Register value
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EM_Exported_Macros_Helper Exported_Macros_Helper
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         expected Baud Rate in 8 bits sampling mode (32 bits value of USARTDIV is returned)
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_8 case
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8(__PERIPHCLK__, __BAUDRATE__) ((((__PERIPHCLK__)*2U)\
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                                                 + ((__BAUDRATE__)/2U))/(__BAUDRATE_
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         expected Baud Rate in 16 bits sampling mode (32 bits value of USARTDIV is returned)
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_16 case
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16(__PERIPHCLK__, __BAUDRATE__) (((__PERIPHCLK__) + ((__BAUDRATE__)/
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Exported functions --------------------------------------------------------*/
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Functions USART Exported Functions
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration Configuration functions
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 32


 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  USART Enable
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Enable
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Enable(USART_TypeDef *USARTx)
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UE);
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  USART Disable (all USART prescalers and outputs are disabled)
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   When USART is disabled, USART prescalers and outputs are stopped immediately,
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         and current operations are discarded. The configuration of the USART is kept, but all t
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         flags, in the USARTx_ISR are set to their default values.
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Disable
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Disable(USART_TypeDef *USARTx)
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UE);
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if USART is enabled
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_IsEnabled
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabled(USART_TypeDef *USARTx)
 137              		.loc 3 595 26 view .LVU30
 138              	.LBB31:
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_UE) == (USART_CR1_UE)) ? 1UL : 0UL);
 139              		.loc 3 597 3 view .LVU31
 140              		.loc 3 597 12 is_stmt 0 view .LVU32
 141 0006 0368     		ldr	r3, [r0]
 142              		.loc 3 597 73 view .LVU33
 143 0008 DB07     		lsls	r3, r3, #31
 144 000a 42D4     		bmi	.L11
 145              	.LVL7:
 146              		.loc 3 597 73 view .LVU34
 147              	.LBE31:
 148              	.LBE30:
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /*---------------------------- USART CR1 Configuration ---------------------
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * Configure USARTx CR1 (USART Word Length, Parity, Mode and Oversampling bits) with parameters
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * - DataWidth:          USART_CR1_M bits according to USART_InitStruct->DataWidth value
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * - Parity:             USART_CR1_PCE, USART_CR1_PS bits according to USART_InitStruct->Parity
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * - TransferDirection:  USART_CR1_TE, USART_CR1_RE bits according to USART_InitStruct->Transfe
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * - Oversampling:       USART_CR1_OVER8 bit according to USART_InitStruct->OverSampling value.
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 33


 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     MODIFY_REG(USARTx->CR1,
 149              		.loc 1 262 5 is_stmt 1 view .LVU35
 150 000c 0368     		ldr	r3, [r0]
 151 000e 234A     		ldr	r2, .L18
 152 0010 1A40     		ands	r2, r3
 153 0012 4B68     		ldr	r3, [r1, #4]
 154 0014 C968     		ldr	r1, [r1, #12]
 155              	.LVL8:
 156              		.loc 1 262 5 is_stmt 0 view .LVU36
 157 0016 0B43     		orrs	r3, r1
 158 0018 2969     		ldr	r1, [r5, #16]
 159 001a 0B43     		orrs	r3, r1
 160 001c A969     		ldr	r1, [r5, #24]
 161 001e 0B43     		orrs	r3, r1
 162 0020 1343     		orrs	r3, r2
 163 0022 0360     		str	r3, [r0]
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                (USART_CR1_M | USART_CR1_PCE | USART_CR1_PS |
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                 USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                (USART_InitStruct->DataWidth | USART_InitStruct->Parity |
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                 USART_InitStruct->TransferDirection | USART_InitStruct->OverSampling));
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /*---------------------------- USART CR2 Configuration ---------------------
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * Configure USARTx CR2 (Stop bits) with parameters:
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * - Stop Bits:          USART_CR2_STOP bits according to USART_InitStruct->StopBits value.
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * - CLKEN, CPOL, CPHA and LBCL bits are to be configured using LL_USART_ClockInit().
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      */
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_USART_SetStopBitsLength(USARTx, USART_InitStruct->StopBits);
 164              		.loc 1 273 5 is_stmt 1 view .LVU37
 165              	.LVL9:
 166              	.LBB32:
 167              	.LBI32:
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR1_UESM)
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  USART enabled in STOP Mode.
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   When this function is enabled, USART is able to wake up the MCU from Stop mode, provide
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         USART clock selection is HSI or LSE in RCC.
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_EnableInStopMode
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableInStopMode(USART_TypeDef *USARTx)
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_UESM);
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  USART disabled in STOP Mode.
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   When this function is disabled, USART is not able to wake up the MCU from Stop mode
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_DisableInStopMode
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 34


 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableInStopMode(USART_TypeDef *USARTx)
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_UESM);
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if USART is enabled in STOP Mode (able to wake up MCU from Stop mode or not)
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_IsEnabledInStopMode
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledInStopMode(USART_TypeDef *USARTx)
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_UESM) == (USART_CR1_UESM)) ? 1UL : 0UL);
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR1_UESM*/
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Receiver Enable (Receiver is enabled and begins searching for a start bit)
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_EnableDirectionRx
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionRx(USART_TypeDef *USARTx)
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RE);
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Receiver Disable
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_DisableDirectionRx
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionRx(USART_TypeDef *USARTx)
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_RE);
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Transmitter Enable
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_EnableDirectionTx
 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionTx(USART_TypeDef *USARTx)
 673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_TE);
 675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Transmitter Disable
 679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_DisableDirectionTx
 680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 35


 681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionTx(USART_TypeDef *USARTx)
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_TE);
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure simultaneously enabled/disabled states
 690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         of Transmitter and Receiver
 691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_SetTransferDirection\n
 692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          TE            LL_USART_SetTransferDirection
 693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  TransferDirection This parameter can be one of the following values:
 695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferDirection(USART_TypeDef *USARTx, uint32_t TransferDirectio
 702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_MODIFY_REG(USARTx->CR1, USART_CR1_RE | USART_CR1_TE, TransferDirection);
 704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return enabled/disabled states of Transmitter and Receiver
 708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_GetTransferDirection\n
 709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          TE            LL_USART_GetTransferDirection
 710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferDirection(USART_TypeDef *USARTx)
 718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_RE | USART_CR1_TE));
 720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure Parity (enabled/disabled and parity mode if enabled).
 724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   This function selects if hardware parity control (generation and detection) is enabled 
 725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         When the parity control is enabled (Odd or Even), computed parity bit is inserted at th
 726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (9th or 8th bit depending on data width) and parity is checked on the received data.
 727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_SetParity\n
 728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          PCE           LL_USART_SetParity
 729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetParity(USART_TypeDef *USARTx, uint32_t Parity)
 737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 36


 738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE, Parity);
 739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Parity configuration (enabled/disabled and parity mode if enabled)
 743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_GetParity\n
 744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          PCE           LL_USART_GetParity
 745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetParity(USART_TypeDef *USARTx)
 752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE));
 754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Receiver Wake Up method from Mute mode.
 758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_SetWakeUpMethod
 759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Method This parameter can be one of the following values:
 761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWakeUpMethod(USART_TypeDef *USARTx, uint32_t Method)
 766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_WAKE, Method);
 768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Receiver Wake Up method from Mute mode
 772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_GetWakeUpMethod
 773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWakeUpMethod(USART_TypeDef *USARTx)
 779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_WAKE));
 781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Word length (i.e. nb of data bits, excluding start and stop bits)
 785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_SetDataWidth\n
 786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          M1            LL_USART_SetDataWidth
 787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
 789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B (*)
 790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
 793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 37


 795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDataWidth(USART_TypeDef *USARTx, uint32_t DataWidth)
 797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_M, DataWidth);
 799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Word length (i.e. nb of data bits, excluding start and stop bits)
 803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_GetDataWidth\n
 804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          M1            LL_USART_GetDataWidth
 805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B (*)
 808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
 811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
 812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDataWidth(USART_TypeDef *USARTx)
 814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_M));
 816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Allow switch between Mute Mode and Active mode
 820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_EnableMuteMode
 821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableMuteMode(USART_TypeDef *USARTx)
 825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_MME);
 827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Prevent Mute Mode use. Set Receiver in active mode permanently.
 831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_DisableMuteMode
 832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableMuteMode(USART_TypeDef *USARTx)
 836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_MME);
 838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if switch between Mute Mode and Active mode is allowed
 842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_IsEnabledMuteMode
 843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledMuteMode(USART_TypeDef *USARTx)
 847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_MME) == (USART_CR1_MME)) ? 1UL : 0UL);
 849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 38


 852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Oversampling to 8-bit or 16-bit mode
 853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_SetOverSampling
 854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
 856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetOverSampling(USART_TypeDef *USARTx, uint32_t OverSampling)
 861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_OVER8, OverSampling);
 863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Oversampling mode
 867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_GetOverSampling
 868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetOverSampling(USART_TypeDef *USARTx)
 874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_OVER8));
 876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure if Clock pulse of the last data bit is output to the SCLK pin or not
 880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
 881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_SetLastClkPulseOutput
 883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  LastBitClockPulse This parameter can be one of the following values:
 885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLastClkPulseOutput(USART_TypeDef *USARTx, uint32_t LastBitClockPul
 890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBCL, LastBitClockPulse);
 892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve Clock pulse of the last data bit output configuration
 896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (Last bit Clock pulse output to the SCLK pin or not)
 897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
 898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_GetLastClkPulseOutput
 900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLastClkPulseOutput(USART_TypeDef *USARTx)
 906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBCL));
 908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 39


 909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Select the phase of the clock output on the SCLK pin in synchronous mode
 912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
 913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_SetClockPhase
 915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  ClockPhase This parameter can be one of the following values:
 917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPhase(USART_TypeDef *USARTx, uint32_t ClockPhase)
 922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA, ClockPhase);
 924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return phase of the clock output on the SCLK pin in synchronous mode
 928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
 929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_GetClockPhase
 931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPhase(USART_TypeDef *USARTx)
 937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPHA));
 939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Select the polarity of the clock output on the SCLK pin in synchronous mode
 943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
 944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_SetClockPolarity
 946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  ClockPolarity This parameter can be one of the following values:
 948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPolarity(USART_TypeDef *USARTx, uint32_t ClockPolarity)
 953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPOL, ClockPolarity);
 955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return polarity of the clock output on the SCLK pin in synchronous mode
 959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
 960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_GetClockPolarity
 962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 40


 966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPolarity(USART_TypeDef *USARTx)
 968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPOL));
 970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure Clock signal format (Phase Polarity and choice about output of last bit clock
 974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
 975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
 977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clock Phase configuration using @ref LL_USART_SetClockPhase() function
 978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clock Polarity configuration using @ref LL_USART_SetClockPolarity() function
 979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Output of Last bit Clock pulse configuration using @ref LL_USART_SetLastClkPulseOutpu
 980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_ConfigClock\n
 981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          CPOL          LL_USART_ConfigClock\n
 982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          LBCL          LL_USART_ConfigClock
 983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Phase This parameter can be one of the following values:
 985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
 988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  LBCPOutput This parameter can be one of the following values:
 991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigClock(USART_TypeDef *USARTx, uint32_t Phase, uint32_t Polarity,
 996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL, Phase | Polarity | LBCP
 998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Clock output on SCLK pin
1002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_EnableSCLKOutput
1005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSCLKOutput(USART_TypeDef *USARTx)
1009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
1011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Clock output on SCLK pin
1015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_DisableSCLKOutput
1018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSCLKOutput(USART_TypeDef *USARTx)
1022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 41


1023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
1024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Clock output on SCLK pin is enabled
1028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_IsEnabledSCLKOutput
1031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSCLKOutput(USART_TypeDef *USARTx)
1035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_CLKEN) == (USART_CR2_CLKEN)) ? 1UL : 0UL);
1037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set the length of the stop bits
1041:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_SetStopBitsLength
1042:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1043:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1044:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5 (*)
1045:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1046:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5 (*)
1047:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1048:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
1049:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
1050:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1051:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1052:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetStopBitsLength(USART_TypeDef *USARTx, uint32_t StopBits)
 168              		.loc 3 1052 22 view .LVU38
 169              	.LBB33:
1053:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1054:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
 170              		.loc 3 1054 3 view .LVU39
 171 0024 4368     		ldr	r3, [r0, #4]
 172 0026 1E4A     		ldr	r2, .L18+4
 173 0028 1340     		ands	r3, r2
 174 002a AA68     		ldr	r2, [r5, #8]
 175 002c 1343     		orrs	r3, r2
 176 002e 4360     		str	r3, [r0, #4]
 177              	.LVL10:
 178              		.loc 3 1054 3 is_stmt 0 view .LVU40
 179              	.LBE33:
 180              	.LBE32:
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /*---------------------------- USART CR3 Configuration ---------------------
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * Configure USARTx CR3 (Hardware Flow Control) with parameters:
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * - HardwareFlowControl: USART_CR3_RTSE, USART_CR3_CTSE bits according to
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      *   USART_InitStruct->HardwareFlowControl value.
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      */
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_USART_SetHWFlowCtrl(USARTx, USART_InitStruct->HardwareFlowControl);
 181              		.loc 1 280 5 is_stmt 1 view .LVU41
 182              	.LBB34:
 183              	.LBI34:
1055:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1056:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 42


1057:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve the length of the stop bits
1059:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_GetStopBitsLength
1060:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1061:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1062:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5 (*)
1063:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1064:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5 (*)
1065:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1066:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
1067:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
1068:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetStopBitsLength(USART_TypeDef *USARTx)
1070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1071:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_STOP));
1072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1073:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1074:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1075:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure Character frame format (Datawidth, Parity control, Stop Bits)
1076:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1077:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Data Width configuration using @ref LL_USART_SetDataWidth() function
1078:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Parity Control and mode configuration using @ref LL_USART_SetParity() function
1079:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Stop bits configuration using @ref LL_USART_SetStopBitsLength() function
1080:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_ConfigCharacter\n
1081:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          PCE           LL_USART_ConfigCharacter\n
1082:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          M0            LL_USART_ConfigCharacter\n
1083:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          M1            LL_USART_ConfigCharacter\n
1084:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigCharacter
1085:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1086:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
1087:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B (*)
1088:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
1089:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
1090:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
1091:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
1092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
1093:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
1094:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1095:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5 (*)
1096:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1097:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5 (*)
1098:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1099:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
1100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
1101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigCharacter(USART_TypeDef *USARTx, uint32_t DataWidth, uint32_t P
1104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                               uint32_t StopBits)
1105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE | USART_CR1_M, Parity | DataWidth);
1107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
1108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure TX/RX pins swapping setting.
1112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_SetTXRXSwap
1113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 43


1114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  SwapConfig This parameter can be one of the following values:
1115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
1116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXRXSwap(USART_TypeDef *USARTx, uint32_t SwapConfig)
1120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_SWAP, SwapConfig);
1122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve TX/RX pins swapping configuration.
1126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_GetTXRXSwap
1127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
1130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXRXSwap(USART_TypeDef *USARTx)
1133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_SWAP));
1135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure RX pin active level logic
1139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_SetRXPinLevel
1140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
1143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_RXINV, PinInvMethod);
1149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve RX pin active level logic configuration
1153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_GetRXPinLevel
1154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
1157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRXPinLevel(USART_TypeDef *USARTx)
1160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_RXINV));
1162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure TX pin active level logic
1166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_SetTXPinLevel
1167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
1170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 44


1171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_TXINV, PinInvMethod);
1176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve TX pin active level logic configuration
1180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_GetTXPinLevel
1181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
1184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
1185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXPinLevel(USART_TypeDef *USARTx)
1187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_TXINV));
1189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure Binary data logic.
1193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Allow to define how Logical data from the data register are send/received :
1194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         either in positive/direct logic (1=H, 0=L) or in negative/inverse logic (1=L, 0=H)
1195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_SetBinaryDataLogic
1196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  DataLogic This parameter can be one of the following values:
1198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
1200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBinaryDataLogic(USART_TypeDef *USARTx, uint32_t DataLogic)
1203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_DATAINV, DataLogic);
1205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve Binary data configuration
1209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_GetBinaryDataLogic
1210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
1214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBinaryDataLogic(USART_TypeDef *USARTx)
1216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_DATAINV));
1218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure transfer bit order (either Less or Most Significant Bit First)
1222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_SetTransferBitOrder
1225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  BitOrder This parameter can be one of the following values:
1227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 45


1228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferBitOrder(USART_TypeDef *USARTx, uint32_t BitOrder)
1232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_MSBFIRST, BitOrder);
1234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return transfer bit order (either Less or Most Significant Bit First)
1238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_GetTransferBitOrder
1241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
1244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferBitOrder(USART_TypeDef *USARTx)
1247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_MSBFIRST));
1249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Auto Baud-Rate Detection
1253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_EnableAutoBaudRate
1256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableAutoBaudRate(USART_TypeDef *USARTx)
1260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_ABREN);
1262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Auto Baud-Rate Detection
1266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_DisableAutoBaudRate
1269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableAutoBaudRate(USART_TypeDef *USARTx)
1273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_ABREN);
1275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Auto Baud-Rate Detection mechanism is enabled
1279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_IsEnabledAutoBaud
1282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 46


1285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledAutoBaud(USART_TypeDef *USARTx)
1286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_ABREN) == (USART_CR2_ABREN)) ? 1UL : 0UL);
1288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Auto Baud-Rate mode bits
1292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_SetAutoBaudRateMode
1295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  AutoBaudRateMode This parameter can be one of the following values:
1297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
1298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME (*)
1300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME (*)
1301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
1302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
1303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetAutoBaudRateMode(USART_TypeDef *USARTx, uint32_t AutoBaudRateMode)
1306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ABRMODE, AutoBaudRateMode);
1308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Auto Baud-Rate mode
1312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_GetAutoBaudRateMode
1315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
1318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME (*)
1320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME (*)
1321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
1322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
1323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetAutoBaudRateMode(USART_TypeDef *USARTx)
1325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ABRMODE));
1327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Receiver Timeout
1331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_EnableRxTimeout
1332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRxTimeout(USART_TypeDef *USARTx)
1336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_RTOEN);
1338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Receiver Timeout
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 47


1342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_DisableRxTimeout
1343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRxTimeout(USART_TypeDef *USARTx)
1347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_RTOEN);
1349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Receiver Timeout feature is enabled
1353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_IsEnabledRxTimeout
1354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledRxTimeout(USART_TypeDef *USARTx)
1358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_RTOEN) == (USART_CR2_RTOEN)) ? 1UL : 0UL);
1360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Address of the USART node.
1364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   This is used in multiprocessor communication during Mute mode or Stop mode,
1365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         for wake up with address mark detection.
1366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   4bits address node is used when 4-bit Address Detection is selected in ADDM7.
1367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (b7-b4 should be set to 0)
1368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         8bits address node is used when 7-bit Address Detection is selected in ADDM7.
1369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (This is used in multiprocessor communication during Mute mode or Stop mode,
1370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         for wake up with 7-bit address mark detection.
1371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         The MSB of the character sent by the transmitter should be equal to 1.
1372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         It may also be used for character detection during normal reception,
1373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Mute mode inactive (for example, end of block detection in ModBus protocol).
1374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         In this case, the whole received character (8-bit) is compared to the ADD[7:0]
1375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         value and CMF flag is set on match)
1376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_ConfigNodeAddress\n
1377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          ADDM7         LL_USART_ConfigNodeAddress
1378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  AddressLen This parameter can be one of the following values:
1380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  NodeAddress 4 or 7 bit Address of the USART node.
1383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigNodeAddress(USART_TypeDef *USARTx, uint32_t AddressLen, uint32_
1386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ADD | USART_CR2_ADDM7,
1388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****              (uint32_t)(AddressLen | (NodeAddress << USART_CR2_ADD_Pos)));
1389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return 8 bit Address of the USART node as set in ADD field of CR2.
1393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   If 4-bit Address Detection is selected in ADDM7,
1394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         only 4bits (b3-b0) of returned value are relevant (b31-b4 are not relevant)
1395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         If 7-bit Address Detection is selected in ADDM7,
1396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         only 8bits (b7-b0) of returned value are relevant (b31-b8 are not relevant)
1397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_GetNodeAddress
1398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 48


1399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Address of the USART node (Value between Min_Data=0 and Max_Data=255)
1400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddress(USART_TypeDef *USARTx)
1402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADD) >> USART_CR2_ADD_Pos);
1404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Length of Node Address used in Address Detection mode (7-bit or 4-bit)
1408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ADDM7         LL_USART_GetNodeAddressLen
1409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddressLen(USART_TypeDef *USARTx)
1415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADDM7));
1417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable RTS HW Flow Control
1421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_EnableRTSHWFlowCtrl
1424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRTSHWFlowCtrl(USART_TypeDef *USARTx)
1428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_RTSE);
1430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable RTS HW Flow Control
1434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_DisableRTSHWFlowCtrl
1437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRTSHWFlowCtrl(USART_TypeDef *USARTx)
1441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_RTSE);
1443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable CTS HW Flow Control
1447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_EnableCTSHWFlowCtrl
1450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableCTSHWFlowCtrl(USART_TypeDef *USARTx)
1454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_CTSE);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 49


1456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable CTS HW Flow Control
1460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_DisableCTSHWFlowCtrl
1463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableCTSHWFlowCtrl(USART_TypeDef *USARTx)
1467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_CTSE);
1469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure HW Flow Control mode (both CTS and RTS)
1473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_SetHWFlowCtrl\n
1476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_SetHWFlowCtrl
1477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  HardwareFlowControl This parameter can be one of the following values:
1479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetHWFlowCtrl(USART_TypeDef *USARTx, uint32_t HardwareFlowControl)
 184              		.loc 3 1485 22 view .LVU42
 185              	.LBB35:
1486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE, HardwareFlowControl);
 186              		.loc 3 1487 3 view .LVU43
 187 0030 8368     		ldr	r3, [r0, #8]
 188 0032 1C4A     		ldr	r2, .L18+8
 189 0034 1340     		ands	r3, r2
 190 0036 6A69     		ldr	r2, [r5, #20]
 191 0038 1343     		orrs	r3, r2
 192 003a 8360     		str	r3, [r0, #8]
 193              	.LVL11:
 194              		.loc 3 1487 3 is_stmt 0 view .LVU44
 195              	.LBE35:
 196              	.LBE34:
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /*---------------------------- USART BRR Configuration ---------------------
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * Retrieve Clock frequency used for USART Peripheral
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      */
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     if (USARTx == USART1)
 197              		.loc 1 285 5 is_stmt 1 view .LVU45
 198              		.loc 1 285 8 is_stmt 0 view .LVU46
 199 003c 1A4B     		ldr	r3, .L18+12
 200 003e 9842     		cmp	r0, r3
 201 0040 01D0     		beq	.L15
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   uint32_t periphclk = LL_RCC_PERIPH_FREQUENCY_NO;
 202              		.loc 1 235 15 view .LVU47
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 50


 203 0042 0120     		movs	r0, #1
 204              	.LVL12:
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   uint32_t periphclk = LL_RCC_PERIPH_FREQUENCY_NO;
 205              		.loc 1 235 15 view .LVU48
 206 0044 26E0     		b	.L8
 207              	.LVL13:
 208              	.L15:
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       periphclk = LL_RCC_GetUSARTClockFreq(LL_RCC_USART1_CLKSOURCE);
 209              		.loc 1 287 7 is_stmt 1 view .LVU49
 210              		.loc 1 287 19 is_stmt 0 view .LVU50
 211 0046 0020     		movs	r0, #0
 212              	.LVL14:
 213              		.loc 1 287 19 view .LVU51
 214 0048 FFF7FEFF 		bl	LL_RCC_GetUSARTClockFreq
 215              	.LVL15:
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART2)
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     else if (USARTx == USART2)
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(RCC_CFGR3_USART2SW)
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       periphclk = LL_RCC_GetUSARTClockFreq(LL_RCC_USART2_CLKSOURCE);
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #else
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* USART2 clock is PCLK */
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       periphclk = RCC_Clocks.PCLK1_Frequency;
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART2 */
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART3)
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     else if (USARTx == USART3)
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(RCC_CFGR3_USART3SW)
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       periphclk = LL_RCC_GetUSARTClockFreq(LL_RCC_USART3_CLKSOURCE);
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #else
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* USART3 clock is PCLK */
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       periphclk = RCC_Clocks.PCLK1_Frequency;
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART3 */
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART4)
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     else if (USARTx == USART4)
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* USART4 clock is PCLK1 */
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       periphclk = RCC_Clocks.PCLK1_Frequency;
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART4 */
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART5)
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     else if (USARTx == USART5)
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* USART5 clock is PCLK1 */
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       periphclk = RCC_Clocks.PCLK1_Frequency;
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART5 */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 51


 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART6)
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     else if (USARTx == USART6)
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* USART6 clock is PCLK1 */
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       periphclk = RCC_Clocks.PCLK1_Frequency;
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART6 */
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART7)
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     else if (USARTx == USART7)
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* USART7 clock is PCLK */
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       periphclk = RCC_Clocks.PCLK1_Frequency;
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART7 */
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART8)
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     else if (USARTx == USART8)
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* USART8 clock is PCLK */
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       periphclk = RCC_Clocks.PCLK1_Frequency;
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART8 */
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     else
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* Nothing to do, as error code is already assigned to ERROR value */
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 216              		.loc 1 356 5 is_stmt 1 view .LVU52
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Configure the USART Baud Rate :
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****        - valid baud rate value (different from 0) is required
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****        - Peripheral clock as returned by RCC service, should be valid (different from 0).
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     */
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     if ((periphclk != LL_RCC_PERIPH_FREQUENCY_NO)
 217              		.loc 1 362 5 view .LVU53
 218              		.loc 1 362 8 is_stmt 0 view .LVU54
 219 004c 0028     		cmp	r0, #0
 220 004e 22D0     		beq	.L13
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****         && (USART_InitStruct->BaudRate != 0U))
 221              		.loc 1 363 29 view .LVU55
 222 0050 2968     		ldr	r1, [r5]
 223              		.loc 1 363 9 view .LVU56
 224 0052 0029     		cmp	r1, #0
 225 0054 01D1     		bne	.L16
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   uint32_t periphclk = LL_RCC_PERIPH_FREQUENCY_NO;
 226              		.loc 1 235 15 view .LVU57
 227 0056 0120     		movs	r0, #1
 228              	.LVL16:
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   uint32_t periphclk = LL_RCC_PERIPH_FREQUENCY_NO;
 229              		.loc 1 235 15 view .LVU58
 230 0058 1CE0     		b	.L8
 231              	.LVL17:
 232              	.L16:
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       status = SUCCESS;
 233              		.loc 1 365 7 is_stmt 1 view .LVU59
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 52


 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       LL_USART_SetBaudRate(USARTx,
 234              		.loc 1 366 7 view .LVU60
 235 005a AA69     		ldr	r2, [r5, #24]
 236              	.LVL18:
 237              	.LBB36:
 238              	.LBI36:
1488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return HW Flow Control configuration (both CTS and RTS)
1492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_GetHWFlowCtrl\n
1495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_GetHWFlowCtrl
1496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetHWFlowCtrl(USART_TypeDef *USARTx)
1504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE));
1506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable One bit sampling method
1510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_EnableOneBitSamp
1511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOneBitSamp(USART_TypeDef *USARTx)
1515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable One bit sampling method
1521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_DisableOneBitSamp
1522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOneBitSamp(USART_TypeDef *USARTx)
1526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if One bit sampling method is enabled
1532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_IsEnabledOneBitSamp
1533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOneBitSamp(USART_TypeDef *USARTx)
1537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_ONEBIT) == (USART_CR3_ONEBIT)) ? 1UL : 0UL);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 53


1539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Overrun detection
1543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_EnableOverrunDetect
1544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOverrunDetect(USART_TypeDef *USARTx)
1548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_OVRDIS);
1550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Overrun detection
1554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_DisableOverrunDetect
1555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOverrunDetect(USART_TypeDef *USARTx)
1559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_OVRDIS);
1561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Overrun detection is enabled
1565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_IsEnabledOverrunDetect
1566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOverrunDetect(USART_TypeDef *USARTx)
1570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_OVRDIS) != USART_CR3_OVRDIS) ? 1UL : 0UL);
1572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR1_UESM)
1575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR3_WUS)
1576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Select event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
1579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_SetWKUPType
1581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Type This parameter can be one of the following values:
1583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWKUPType(USART_TypeDef *USARTx, uint32_t Type)
1589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_WUS, Type);
1591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 54


1596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_GetWKUPType
1598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWKUPType(USART_TypeDef *USARTx)
1605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_WUS));
1607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR3_WUS */
1610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR1_UESM */
1611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure USART BRR register for achieving expected Baud Rate value.
1613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Compute and set USARTDIV value in BRR Register (full BRR content)
1614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         according to used Peripheral Clock, Oversampling mode, and expected Baud Rate values
1615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Peripheral clock and Baud rate values provided as function parameters should be valid
1616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (Baud rate value != 0)
1617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In case of oversampling by 16 and 8, BRR content must be greater than or equal to 16d.
1618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_SetBaudRate
1619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  BaudRate Baud Rate
1625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t OverS
 239              		.loc 3 1627 22 view .LVU61
 240              	.LBB37:
1628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                           uint32_t BaudRate)
1629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t usartdiv;
 241              		.loc 3 1630 3 view .LVU62
1631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t brrtemp;
 242              		.loc 3 1631 3 view .LVU63
1632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
 243              		.loc 3 1633 3 view .LVU64
 244              		.loc 3 1633 6 is_stmt 0 view .LVU65
 245 005c 8023     		movs	r3, #128
 246 005e 1B02     		lsls	r3, r3, #8
 247 0060 9A42     		cmp	r2, r3
 248 0062 08D0     		beq	.L17
1634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   {
1635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     usartdiv = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, BaudRate));
1636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     brrtemp = usartdiv & 0xFFF0U;
1637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
1638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     USARTx->BRR = brrtemp;
1639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   }
1640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   else
1641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   {
1642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, BaudRate));
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 55


 249              		.loc 3 1642 5 is_stmt 1 view .LVU66
 250              		.loc 3 1642 30 is_stmt 0 view .LVU67
 251 0064 4B08     		lsrs	r3, r1, #1
 252 0066 C018     		adds	r0, r0, r3
 253              	.LVL19:
 254              		.loc 3 1642 30 view .LVU68
 255 0068 FFF7FEFF 		bl	__aeabi_uidiv
 256              	.LVL20:
 257              		.loc 3 1642 30 view .LVU69
 258 006c 0304     		lsls	r3, r0, #16
 259 006e 1B0C     		lsrs	r3, r3, #16
 260              		.loc 3 1642 17 view .LVU70
 261 0070 E360     		str	r3, [r4, #12]
 262              	.L10:
 263              		.loc 3 1642 17 view .LVU71
 264              	.LBE37:
 265              	.LBE36:
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       LL_USART_SetBaudRate(USARTx,
 266              		.loc 1 365 14 view .LVU72
 267 0072 0020     		movs	r0, #0
 268              	.LBB39:
 269              	.LBB38:
1643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   }
1644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 270              		.loc 3 1644 1 view .LVU73
 271 0074 0EE0     		b	.L8
 272              	.LVL21:
 273              	.L17:
1635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     brrtemp = usartdiv & 0xFFF0U;
 274              		.loc 3 1635 5 is_stmt 1 view .LVU74
1635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     brrtemp = usartdiv & 0xFFF0U;
 275              		.loc 3 1635 27 is_stmt 0 view .LVU75
 276 0076 4000     		lsls	r0, r0, #1
 277              	.LVL22:
1635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     brrtemp = usartdiv & 0xFFF0U;
 278              		.loc 3 1635 27 view .LVU76
 279 0078 4B08     		lsrs	r3, r1, #1
 280 007a C018     		adds	r0, r0, r3
 281 007c FFF7FEFF 		bl	__aeabi_uidiv
 282              	.LVL23:
1636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 283              		.loc 3 1636 5 is_stmt 1 view .LVU77
1636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 284              		.loc 3 1636 13 is_stmt 0 view .LVU78
 285 0080 0A4B     		ldr	r3, .L18+16
 286 0082 0340     		ands	r3, r0
 287              	.LVL24:
1637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     USARTx->BRR = brrtemp;
 288              		.loc 3 1637 5 is_stmt 1 view .LVU79
1637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     USARTx->BRR = brrtemp;
 289              		.loc 3 1637 58 is_stmt 0 view .LVU80
 290 0084 0004     		lsls	r0, r0, #16
 291              	.LVL25:
1637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     USARTx->BRR = brrtemp;
 292              		.loc 3 1637 58 view .LVU81
 293 0086 400C     		lsrs	r0, r0, #17
1637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     USARTx->BRR = brrtemp;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 56


 294              		.loc 3 1637 16 view .LVU82
 295 0088 0722     		movs	r2, #7
 296 008a 1040     		ands	r0, r2
1637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     USARTx->BRR = brrtemp;
 297              		.loc 3 1637 13 view .LVU83
 298 008c 1843     		orrs	r0, r3
 299              	.LVL26:
1638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   }
 300              		.loc 3 1638 5 is_stmt 1 view .LVU84
1638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   }
 301              		.loc 3 1638 17 is_stmt 0 view .LVU85
 302 008e E060     		str	r0, [r4, #12]
 303 0090 EFE7     		b	.L10
 304              	.LVL27:
 305              	.L11:
1638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   }
 306              		.loc 3 1638 17 view .LVU86
 307              	.LBE38:
 308              	.LBE39:
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   uint32_t periphclk = LL_RCC_PERIPH_FREQUENCY_NO;
 309              		.loc 1 235 15 view .LVU87
 310 0092 0120     		movs	r0, #1
 311              	.LVL28:
 312              	.L8:
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                            periphclk,
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                            USART_InitStruct->OverSampling,
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                            USART_InitStruct->BaudRate);
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* Check BRR is greater than or equal to 16d */
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       assert_param(IS_LL_USART_BRR_MIN(USARTx->BRR));
 313              		.loc 1 372 7 is_stmt 1 view .LVU88
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   /* Endif (=> USART not in Disabled state => return ERROR) */
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   return (status);
 314              		.loc 1 377 3 view .LVU89
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** }
 315              		.loc 1 378 1 is_stmt 0 view .LVU90
 316              		@ sp needed
 317              	.LVL29:
 318              	.LVL30:
 319              		.loc 1 378 1 view .LVU91
 320 0094 70BD     		pop	{r4, r5, r6, pc}
 321              	.LVL31:
 322              	.L13:
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   uint32_t periphclk = LL_RCC_PERIPH_FREQUENCY_NO;
 323              		.loc 1 235 15 view .LVU92
 324 0096 0120     		movs	r0, #1
 325              	.LVL32:
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   uint32_t periphclk = LL_RCC_PERIPH_FREQUENCY_NO;
 326              		.loc 1 235 15 view .LVU93
 327 0098 FCE7     		b	.L8
 328              	.L19:
 329 009a C046     		.align	2
 330              	.L18:
 331 009c F369FFFF 		.word	-38413
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 57


 332 00a0 FFCFFFFF 		.word	-12289
 333 00a4 FFFCFFFF 		.word	-769
 334 00a8 00380140 		.word	1073821696
 335 00ac F0FF0000 		.word	65520
 336              		.cfi_endproc
 337              	.LFE313:
 339              		.section	.text.LL_USART_StructInit,"ax",%progbits
 340              		.align	1
 341              		.global	LL_USART_StructInit
 342              		.syntax unified
 343              		.code	16
 344              		.thumb_func
 346              	LL_USART_StructInit:
 347              	.LVL33:
 348              	.LFB314:
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /**
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @brief Set each @ref LL_USART_InitTypeDef field to default value.
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @param USART_InitStruct pointer to a @ref LL_USART_InitTypeDef structure
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *                         whose fields will be set to default values.
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @retval None
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** void LL_USART_StructInit(LL_USART_InitTypeDef *USART_InitStruct)
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** {
 349              		.loc 1 388 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   /* Set USART_InitStruct fields to default values */
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_InitStruct->BaudRate            = 9600U;
 354              		.loc 1 390 3 view .LVU95
 355              		.loc 1 390 41 is_stmt 0 view .LVU96
 356 0000 9623     		movs	r3, #150
 357 0002 9B01     		lsls	r3, r3, #6
 358 0004 0360     		str	r3, [r0]
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_InitStruct->DataWidth           = LL_USART_DATAWIDTH_8B;
 359              		.loc 1 391 3 is_stmt 1 view .LVU97
 360              		.loc 1 391 41 is_stmt 0 view .LVU98
 361 0006 0023     		movs	r3, #0
 362 0008 4360     		str	r3, [r0, #4]
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_InitStruct->StopBits            = LL_USART_STOPBITS_1;
 363              		.loc 1 392 3 is_stmt 1 view .LVU99
 364              		.loc 1 392 41 is_stmt 0 view .LVU100
 365 000a 8360     		str	r3, [r0, #8]
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_InitStruct->Parity              = LL_USART_PARITY_NONE ;
 366              		.loc 1 393 3 is_stmt 1 view .LVU101
 367              		.loc 1 393 41 is_stmt 0 view .LVU102
 368 000c C360     		str	r3, [r0, #12]
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_InitStruct->TransferDirection   = LL_USART_DIRECTION_TX_RX;
 369              		.loc 1 394 3 is_stmt 1 view .LVU103
 370              		.loc 1 394 41 is_stmt 0 view .LVU104
 371 000e 0C22     		movs	r2, #12
 372 0010 0261     		str	r2, [r0, #16]
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_InitStruct->HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 373              		.loc 1 395 3 is_stmt 1 view .LVU105
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 58


 374              		.loc 1 395 41 is_stmt 0 view .LVU106
 375 0012 4361     		str	r3, [r0, #20]
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_InitStruct->OverSampling        = LL_USART_OVERSAMPLING_16;
 376              		.loc 1 396 3 is_stmt 1 view .LVU107
 377              		.loc 1 396 41 is_stmt 0 view .LVU108
 378 0014 8361     		str	r3, [r0, #24]
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** }
 379              		.loc 1 397 1 view .LVU109
 380              		@ sp needed
 381 0016 7047     		bx	lr
 382              		.cfi_endproc
 383              	.LFE314:
 385              		.section	.text.LL_USART_ClockInit,"ax",%progbits
 386              		.align	1
 387              		.global	LL_USART_ClockInit
 388              		.syntax unified
 389              		.code	16
 390              		.thumb_func
 392              	LL_USART_ClockInit:
 393              	.LVL34:
 394              	.LFB315:
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /**
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @brief  Initialize USART Clock related settings according to the
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *         specified parameters in the USART_ClockInitStruct.
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @note   As some bits in USART configuration registers can only be written when
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *         the USART is disabled (USART_CR1_UE bit =0), USART Peripheral should be in disabled sta
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *         this function. Otherwise, ERROR result will be returned.
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @param  USARTx USART Instance
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @param  USART_ClockInitStruct pointer to a @ref LL_USART_ClockInitTypeDef structure
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *         that contains the Clock configuration information for the specified USART peripheral.
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @retval An ErrorStatus enumeration value:
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *          - SUCCESS: USART registers related to Clock settings are initialized according
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *                     to USART_ClockInitStruct content
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *          - ERROR: Problem occurred during USART Registers initialization
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** ErrorStatus LL_USART_ClockInit(USART_TypeDef *USARTx, LL_USART_ClockInitTypeDef *USART_ClockInitStr
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** {
 395              		.loc 1 414 1 is_stmt 1 view -0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              		.loc 1 414 1 is_stmt 0 view .LVU111
 400 0000 10B5     		push	{r4, lr}
 401              	.LCFI1:
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 4, -8
 404              		.cfi_offset 14, -4
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   ErrorStatus status = SUCCESS;
 405              		.loc 1 415 3 is_stmt 1 view .LVU112
 406              	.LVL35:
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   /* Check USART Instance and Clock signal output parameters */
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_UART_INSTANCE(USARTx));
 407              		.loc 1 418 3 view .LVU113
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_LL_USART_CLOCKOUTPUT(USART_ClockInitStruct->ClockOutput));
 408              		.loc 1 419 3 view .LVU114
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 59


 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   /* USART needs to be in disabled state, in order to be able to configure some bits in
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      CRx registers */
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   if (LL_USART_IsEnabled(USARTx) == 0U)
 409              		.loc 1 423 3 view .LVU115
 410              	.LBB40:
 411              	.LBI40:
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 412              		.loc 3 595 26 view .LVU116
 413              	.LBB41:
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 414              		.loc 3 597 3 view .LVU117
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 415              		.loc 3 597 12 is_stmt 0 view .LVU118
 416 0002 0368     		ldr	r3, [r0]
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 417              		.loc 3 597 73 view .LVU119
 418 0004 DB07     		lsls	r3, r3, #31
 419 0006 17D4     		bmi	.L24
 420              	.LVL36:
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 421              		.loc 3 597 73 view .LVU120
 422              	.LBE41:
 423              	.LBE40:
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* If USART Clock signal is disabled */
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     if (USART_ClockInitStruct->ClockOutput == LL_USART_CLOCK_DISABLE)
 424              		.loc 1 426 5 is_stmt 1 view .LVU121
 425              		.loc 1 426 8 is_stmt 0 view .LVU122
 426 0008 0B68     		ldr	r3, [r1]
 427 000a 002B     		cmp	r3, #0
 428 000c 05D1     		bne	.L23
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* Deactivate Clock signal delivery :
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****        * - Disable Clock Output:        USART_CR2_CLKEN cleared
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****        */
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       LL_USART_DisableSCLKOutput(USARTx);
 429              		.loc 1 431 7 is_stmt 1 view .LVU123
 430              	.LVL37:
 431              	.LBB42:
 432              	.LBI42:
1021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 433              		.loc 3 1021 22 view .LVU124
 434              	.LBB43:
1023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 435              		.loc 3 1023 3 view .LVU125
 436 000e 4368     		ldr	r3, [r0, #4]
 437 0010 0A4A     		ldr	r2, .L25
 438 0012 1340     		ands	r3, r2
 439 0014 4360     		str	r3, [r0, #4]
 440              	.LBE43:
 441              	.LBE42:
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 442              		.loc 1 415 15 is_stmt 0 view .LVU126
 443 0016 0020     		movs	r0, #0
 444              	.LVL38:
 445              	.LBB45:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 60


 446              	.LBB44:
1024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 447              		.loc 3 1024 1 view .LVU127
 448 0018 0FE0     		b	.L22
 449              	.LVL39:
 450              	.L23:
1024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 451              		.loc 3 1024 1 view .LVU128
 452              	.LBE44:
 453              	.LBE45:
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     else
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* Ensure USART instance is USART capable */
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       assert_param(IS_USART_INSTANCE(USARTx));
 454              		.loc 1 436 7 is_stmt 1 view .LVU129
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* Check clock related parameters */
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       assert_param(IS_LL_USART_CLOCKPOLARITY(USART_ClockInitStruct->ClockPolarity));
 455              		.loc 1 439 7 view .LVU130
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       assert_param(IS_LL_USART_CLOCKPHASE(USART_ClockInitStruct->ClockPhase));
 456              		.loc 1 440 7 view .LVU131
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       assert_param(IS_LL_USART_LASTBITCLKOUTPUT(USART_ClockInitStruct->LastBitClockPulse));
 457              		.loc 1 441 7 view .LVU132
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /*---------------------------- USART CR2 Configuration -----------------------
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****        * Configure USARTx CR2 (Clock signal related bits) with parameters:
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****        * - Enable Clock Output:         USART_CR2_CLKEN set
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****        * - Clock Polarity:              USART_CR2_CPOL bit according to USART_ClockInitStruct->Cloc
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****        * - Clock Phase:                 USART_CR2_CPHA bit according to USART_ClockInitStruct->Cloc
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****        * - Last Bit Clock Pulse Output: USART_CR2_LBCL bit according to USART_ClockInitStruct->Last
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****        */
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       MODIFY_REG(USARTx->CR2,
 458              		.loc 1 450 7 view .LVU133
 459 001a 4368     		ldr	r3, [r0, #4]
 460 001c 084A     		ldr	r2, .L25+4
 461 001e 1340     		ands	r3, r2
 462 0020 4A68     		ldr	r2, [r1, #4]
 463 0022 8C68     		ldr	r4, [r1, #8]
 464 0024 2243     		orrs	r2, r4
 465 0026 C968     		ldr	r1, [r1, #12]
 466              	.LVL40:
 467              		.loc 1 450 7 is_stmt 0 view .LVU134
 468 0028 0A43     		orrs	r2, r1
 469 002a 1343     		orrs	r3, r2
 470 002c 8022     		movs	r2, #128
 471 002e 1201     		lsls	r2, r2, #4
 472 0030 1343     		orrs	r3, r2
 473 0032 4360     		str	r3, [r0, #4]
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 474              		.loc 1 415 15 view .LVU135
 475 0034 0020     		movs	r0, #0
 476              	.LVL41:
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 477              		.loc 1 415 15 view .LVU136
 478 0036 00E0     		b	.L22
 479              	.LVL42:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 61


 480              	.L24:
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                  USART_CR2_CLKEN | USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL,
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                  USART_CR2_CLKEN | USART_ClockInitStruct->ClockPolarity |
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                  USART_ClockInitStruct->ClockPhase | USART_ClockInitStruct->LastBitClockPulse);
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   /* Else (USART not in Disabled state => return ERROR */
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   else
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     status = ERROR;
 481              		.loc 1 459 12 view .LVU137
 482 0038 0120     		movs	r0, #1
 483              	.LVL43:
 484              	.L22:
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   return (status);
 485              		.loc 1 462 3 is_stmt 1 view .LVU138
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** }
 486              		.loc 1 463 1 is_stmt 0 view .LVU139
 487              		@ sp needed
 488 003a 10BD     		pop	{r4, pc}
 489              	.L26:
 490              		.align	2
 491              	.L25:
 492 003c FFF7FFFF 		.word	-2049
 493 0040 FFF0FFFF 		.word	-3841
 494              		.cfi_endproc
 495              	.LFE315:
 497              		.section	.text.LL_USART_ClockStructInit,"ax",%progbits
 498              		.align	1
 499              		.global	LL_USART_ClockStructInit
 500              		.syntax unified
 501              		.code	16
 502              		.thumb_func
 504              	LL_USART_ClockStructInit:
 505              	.LVL44:
 506              	.LFB316:
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /**
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @brief Set each field of a @ref LL_USART_ClockInitTypeDef type structure to default value.
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @param USART_ClockInitStruct pointer to a @ref LL_USART_ClockInitTypeDef structure
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *                              whose fields will be set to default values.
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @retval None
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** void LL_USART_ClockStructInit(LL_USART_ClockInitTypeDef *USART_ClockInitStruct)
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** {
 507              		.loc 1 472 1 is_stmt 1 view -0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              		@ link register save eliminated.
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   /* Set LL_USART_ClockInitStruct fields with default values */
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_ClockInitStruct->ClockOutput       = LL_USART_CLOCK_DISABLE;
 512              		.loc 1 474 3 view .LVU141
 513              		.loc 1 474 44 is_stmt 0 view .LVU142
 514 0000 0023     		movs	r3, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 62


 515 0002 0360     		str	r3, [r0]
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_ClockInitStruct->ClockPolarity     = LL_USART_POLARITY_LOW;            /* Not relevant when
 516              		.loc 1 475 3 is_stmt 1 view .LVU143
 517              		.loc 1 475 44 is_stmt 0 view .LVU144
 518 0004 4360     		str	r3, [r0, #4]
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                                                                   LL_USART_CLOCK_DI
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_ClockInitStruct->ClockPhase        = LL_USART_PHASE_1EDGE;             /* Not relevant when
 519              		.loc 1 477 3 is_stmt 1 view .LVU145
 520              		.loc 1 477 44 is_stmt 0 view .LVU146
 521 0006 8360     		str	r3, [r0, #8]
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                                                                   LL_USART_CLOCK_DI
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_ClockInitStruct->LastBitClockPulse = LL_USART_LASTCLKPULSE_NO_OUTPUT;  /* Not relevant when
 522              		.loc 1 479 3 is_stmt 1 view .LVU147
 523              		.loc 1 479 44 is_stmt 0 view .LVU148
 524 0008 C360     		str	r3, [r0, #12]
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                                                                   LL_USART_CLOCK_DI
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** }
 525              		.loc 1 481 1 view .LVU149
 526              		@ sp needed
 527 000a 7047     		bx	lr
 528              		.cfi_endproc
 529              	.LFE316:
 531              		.text
 532              	.Letext0:
 533              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 534              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 535              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h"
 536              		.file 7 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 537              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s 			page 63


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_ll_usart.c
C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s:18     .text.LL_USART_DeInit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s:24     .text.LL_USART_DeInit:00000000 LL_USART_DeInit
C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s:89     .text.LL_USART_DeInit:00000024 $d
C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s:99     .text.LL_USART_Init:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s:105    .text.LL_USART_Init:00000000 LL_USART_Init
C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s:331    .text.LL_USART_Init:0000009c $d
C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s:340    .text.LL_USART_StructInit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s:346    .text.LL_USART_StructInit:00000000 LL_USART_StructInit
C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s:386    .text.LL_USART_ClockInit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s:392    .text.LL_USART_ClockInit:00000000 LL_USART_ClockInit
C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s:492    .text.LL_USART_ClockInit:0000003c $d
C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s:498    .text.LL_USART_ClockStructInit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cc8RhNUW.s:504    .text.LL_USART_ClockStructInit:00000000 LL_USART_ClockStructInit

UNDEFINED SYMBOLS
__aeabi_uidiv
LL_RCC_GetUSARTClockFreq
