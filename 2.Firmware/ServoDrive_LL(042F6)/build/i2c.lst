ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"i2c.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MY_I2C1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MY_I2C1_Init
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MY_I2C1_Init:
  25              	.LVL0:
  26              	.LFB1020:
  27              		.file 1 "Src/i2c.c"
   1:Src/i2c.c     **** /* USER CODE BEGIN Header */
   2:Src/i2c.c     **** /**
   3:Src/i2c.c     ****   ******************************************************************************
   4:Src/i2c.c     ****   * @file    i2c.c
   5:Src/i2c.c     ****   * @brief   This file provides code for the configuration
   6:Src/i2c.c     ****   *          of the I2C instances.
   7:Src/i2c.c     ****   ******************************************************************************
   8:Src/i2c.c     ****   * @attention
   9:Src/i2c.c     ****   *
  10:Src/i2c.c     ****   * Copyright (c) 2022 STMicroelectronics.
  11:Src/i2c.c     ****   * All rights reserved.
  12:Src/i2c.c     ****   *
  13:Src/i2c.c     ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Src/i2c.c     ****   * in the root directory of this software component.
  15:Src/i2c.c     ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Src/i2c.c     ****   *
  17:Src/i2c.c     ****   ******************************************************************************
  18:Src/i2c.c     ****   */
  19:Src/i2c.c     **** /* USER CODE END Header */
  20:Src/i2c.c     **** /* Includes ------------------------------------------------------------------*/
  21:Src/i2c.c     **** #include "i2c.h"
  22:Src/i2c.c     **** 
  23:Src/i2c.c     **** /* USER CODE BEGIN 0 */
  24:Src/i2c.c     **** uint8_t i2cDataRx[8];
  25:Src/i2c.c     **** uint8_t i2cDataTx[8];
  26:Src/i2c.c     **** /* USER CODE END 0 */
  27:Src/i2c.c     **** #if 0
  28:Src/i2c.c     **** /* I2C1 init function */
  29:Src/i2c.c     **** void MX_I2C1_Init(void)
  30:Src/i2c.c     **** {
  31:Src/i2c.c     **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 2


  32:Src/i2c.c     ****   /* USER CODE BEGIN I2C1_Init 0 */
  33:Src/i2c.c     **** 
  34:Src/i2c.c     ****   /* USER CODE END I2C1_Init 0 */
  35:Src/i2c.c     **** 
  36:Src/i2c.c     ****   LL_I2C_InitTypeDef I2C_InitStruct = {0};
  37:Src/i2c.c     **** 
  38:Src/i2c.c     ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
  39:Src/i2c.c     **** 
  40:Src/i2c.c     ****   LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_GPIOA);
  41:Src/i2c.c     ****   /**I2C1 GPIO Configuration
  42:Src/i2c.c     ****   PA9   ------> I2C1_SCL
  43:Src/i2c.c     ****   PA10   ------> I2C1_SDA
  44:Src/i2c.c     ****   */
  45:Src/i2c.c     ****   GPIO_InitStruct.Pin = LL_GPIO_PIN_9;
  46:Src/i2c.c     ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
  47:Src/i2c.c     ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
  48:Src/i2c.c     ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_OPENDRAIN;
  49:Src/i2c.c     ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
  50:Src/i2c.c     ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_4;
  51:Src/i2c.c     ****   LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  52:Src/i2c.c     **** 
  53:Src/i2c.c     ****   GPIO_InitStruct.Pin = LL_GPIO_PIN_10;
  54:Src/i2c.c     ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
  55:Src/i2c.c     ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
  56:Src/i2c.c     ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_OPENDRAIN;
  57:Src/i2c.c     ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
  58:Src/i2c.c     ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_4;
  59:Src/i2c.c     ****   LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  60:Src/i2c.c     **** 
  61:Src/i2c.c     ****   /* Peripheral clock enable */
  62:Src/i2c.c     ****   LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_I2C1);
  63:Src/i2c.c     **** 
  64:Src/i2c.c     ****   /* I2C1 DMA Init */
  65:Src/i2c.c     **** 
  66:Src/i2c.c     ****   /* I2C1_RX Init */
  67:Src/i2c.c     ****   LL_DMA_SetDataTransferDirection(DMA1, LL_DMA_CHANNEL_3, LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
  68:Src/i2c.c     **** 
  69:Src/i2c.c     ****   LL_DMA_SetChannelPriorityLevel(DMA1, LL_DMA_CHANNEL_3, LL_DMA_PRIORITY_LOW);
  70:Src/i2c.c     **** 
  71:Src/i2c.c     ****   LL_DMA_SetMode(DMA1, LL_DMA_CHANNEL_3, LL_DMA_MODE_NORMAL);
  72:Src/i2c.c     **** 
  73:Src/i2c.c     ****   LL_DMA_SetPeriphIncMode(DMA1, LL_DMA_CHANNEL_3, LL_DMA_PERIPH_NOINCREMENT);
  74:Src/i2c.c     **** 
  75:Src/i2c.c     ****   LL_DMA_SetMemoryIncMode(DMA1, LL_DMA_CHANNEL_3, LL_DMA_MEMORY_INCREMENT);
  76:Src/i2c.c     **** 
  77:Src/i2c.c     ****   LL_DMA_SetPeriphSize(DMA1, LL_DMA_CHANNEL_3, LL_DMA_PDATAALIGN_BYTE);
  78:Src/i2c.c     **** 
  79:Src/i2c.c     ****   LL_DMA_SetMemorySize(DMA1, LL_DMA_CHANNEL_3, LL_DMA_MDATAALIGN_BYTE);
  80:Src/i2c.c     **** 
  81:Src/i2c.c     ****   /* I2C1 interrupt Init */
  82:Src/i2c.c     ****   NVIC_SetPriority(I2C1_IRQn, 0);
  83:Src/i2c.c     ****   NVIC_EnableIRQ(I2C1_IRQn);
  84:Src/i2c.c     **** 
  85:Src/i2c.c     ****   /* USER CODE BEGIN I2C1_Init 1 */
  86:Src/i2c.c     **** 
  87:Src/i2c.c     ****   /* USER CODE END I2C1_Init 1 */
  88:Src/i2c.c     **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 3


  89:Src/i2c.c     ****   /** I2C Initialization
  90:Src/i2c.c     ****   */
  91:Src/i2c.c     ****   LL_I2C_DisableOwnAddress2(I2C1);
  92:Src/i2c.c     ****   LL_I2C_DisableGeneralCall(I2C1);
  93:Src/i2c.c     ****   LL_I2C_EnableClockStretching(I2C1);
  94:Src/i2c.c     ****   I2C_InitStruct.PeripheralMode = LL_I2C_MODE_I2C;
  95:Src/i2c.c     ****   I2C_InitStruct.Timing = 0x2000090E;
  96:Src/i2c.c     ****   I2C_InitStruct.AnalogFilter = LL_I2C_ANALOGFILTER_ENABLE;
  97:Src/i2c.c     ****   I2C_InitStruct.DigitalFilter = 0;
  98:Src/i2c.c     ****   I2C_InitStruct.OwnAddress1 = 0;
  99:Src/i2c.c     ****   I2C_InitStruct.TypeAcknowledge = LL_I2C_ACK;
 100:Src/i2c.c     ****   I2C_InitStruct.OwnAddrSize = LL_I2C_OWNADDRESS1_7BIT;
 101:Src/i2c.c     ****   LL_I2C_Init(I2C1, &I2C_InitStruct);
 102:Src/i2c.c     ****   LL_I2C_EnableAutoEndMode(I2C1);
 103:Src/i2c.c     ****   LL_I2C_SetOwnAddress2(I2C1, 0, LL_I2C_OWNADDRESS2_NOMASK);
 104:Src/i2c.c     ****   /* USER CODE BEGIN I2C1_Init 2 */
 105:Src/i2c.c     **** 
 106:Src/i2c.c     ****   /* USER CODE END I2C1_Init 2 */
 107:Src/i2c.c     **** 
 108:Src/i2c.c     **** }
 109:Src/i2c.c     **** #endif
 110:Src/i2c.c     **** /* USER CODE BEGIN 1 */
 111:Src/i2c.c     **** void MY_I2C1_Init(uint32_t _id)
 112:Src/i2c.c     **** {
  28              		.loc 1 112 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 64
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 112 1 is_stmt 0 view .LVU1
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 D646     		mov	lr, r10
  42 0004 4F46     		mov	r7, r9
  43 0006 4646     		mov	r6, r8
  44 0008 C0B5     		push	{r6, r7, lr}
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 32
  47              		.cfi_offset 8, -32
  48              		.cfi_offset 9, -28
  49              		.cfi_offset 10, -24
  50 000a 90B0     		sub	sp, sp, #64
  51              	.LCFI2:
  52              		.cfi_def_cfa_offset 96
  53 000c 8146     		mov	r9, r0
 113:Src/i2c.c     **** 
 114:Src/i2c.c     ****   /* USER CODE BEGIN I2C1_Init 0 */
 115:Src/i2c.c     **** 
 116:Src/i2c.c     ****   /* USER CODE END I2C1_Init 0 */
 117:Src/i2c.c     **** 
 118:Src/i2c.c     ****   LL_I2C_InitTypeDef I2C_InitStruct = {0};
  54              		.loc 1 118 3 is_stmt 1 view .LVU2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 4


  55              		.loc 1 118 22 is_stmt 0 view .LVU3
  56 000e 1C22     		movs	r2, #28
  57 0010 0021     		movs	r1, #0
  58 0012 09A8     		add	r0, sp, #36
  59              	.LVL1:
  60              		.loc 1 118 22 view .LVU4
  61 0014 FFF7FEFF 		bl	memset
  62              	.LVL2:
 119:Src/i2c.c     **** 
 120:Src/i2c.c     ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
  63              		.loc 1 120 3 is_stmt 1 view .LVU5
  64              		.loc 1 120 23 is_stmt 0 view .LVU6
  65 0018 1822     		movs	r2, #24
  66 001a 0021     		movs	r1, #0
  67 001c 03A8     		add	r0, sp, #12
  68 001e FFF7FEFF 		bl	memset
  69              	.LVL3:
 121:Src/i2c.c     **** 
 122:Src/i2c.c     ****   LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_GPIOA);
  70              		.loc 1 122 3 is_stmt 1 view .LVU7
  71              	.LBB70:
  72              	.LBI70:
  73              		.file 2 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @file    stm32f0xx_ll_bus.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   @verbatim                
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****     [..]  
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write 
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****     [..]  
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @attention
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * All rights reserved.</center></h2>
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * the "License"; You may not use this file except in compliance with the
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * License. You may obtain a copy of the License at:
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *                        opensource.org/licenses/BSD-3-Clause
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ******************************************************************************
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 5


  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #ifndef __STM32F0xx_LL_BUS_H
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define __STM32F0xx_LL_BUS_H
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #ifdef __cplusplus
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** extern "C" {
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #include "stm32f0xx.h"
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @addtogroup STM32F0xx_LL_Driver
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(RCC)
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHBENR_DMA1EN
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(DMA2)
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2           RCC_AHBENR_DMA2EN
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*DMA2*/
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM           RCC_AHBENR_SRAMEN
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FLASH          RCC_AHBENR_FLITFEN
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHBENR_CRCEN
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOA          RCC_AHBENR_GPIOAEN
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOB          RCC_AHBENR_GPIOBEN
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOC          RCC_AHBENR_GPIOCEN
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(GPIOD)
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOD          RCC_AHBENR_GPIODEN
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*GPIOD*/
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(GPIOE)
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOE          RCC_AHBENR_GPIOEEN
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*GPIOE*/
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOF          RCC_AHBENR_GPIOFEN
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 6


  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TSC)
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_TSC            RCC_AHBENR_TSCEN
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TSC*/
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM2)
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR_TIM2EN
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM2*/
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR_TIM3EN
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM6)
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR_TIM6EN
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM6*/
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM7)
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR_TIM7EN
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM7*/
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM14          RCC_APB1ENR_TIM14EN
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR_WWDGEN
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(SPI2)
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR_SPI2EN
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*SPI2*/
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART2)
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR_USART2EN
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART2 */
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART3)
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART3         RCC_APB1ENR_USART3EN
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART3 */
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART4)
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART4         RCC_APB1ENR_USART4EN
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART4 */
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART5)
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART5         RCC_APB1ENR_USART5EN
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART5 */
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR_I2C1EN
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(I2C2)
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR_I2C2EN
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*I2C2*/
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USB)
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR_USBEN
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USB */
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(CAN)
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN            RCC_APB1ENR_CANEN
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*CAN*/
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(CRS)
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CRS            RCC_APB1ENR_CRSEN
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*CRS*/
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR_PWREN
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(DAC)
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR_DACEN
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*DAC*/
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(CEC)
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CEC            RCC_APB1ENR_CECEN
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 7


 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*CEC*/
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP2_PERIPH  APB1 GRP2 PERIPH
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_SYSCFG         RCC_APB2ENR_SYSCFGEN
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ADC1           RCC_APB2ENR_ADC1EN
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART8)
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART8         RCC_APB2ENR_USART8EN
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*USART8*/
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART7)
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART7         RCC_APB2ENR_USART7EN
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*USART7*/
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART6)
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART6         RCC_APB2ENR_USART6EN
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*USART6*/
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM1           RCC_APB2ENR_TIM1EN
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_SPI1           RCC_APB2ENR_SPI1EN
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART1         RCC_APB2ENR_USART1EN
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM15)
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM15          RCC_APB2ENR_TIM15EN
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM15*/
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM16          RCC_APB2ENR_TIM16EN
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM17          RCC_APB2ENR_TIM17EN
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_DBGMCU         RCC_APB2ENR_DBGMCUEN
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_EnableClock\n
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_EnableClock\n
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_EnableClock\n
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_EnableClock\n
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_EnableClock\n
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOAEN       LL_AHB1_GRP1_EnableClock\n
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_EnableClock\n
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_EnableClock\n
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 8


 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_EnableClock\n
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_EnableClock\n
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_EnableClock\n
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       TSCEN         LL_AHB1_GRP1_EnableClock
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
  74              		.loc 2 227 22 view .LVU8
  75              	.LBB71:
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   __IO uint32_t tmpreg;
  76              		.loc 2 229 3 view .LVU9
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
  77              		.loc 2 230 3 view .LVU10
  78 0022 514C     		ldr	r4, .L2
  79 0024 6269     		ldr	r2, [r4, #20]
  80 0026 8021     		movs	r1, #128
  81 0028 8902     		lsls	r1, r1, #10
  82 002a 0A43     		orrs	r2, r1
  83 002c 6261     		str	r2, [r4, #20]
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBENR, Periphs);
  84              		.loc 2 232 3 view .LVU11
  85              		.loc 2 232 12 is_stmt 0 view .LVU12
  86 002e 6369     		ldr	r3, [r4, #20]
  87 0030 0B40     		ands	r3, r1
  88              		.loc 2 232 10 view .LVU13
  89 0032 0293     		str	r3, [sp, #8]
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
  90              		.loc 2 233 3 is_stmt 1 view .LVU14
  91 0034 029B     		ldr	r3, [sp, #8]
  92              	.LVL4:
  93              		.loc 2 233 3 is_stmt 0 view .LVU15
  94              	.LBE71:
  95              	.LBE70:
 123:Src/i2c.c     ****   /**I2C1 GPIO Configuration
 124:Src/i2c.c     ****   PA9   ------> I2C1_SCL
 125:Src/i2c.c     ****   PA10   ------> I2C1_SDA
 126:Src/i2c.c     ****   */
 127:Src/i2c.c     ****   GPIO_InitStruct.Pin = LL_GPIO_PIN_9;
  96              		.loc 1 127 3 is_stmt 1 view .LVU16
  97              		.loc 1 127 23 is_stmt 0 view .LVU17
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 9


  98 0036 8023     		movs	r3, #128
  99 0038 9B00     		lsls	r3, r3, #2
 100 003a 0393     		str	r3, [sp, #12]
 128:Src/i2c.c     ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 101              		.loc 1 128 3 is_stmt 1 view .LVU18
 102              		.loc 1 128 24 is_stmt 0 view .LVU19
 103 003c 0227     		movs	r7, #2
 104 003e 0497     		str	r7, [sp, #16]
 129:Src/i2c.c     ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 105              		.loc 1 129 3 is_stmt 1 view .LVU20
 106              		.loc 1 129 25 is_stmt 0 view .LVU21
 107 0040 FE3B     		subs	r3, r3, #254
 108 0042 FF3B     		subs	r3, r3, #255
 109 0044 9A46     		mov	r10, r3
 110 0046 0593     		str	r3, [sp, #20]
 130:Src/i2c.c     ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_OPENDRAIN;
 111              		.loc 1 130 3 is_stmt 1 view .LVU22
 112              		.loc 1 130 30 is_stmt 0 view .LVU23
 113 0048 0125     		movs	r5, #1
 114 004a 0695     		str	r5, [sp, #24]
 131:Src/i2c.c     ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_UP;
 115              		.loc 1 131 3 is_stmt 1 view .LVU24
 116              		.loc 1 131 24 is_stmt 0 view .LVU25
 117 004c 0795     		str	r5, [sp, #28]
 132:Src/i2c.c     ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_4;
 118              		.loc 1 132 3 is_stmt 1 view .LVU26
 119              		.loc 1 132 29 is_stmt 0 view .LVU27
 120 004e 0426     		movs	r6, #4
 121 0050 0896     		str	r6, [sp, #32]
 133:Src/i2c.c     ****   LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 122              		.loc 1 133 3 is_stmt 1 view .LVU28
 123 0052 9023     		movs	r3, #144
 124 0054 DB05     		lsls	r3, r3, #23
 125 0056 9846     		mov	r8, r3
 126 0058 03A9     		add	r1, sp, #12
 127 005a 1800     		movs	r0, r3
 128 005c FFF7FEFF 		bl	LL_GPIO_Init
 129              	.LVL5:
 134:Src/i2c.c     **** 
 135:Src/i2c.c     ****   GPIO_InitStruct.Pin = LL_GPIO_PIN_10;
 130              		.loc 1 135 3 view .LVU29
 131              		.loc 1 135 23 is_stmt 0 view .LVU30
 132 0060 8023     		movs	r3, #128
 133 0062 DB00     		lsls	r3, r3, #3
 134 0064 0393     		str	r3, [sp, #12]
 136:Src/i2c.c     ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 135              		.loc 1 136 3 is_stmt 1 view .LVU31
 136              		.loc 1 136 24 is_stmt 0 view .LVU32
 137 0066 0497     		str	r7, [sp, #16]
 137:Src/i2c.c     ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 138              		.loc 1 137 3 is_stmt 1 view .LVU33
 139              		.loc 1 137 25 is_stmt 0 view .LVU34
 140 0068 5346     		mov	r3, r10
 141 006a 0593     		str	r3, [sp, #20]
 138:Src/i2c.c     ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_OPENDRAIN;
 142              		.loc 1 138 3 is_stmt 1 view .LVU35
 143              		.loc 1 138 30 is_stmt 0 view .LVU36
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 10


 144 006c 0695     		str	r5, [sp, #24]
 139:Src/i2c.c     ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_UP;
 145              		.loc 1 139 3 is_stmt 1 view .LVU37
 146              		.loc 1 139 24 is_stmt 0 view .LVU38
 147 006e 0795     		str	r5, [sp, #28]
 140:Src/i2c.c     ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_4;
 148              		.loc 1 140 3 is_stmt 1 view .LVU39
 149              		.loc 1 140 29 is_stmt 0 view .LVU40
 150 0070 0896     		str	r6, [sp, #32]
 141:Src/i2c.c     ****   LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 151              		.loc 1 141 3 is_stmt 1 view .LVU41
 152 0072 03A9     		add	r1, sp, #12
 153 0074 4046     		mov	r0, r8
 154 0076 FFF7FEFF 		bl	LL_GPIO_Init
 155              	.LVL6:
 142:Src/i2c.c     **** 
 143:Src/i2c.c     ****   LL_DMA_SetDataTransferDirection(DMA1, LL_DMA_CHANNEL_3, LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
 156              		.loc 1 143 3 view .LVU42
 157              	.LBB72:
 158              	.LBI72:
 159              		.file 3 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @file    stm32f0xx_ll_dma.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief   Header file of DMA LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   ******************************************************************************
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #ifndef __STM32F0xx_LL_DMA_H
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __STM32F0xx_LL_DMA_H
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #ifdef __cplusplus
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** extern "C" {
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #include "stm32f0xx.h"
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @addtogroup STM32F0xx_LL_Driver
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined (DMA1) || defined (DMA2)
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 11


  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL DMA
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Variables DMA Private Variables
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Array used to get the DMA channel register offset versus channel index LL_DMA_CHANNEL_x */
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** static const uint8_t CHANNEL_OFFSET_TAB[] =
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel1_BASE - DMA1_BASE),
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel2_BASE - DMA1_BASE),
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel3_BASE - DMA1_BASE),
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel4_BASE - DMA1_BASE),
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel5_BASE - DMA1_BASE),
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel6_BASE - DMA1_BASE),
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif /*DMA1_Channel6*/
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel7_BASE - DMA1_BASE)
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif /*DMA1_Channel7*/
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** };
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Private constants ---------------------------------------------------------*/
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Constants DMA Private Constants
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Define used to get CSELR register offset */
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define DMA_CSELR_OFFSET                  (uint32_t)(DMA1_CSELR_BASE - DMA1_BASE)
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Defines used for the bit position in the register and perform offsets */
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define DMA_POSITION_CSELR_CXS            ((Channel-1U)*4U)
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Private macros ------------------------------------------------------------*/
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Macros DMA Private Macros
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Exported types ------------------------------------------------------------*/
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_ES_INIT DMA Exported Init structure
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** typedef struct
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 12


  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcAddress;  /*!< Specifies the peripheral base address for DMA transfer
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         or as Source base address in case of memory to memory trans
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t MemoryOrM2MDstAddress;  /*!< Specifies the memory base address for DMA transfer
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         or as Destination base address in case of memory to memory 
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t Direction;              /*!< Specifies if the data will be transferred from memory to pe
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         from memory to memory or from peripheral to memory.
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_DIRECTION
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t Mode;                   /*!< Specifies the normal or circular operation mode.
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MODE
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         @note: The circular buffer mode cannot be used if the memor
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                                data transfer direction is configured on the selecte
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcIncMode;  /*!< Specifies whether the Peripheral address or Source address 
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         is incremented or not.
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PERIPH
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t MemoryOrM2MDstIncMode;  /*!< Specifies whether the Memory address or Destination address
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         is incremented or not.
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MEMORY
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcDataSize; /*!< Specifies the Peripheral data size alignment or Source data
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PDATAALIGN
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t MemoryOrM2MDstDataSize; /*!< Specifies the Memory data size alignment or Destination dat
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MDATAALIGN
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t NbData;                 /*!< Specifies the number of data to transfer, in data unit.
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         The data unit is equal to the source buffer configuration s
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         or MemorySize parameters depending in the transfer directio
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if (defined(DMA1_CSELR_DEFAULT)||defined(DMA2_CSELR_DEFAULT))
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t PeriphRequest;          /*!< Specifies the peripheral request.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 13


 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_REQUEST
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t Priority;               /*!< Specifies the channel priority level.
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PRIORITY
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** } LL_DMA_InitTypeDef;
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Exported constants --------------------------------------------------------*/
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Constants DMA Exported Constants
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CLEAR_FLAG Clear Flags Defines
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_WriteReg function
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF1                 DMA_IFCR_CGIF1        /*!< Channel 1 global flag         
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF1                DMA_IFCR_CTCIF1       /*!< Channel 1 transfer complete fl
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF1                DMA_IFCR_CHTIF1       /*!< Channel 1 half transfer flag  
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF1                DMA_IFCR_CTEIF1       /*!< Channel 1 transfer error flag 
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF2                 DMA_IFCR_CGIF2        /*!< Channel 2 global flag         
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF2                DMA_IFCR_CTCIF2       /*!< Channel 2 transfer complete fl
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF2                DMA_IFCR_CHTIF2       /*!< Channel 2 half transfer flag  
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF2                DMA_IFCR_CTEIF2       /*!< Channel 2 transfer error flag 
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF3                 DMA_IFCR_CGIF3        /*!< Channel 3 global flag         
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF3                DMA_IFCR_CTCIF3       /*!< Channel 3 transfer complete fl
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF3                DMA_IFCR_CHTIF3       /*!< Channel 3 half transfer flag  
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF3                DMA_IFCR_CTEIF3       /*!< Channel 3 transfer error flag 
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF4                 DMA_IFCR_CGIF4        /*!< Channel 4 global flag         
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF4                DMA_IFCR_CTCIF4       /*!< Channel 4 transfer complete fl
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF4                DMA_IFCR_CHTIF4       /*!< Channel 4 half transfer flag  
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF4                DMA_IFCR_CTEIF4       /*!< Channel 4 transfer error flag 
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF5                 DMA_IFCR_CGIF5        /*!< Channel 5 global flag         
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF5                DMA_IFCR_CTCIF5       /*!< Channel 5 transfer complete fl
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF5                DMA_IFCR_CHTIF5       /*!< Channel 5 half transfer flag  
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF5                DMA_IFCR_CTEIF5       /*!< Channel 5 transfer error flag 
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF6                 DMA_IFCR_CGIF6        /*!< Channel 6 global flag         
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF6                DMA_IFCR_CTCIF6       /*!< Channel 6 transfer complete fl
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF6                DMA_IFCR_CHTIF6       /*!< Channel 6 half transfer flag  
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF6                DMA_IFCR_CTEIF6       /*!< Channel 6 transfer error flag 
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF7                 DMA_IFCR_CGIF7        /*!< Channel 7 global flag         
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF7                DMA_IFCR_CTCIF7       /*!< Channel 7 transfer complete fl
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF7                DMA_IFCR_CHTIF7       /*!< Channel 7 half transfer flag  
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF7                DMA_IFCR_CTEIF7       /*!< Channel 7 transfer error flag 
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 14


 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_GET_FLAG Get Flags Defines
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_ReadReg function
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_GIF1                   DMA_ISR_GIF1          /*!< Channel 1 global flag         
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF1                  DMA_ISR_TCIF1         /*!< Channel 1 transfer complete fl
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF1                  DMA_ISR_HTIF1         /*!< Channel 1 half transfer flag  
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF1                  DMA_ISR_TEIF1         /*!< Channel 1 transfer error flag 
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_GIF2                   DMA_ISR_GIF2          /*!< Channel 2 global flag         
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF2                  DMA_ISR_TCIF2         /*!< Channel 2 transfer complete fl
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF2                  DMA_ISR_HTIF2         /*!< Channel 2 half transfer flag  
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF2                  DMA_ISR_TEIF2         /*!< Channel 2 transfer error flag 
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_GIF3                   DMA_ISR_GIF3          /*!< Channel 3 global flag         
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF3                  DMA_ISR_TCIF3         /*!< Channel 3 transfer complete fl
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF3                  DMA_ISR_HTIF3         /*!< Channel 3 half transfer flag  
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF3                  DMA_ISR_TEIF3         /*!< Channel 3 transfer error flag 
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_GIF4                   DMA_ISR_GIF4          /*!< Channel 4 global flag         
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF4                  DMA_ISR_TCIF4         /*!< Channel 4 transfer complete fl
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF4                  DMA_ISR_HTIF4         /*!< Channel 4 half transfer flag  
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF4                  DMA_ISR_TEIF4         /*!< Channel 4 transfer error flag 
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_GIF5                   DMA_ISR_GIF5          /*!< Channel 5 global flag         
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF5                  DMA_ISR_TCIF5         /*!< Channel 5 transfer complete fl
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF5                  DMA_ISR_HTIF5         /*!< Channel 5 half transfer flag  
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF5                  DMA_ISR_TEIF5         /*!< Channel 5 transfer error flag 
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_GIF6                   DMA_ISR_GIF6          /*!< Channel 6 global flag         
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF6                  DMA_ISR_TCIF6         /*!< Channel 6 transfer complete fl
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF6                  DMA_ISR_HTIF6         /*!< Channel 6 half transfer flag  
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF6                  DMA_ISR_TEIF6         /*!< Channel 6 transfer error flag 
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_GIF7                   DMA_ISR_GIF7          /*!< Channel 7 global flag         
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF7                  DMA_ISR_TCIF7         /*!< Channel 7 transfer complete fl
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF7                  DMA_ISR_HTIF7         /*!< Channel 7 half transfer flag  
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF7                  DMA_ISR_TEIF7         /*!< Channel 7 transfer error flag 
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_IT IT Defines
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief    IT defines which can be used with LL_DMA_ReadReg and  LL_DMA_WriteReg functions
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CCR_TCIE                   DMA_CCR_TCIE          /*!< Transfer complete interrupt */
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CCR_HTIE                   DMA_CCR_HTIE          /*!< Half Transfer interrupt     */
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CCR_TEIE                   DMA_CCR_TEIE          /*!< Transfer error interrupt    */
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CHANNEL CHANNEL
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 15


 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_1                  0x00000001U /*!< DMA Channel 1 */
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_2                  0x00000002U /*!< DMA Channel 2 */
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_3                  0x00000003U /*!< DMA Channel 3 */
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_4                  0x00000004U /*!< DMA Channel 4 */
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_5                  0x00000005U /*!< DMA Channel 5 */
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_6                  0x00000006U /*!< DMA Channel 6 */
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_7                  0x00000007U /*!< DMA Channel 7 */
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_ALL                0xFFFF0000U /*!< DMA Channel all (used only for function 
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_DIRECTION Transfer Direction
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_DIRECTION_PERIPH_TO_MEMORY 0x00000000U             /*!< Peripheral to memory directi
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_PERIPH DMA_CCR_DIR             /*!< Memory to peripheral directi
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_MEMORY DMA_CCR_MEM2MEM         /*!< Memory to memory direction  
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MODE Transfer mode
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_MODE_NORMAL                0x00000000U             /*!< Normal Mode                 
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_MODE_CIRCULAR              DMA_CCR_CIRC            /*!< Circular Mode               
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PERIPH Peripheral increment mode
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PERIPH_INCREMENT           DMA_CCR_PINC            /*!< Peripheral increment mode En
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PERIPH_NOINCREMENT         0x00000000U             /*!< Peripheral increment mode Di
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MEMORY Memory increment mode
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_MEMORY_INCREMENT           DMA_CCR_MINC            /*!< Memory increment mode Enable
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_MEMORY_NOINCREMENT         0x00000000U             /*!< Memory increment mode Disabl
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PDATAALIGN Peripheral data alignment
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 16


 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_BYTE            0x00000000U             /*!< Peripheral data alignment : 
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_HALFWORD        DMA_CCR_PSIZE_0         /*!< Peripheral data alignment : 
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_WORD            DMA_CCR_PSIZE_1         /*!< Peripheral data alignment : 
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MDATAALIGN Memory data alignment
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_BYTE            0x00000000U             /*!< Memory data alignment : Byte
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_HALFWORD        DMA_CCR_MSIZE_0         /*!< Memory data alignment : Half
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_WORD            DMA_CCR_MSIZE_1         /*!< Memory data alignment : Word
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PRIORITY Transfer Priority level
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PRIORITY_LOW               0x00000000U             /*!< Priority level : Low       *
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PRIORITY_MEDIUM            DMA_CCR_PL_0            /*!< Priority level : Medium    *
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PRIORITY_HIGH              DMA_CCR_PL_1            /*!< Priority level : High      *
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PRIORITY_VERYHIGH          DMA_CCR_PL              /*!< Priority level : Very_High *
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if (defined(DMA1_CSELR_DEFAULT)||defined(DMA2_CSELR_DEFAULT))
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_REQUEST Transfer peripheral request
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_0                  0x00000000U /*!< DMA peripheral request 0  */
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_1                  0x00000001U /*!< DMA peripheral request 1  */
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_2                  0x00000002U /*!< DMA peripheral request 2  */
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_3                  0x00000003U /*!< DMA peripheral request 3  */
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_4                  0x00000004U /*!< DMA peripheral request 4  */
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_5                  0x00000005U /*!< DMA peripheral request 5  */
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_6                  0x00000006U /*!< DMA peripheral request 6  */
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_7                  0x00000007U /*!< DMA peripheral request 7  */
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_8                  0x00000008U /*!< DMA peripheral request 8  */
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_9                  0x00000009U /*!< DMA peripheral request 9  */
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_10                 0x0000000AU /*!< DMA peripheral request 10 */
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_11                 0x0000000BU /*!< DMA peripheral request 11 */
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_12                 0x0000000CU /*!< DMA peripheral request 12 */
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_13                 0x0000000DU /*!< DMA peripheral request 13 */
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_14                 0x0000000EU /*!< DMA peripheral request 14 */
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_15                 0x0000000FU /*!< DMA peripheral request 15 */
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 17


 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Exported macro ------------------------------------------------------------*/
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Macros DMA Exported Macros
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EM_WRITE_READ Common Write and read registers macros
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Write a value in DMA register
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __REG__ Register to be written
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __VALUE__ Value to be written in the register
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Read a value in DMA register
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __REG__ Register to be read
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Register value
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EM_CONVERT_DMAxCHANNELy Convert DMAxChannely
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into DMAx
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval DMAx
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA2)
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)   \
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) > ((uint32_t)DMA1_Channel7)) ?  DMA2 : DMA1)
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #else
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)  (DMA1)
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into LL_DMA_CHANNEL_y
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval LL_DMA_CHANNEL_y
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined (DMA2)
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined (DMA2_Channel6) && defined (DMA2_Channel7)
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel1)) ? LL_DMA_CHANNEL_1 : \
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel2)) ? LL_DMA_CHANNEL_2 : \
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 18


 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel3)) ? LL_DMA_CHANNEL_3 : \
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel4)) ? LL_DMA_CHANNEL_4 : \
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel5)) ? LL_DMA_CHANNEL_5 : \
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel6)) ? LL_DMA_CHANNEL_6 : \
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #else
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel1)) ? LL_DMA_CHANNEL_1 : \
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel2)) ? LL_DMA_CHANNEL_2 : \
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel3)) ? LL_DMA_CHANNEL_3 : \
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel4)) ? LL_DMA_CHANNEL_4 : \
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel5)) ? LL_DMA_CHANNEL_5 : \
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #else
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined (DMA1_Channel6) && defined (DMA1_Channel7)
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #elif defined (DMA1_Channel6)
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  LL_DMA_CHANNEL_6)
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #else
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  LL_DMA_CHANNEL_5)
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif /* DMA1_Channel6 && DMA1_Channel7 */
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Convert DMA Instance DMAx and LL_DMA_CHANNEL_y into DMAx_Channely
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __DMA_INSTANCE__ DMAx
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __CHANNEL__ LL_DMA_CHANNEL_y
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval DMAx_Channely
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 19


 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined (DMA2)
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined (DMA2_Channel6) && defined (DMA2_Channel7)
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  DMA2_Channel7)
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #else
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  DMA1_Channel7)
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #else
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined (DMA1_Channel6) && defined (DMA1_Channel7)
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  DMA1_Channel7)
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #elif defined (DMA1_Channel6)
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  DMA1_Channel6)
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #else
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  DMA1_Channel5)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 20


 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif /* DMA1_Channel6 && DMA1_Channel7 */
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Exported functions --------------------------------------------------------*/
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Functions DMA Exported Functions
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  * @{
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  */
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EF_Configuration Configuration
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Enable DMA channel.
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_EnableChannel
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])))-
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Disable DMA channel.
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_DisableChannel
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_DisableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   CLEAR_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 21


 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Check if DMA channel is enabled or disabled.
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_IsEnabledChannel
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsEnabledChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_EN) == (DMA_CCR_EN));
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Configure all parameters link to DMA transfer.
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_ConfigTransfer\n
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_ConfigTransfer\n
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          CIRC          LL_DMA_ConfigTransfer\n
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          PINC          LL_DMA_ConfigTransfer\n
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          MINC          LL_DMA_ConfigTransfer\n
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          PSIZE         LL_DMA_ConfigTransfer\n
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          MSIZE         LL_DMA_ConfigTransfer\n
 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          PL            LL_DMA_ConfigTransfer
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Configuration This parameter must be a combination of all the following values:
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY or @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH o
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL or @ref LL_DMA_MODE_CIRCULAR
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT or @ref LL_DMA_PERIPH_NOINCREMENT
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT or @ref LL_DMA_MEMORY_NOINCREMENT
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE or @ref LL_DMA_PDATAALIGN_HALFWORD or @ref LL_DMA_PDAT
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE or @ref LL_DMA_MDATAALIGN_HALFWORD or @ref LL_DMA_MDAT
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW or @ref LL_DMA_PRIORITY_MEDIUM or @ref LL_DMA_PRIORITY_HI
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigTransfer(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Configurat
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM | DMA_CCR_CIRC | DMA_CCR_PINC | DMA_CCR_MINC | DMA_CCR_P
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              Configuration);
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 22


 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set Data transfer direction (read from peripheral or from memory).
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_SetDataTransferDirection\n
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_SetDataTransferDirection
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
 677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t 
 160              		.loc 3 682 22 view .LVU43
 161              	.LBB73:
 683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 162              		.loc 3 684 3 view .LVU44
 163 007a 3C4B     		ldr	r3, .L2+4
 164 007c 1A68     		ldr	r2, [r3]
 165 007e 3C49     		ldr	r1, .L2+8
 166 0080 0A40     		ands	r2, r1
 167 0082 1A60     		str	r2, [r3]
 168              	.LVL7:
 169              		.loc 3 684 3 is_stmt 0 view .LVU45
 170              	.LBE73:
 171              	.LBE72:
 144:Src/i2c.c     **** 
 145:Src/i2c.c     ****   LL_DMA_SetChannelPriorityLevel(DMA1, LL_DMA_CHANNEL_3, LL_DMA_PRIORITY_HIGH);
 172              		.loc 1 145 3 is_stmt 1 view .LVU46
 173              	.LBB74:
 174              	.LBI74:
 685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Data transfer direction (read from peripheral or from memory).
 690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_GetDataTransferDirection\n
 691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_GetDataTransferDirection
 692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 23


 704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel)
 707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_DIR | DMA_CCR_MEM2MEM));
 710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set DMA mode circular or normal.
 714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note The circular buffer mode cannot be used if the memory-to-memory
 715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * data transfer is configured on the selected Channel.
 716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_SetMode
 717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Mode This parameter can be one of the following values:
 727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Mode)
 732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              Mode);
 735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get DMA mode circular or normal.
 739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_GetMode
 740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMode(DMA_TypeDef *DMAx, uint32_t Channel)
 754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_CIRC));
 757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set Peripheral increment mode.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 24


 761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_SetPeriphIncMode
 762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  PeriphOrM2MSrcIncMode This parameter can be one of the following values:
 772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOr
 777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Peripheral increment mode.
 784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_GetPeriphIncMode
 785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_PINC));
 802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set Memory increment mode.
 806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_SetMemoryIncMode
 807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  MemoryOrM2MDstIncMode This parameter can be one of the following values:
 817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 25


 818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOr
 822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Memory increment mode.
 829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_GetMemoryIncMode
 830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_MINC));
 847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set Peripheral size.
 851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_SetPeriphSize
 852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  PeriphOrM2MSrcDataSize This parameter can be one of the following values:
 862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOrM2M
 868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Peripheral size.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 26


 875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_GetPeriphSize
 876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel)
 891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_PSIZE));
 894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set Memory size.
 898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_SetMemorySize
 899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  MemoryOrM2MDstDataSize This parameter can be one of the following values:
 909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOrM2M
 915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Memory size.
 922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_GetMemorySize
 923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 27


 932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel)
 938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_MSIZE));
 941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set Channel priority level.
 945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_SetChannelPriorityLevel
 946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Priority This parameter can be one of the following values:
 956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t P
 175              		.loc 3 962 22 view .LVU47
 176              	.LBB75:
 963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 177              		.loc 3 964 3 view .LVU48
 178 0084 1A68     		ldr	r2, [r3]
 179 0086 3B49     		ldr	r1, .L2+12
 180 0088 1140     		ands	r1, r2
 181 008a 8022     		movs	r2, #128
 182 008c 9201     		lsls	r2, r2, #6
 183 008e 0A43     		orrs	r2, r1
 184 0090 1A60     		str	r2, [r3]
 185              	.LVL8:
 186              		.loc 3 964 3 is_stmt 0 view .LVU49
 187              	.LBE75:
 188              	.LBE74:
 146:Src/i2c.c     **** 
 147:Src/i2c.c     ****   LL_DMA_SetMode(DMA1, LL_DMA_CHANNEL_3, LL_DMA_MODE_NORMAL);
 189              		.loc 1 147 3 is_stmt 1 view .LVU50
 190              	.LBB76:
 191              	.LBI76:
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 192              		.loc 3 731 22 view .LVU51
 193              	.LBB77:
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              Mode);
 194              		.loc 3 733 3 view .LVU52
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 28


 195 0092 1A68     		ldr	r2, [r3]
 196 0094 2021     		movs	r1, #32
 197 0096 8A43     		bics	r2, r1
 198 0098 1A60     		str	r2, [r3]
 199              	.LVL9:
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              Mode);
 200              		.loc 3 733 3 is_stmt 0 view .LVU53
 201              	.LBE77:
 202              	.LBE76:
 148:Src/i2c.c     **** 
 149:Src/i2c.c     ****   LL_DMA_SetPeriphIncMode(DMA1, LL_DMA_CHANNEL_3, LL_DMA_PERIPH_NOINCREMENT);
 203              		.loc 1 149 3 is_stmt 1 view .LVU54
 204              	.LBB78:
 205              	.LBI78:
 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 206              		.loc 3 776 22 view .LVU55
 207              	.LBB79:
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 208              		.loc 3 778 3 view .LVU56
 209 009a 1A68     		ldr	r2, [r3]
 210 009c 2031     		adds	r1, r1, #32
 211 009e 8A43     		bics	r2, r1
 212 00a0 1A60     		str	r2, [r3]
 213              	.LVL10:
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 214              		.loc 3 778 3 is_stmt 0 view .LVU57
 215              	.LBE79:
 216              	.LBE78:
 150:Src/i2c.c     **** 
 151:Src/i2c.c     ****   LL_DMA_SetMemoryIncMode(DMA1, LL_DMA_CHANNEL_3, LL_DMA_MEMORY_INCREMENT);
 217              		.loc 1 151 3 is_stmt 1 view .LVU58
 218              	.LBB80:
 219              	.LBI80:
 821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 220              		.loc 3 821 22 view .LVU59
 221              	.LBB81:
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 222              		.loc 3 823 3 view .LVU60
 223 00a2 1A68     		ldr	r2, [r3]
 224 00a4 4031     		adds	r1, r1, #64
 225 00a6 8A43     		bics	r2, r1
 226 00a8 0A43     		orrs	r2, r1
 227 00aa 1A60     		str	r2, [r3]
 228              	.LVL11:
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 229              		.loc 3 823 3 is_stmt 0 view .LVU61
 230              	.LBE81:
 231              	.LBE80:
 152:Src/i2c.c     **** 
 153:Src/i2c.c     ****   LL_DMA_SetPeriphSize(DMA1, LL_DMA_CHANNEL_3, LL_DMA_PDATAALIGN_BYTE);
 232              		.loc 1 153 3 is_stmt 1 view .LVU62
 233              	.LBB82:
 234              	.LBI82:
 867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 235              		.loc 3 867 22 view .LVU63
 236              	.LBB83:
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 29


 237              		.loc 3 869 3 view .LVU64
 238 00ac 1A68     		ldr	r2, [r3]
 239 00ae 3249     		ldr	r1, .L2+16
 240 00b0 0A40     		ands	r2, r1
 241 00b2 1A60     		str	r2, [r3]
 242              	.LVL12:
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 243              		.loc 3 869 3 is_stmt 0 view .LVU65
 244              	.LBE83:
 245              	.LBE82:
 154:Src/i2c.c     **** 
 155:Src/i2c.c     ****   LL_DMA_SetMemorySize(DMA1, LL_DMA_CHANNEL_3, LL_DMA_MDATAALIGN_BYTE);
 246              		.loc 1 155 3 is_stmt 1 view .LVU66
 247              	.LBB84:
 248              	.LBI84:
 914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 249              		.loc 3 914 22 view .LVU67
 250              	.LBB85:
 916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 251              		.loc 3 916 3 view .LVU68
 252 00b4 1A68     		ldr	r2, [r3]
 253 00b6 3149     		ldr	r1, .L2+20
 254 00b8 0A40     		ands	r2, r1
 255 00ba 1A60     		str	r2, [r3]
 256              	.LVL13:
 916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 257              		.loc 3 916 3 is_stmt 0 view .LVU69
 258              	.LBE85:
 259              	.LBE84:
 156:Src/i2c.c     **** 
 157:Src/i2c.c     ****   LL_DMA_SetDataLength(DMA1,LL_DMA_CHANNEL_3,5);
 260              		.loc 1 157 3 is_stmt 1 view .LVU70
 261              	.LBB86:
 262              	.LBI86:
 965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              Priority);
 966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel priority level.
 970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_GetChannelPriorityLevel
 971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel)
 987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 30


 988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_PL));
 990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set Number of data to transfer.
 994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   This action has no effect if
 995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         channel is enabled.
 996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_SetDataLength
 997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  NbData Between Min_Data = 0 and Max_Data = 0x0000FFFF
1007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataLength(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t NbData)
 263              		.loc 3 1009 22 view .LVU71
 264              	.LBB87:
1010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 265              		.loc 3 1011 3 view .LVU72
 266 00bc 5A68     		ldr	r2, [r3, #4]
 267 00be 120C     		lsrs	r2, r2, #16
 268 00c0 1204     		lsls	r2, r2, #16
 269 00c2 0521     		movs	r1, #5
 270 00c4 0A43     		orrs	r2, r1
 271 00c6 5A60     		str	r2, [r3, #4]
 272              	.LVL14:
 273              		.loc 3 1011 3 is_stmt 0 view .LVU73
 274              	.LBE87:
 275              	.LBE86:
 158:Src/i2c.c     ****   LL_DMA_SetMemoryAddress(DMA1,LL_DMA_CHANNEL_3,(uint32_t)i2cDataRx);
 276              		.loc 1 158 3 is_stmt 1 view .LVU74
 277 00c8 2D4A     		ldr	r2, .L2+24
 278              	.LVL15:
 279              	.LBB88:
 280              	.LBI88:
1012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
1013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Number of data to transfer.
1017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Once the channel is enabled, the return value indicate the
1018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         remaining bytes to be transmitted.
1019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_GetDataLength
1020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 31


1026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataLength(DMA_TypeDef *DMAx, uint32_t Channel)
1032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CNDTR_NDT));
1035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Configure the Source and Destination addresses.
1039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Each IP using DMA provides an API to get directly the register adress (LL_PPP_DMA_GetRe
1041:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_ConfigAddresses\n
1042:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CMAR         MA            LL_DMA_ConfigAddresses
1043:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1044:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1045:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1046:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1047:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1048:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1049:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1050:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1051:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1052:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  SrcAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1053:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DstAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1054:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
1055:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
1056:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
1057:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
1058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1059:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1060:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigAddresses(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t SrcAddres
1061:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                             uint32_t DstAddress, uint32_t Direction)
1062:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1063:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   /* Direction Memory to Periph */
1064:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   if (Direction == LL_DMA_DIRECTION_MEMORY_TO_PERIPH)
1065:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   {
1066:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]
1067:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]
1068:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   }
1069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   /* Direction Periph to Memory and Memory to Memory */
1070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   else
1071:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   {
1072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]
1073:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]
1074:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   }
1075:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1076:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1077:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1078:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set the Memory address.
1079:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1080:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1081:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_SetMemoryAddress
1082:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 32


1083:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1084:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1085:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1086:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1087:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1088:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1089:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1090:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1091:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1093:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1094:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
 281              		.loc 3 1094 22 view .LVU75
 282              	.LBB89:
1095:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1096:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
 283              		.loc 3 1096 3 view .LVU76
 284 00ca DA60     		str	r2, [r3, #12]
 285              	.LVL16:
 286              		.loc 3 1096 3 is_stmt 0 view .LVU77
 287              	.LBE89:
 288              	.LBE88:
 159:Src/i2c.c     ****   LL_DMA_SetPeriphAddress(DMA1,LL_DMA_CHANNEL_3,LL_I2C_DMA_GetRegAddr(I2C1,LL_I2C_DMA_REG_DATA_RECE
 289              		.loc 1 159 3 is_stmt 1 view .LVU78
 290              	.LBB90:
 291              	.LBI90:
 292              		.file 4 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @file    stm32f0xx_ll_i2c.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief   Header file of I2C LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   ******************************************************************************
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #ifndef STM32F0xx_LL_I2C_H
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define STM32F0xx_LL_I2C_H
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #ifdef __cplusplus
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** extern "C" {
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #endif
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #include "stm32f0xx.h"
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 33


  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @addtogroup STM32F0xx_LL_Driver
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #if defined (I2C1) || defined (I2C2)
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL I2C
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /* Private constants ---------------------------------------------------------*/
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_Private_Constants I2C Private Constants
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /* Private macros ------------------------------------------------------------*/
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #if defined(USE_FULL_LL_DRIVER)
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_Private_Macros I2C Private Macros
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #endif /*USE_FULL_LL_DRIVER*/
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /* Exported types ------------------------------------------------------------*/
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #if defined(USE_FULL_LL_DRIVER)
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_ES_INIT I2C Exported Init structure
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** typedef struct
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   uint32_t PeripheralMode;      /*!< Specifies the peripheral mode.
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This parameter can be a value of @ref I2C_LL_EC_PERIPHERAL_MOD
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      @ref LL_I2C_SetMode(). */
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   uint32_t Timing;              /*!< Specifies the SDA setup, hold time and the SCL high, low perio
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This parameter must be set by referring to the STM32CubeMX Too
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      the helper macro @ref __LL_I2C_CONVERT_TIMINGS().
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      @ref LL_I2C_SetTiming(). */
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   uint32_t AnalogFilter;        /*!< Enables or disables analog noise filter.
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This parameter can be a value of @ref I2C_LL_EC_ANALOGFILTER_S
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      @ref LL_I2C_EnableAnalogFilter() or LL_I2C_DisableAnalogFilter
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 34


  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   uint32_t DigitalFilter;       /*!< Configures the digital noise filter.
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This parameter can be a number between Min_Data = 0x00 and Max
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      @ref LL_I2C_SetDigitalFilter(). */
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   uint32_t OwnAddress1;         /*!< Specifies the device own address 1.
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This parameter must be a value between Min_Data = 0x00 and Max
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      @ref LL_I2C_SetOwnAddress1(). */
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   uint32_t TypeAcknowledge;     /*!< Specifies the ACKnowledge or Non ACKnowledge condition after t
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      match code or next received byte.
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This parameter can be a value of @ref I2C_LL_EC_I2C_ACKNOWLEDG
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      @ref LL_I2C_AcknowledgeNextData(). */
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   uint32_t OwnAddrSize;         /*!< Specifies the device own address 1 size (7-bit or 10-bit).
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This parameter can be a value of @ref I2C_LL_EC_OWNADDRESS1.
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                      @ref LL_I2C_SetOwnAddress1(). */
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** } LL_I2C_InitTypeDef;
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #endif /*USE_FULL_LL_DRIVER*/
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /* Exported constants --------------------------------------------------------*/
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_Exported_Constants I2C Exported Constants
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_CLEAR_FLAG Clear Flags Defines
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief    Flags defines which can be used with LL_I2C_WriteReg function
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ICR_ADDRCF                   I2C_ICR_ADDRCF          /*!< Address Matched flag   */
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ICR_NACKCF                   I2C_ICR_NACKCF          /*!< Not Acknowledge flag   */
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ICR_STOPCF                   I2C_ICR_STOPCF          /*!< Stop detection flag    */
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ICR_BERRCF                   I2C_ICR_BERRCF          /*!< Bus error flag         */
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ICR_ARLOCF                   I2C_ICR_ARLOCF          /*!< Arbitration Lost flag  */
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ICR_OVRCF                    I2C_ICR_OVRCF           /*!< Overrun/Underrun flag  */
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ICR_PECCF                    I2C_ICR_PECCF           /*!< PEC error flag         */
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ICR_TIMOUTCF                 I2C_ICR_TIMOUTCF        /*!< Timeout detection flag */
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ICR_ALERTCF                  I2C_ICR_ALERTCF         /*!< Alert flag             */
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_GET_FLAG Get Flags Defines
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief    Flags defines which can be used with LL_I2C_ReadReg function
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_TXE                      I2C_ISR_TXE             /*!< Transmit data register emp
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 35


 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_TXIS                     I2C_ISR_TXIS            /*!< Transmit interrupt status 
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_RXNE                     I2C_ISR_RXNE            /*!< Receive data register not 
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_ADDR                     I2C_ISR_ADDR            /*!< Address matched (slave mod
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_NACKF                    I2C_ISR_NACKF           /*!< Not Acknowledge received f
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_STOPF                    I2C_ISR_STOPF           /*!< Stop detection flag       
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_TC                       I2C_ISR_TC              /*!< Transfer Complete (master 
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_TCR                      I2C_ISR_TCR             /*!< Transfer Complete Reload  
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_BERR                     I2C_ISR_BERR            /*!< Bus error                 
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_ARLO                     I2C_ISR_ARLO            /*!< Arbitration lost          
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_OVR                      I2C_ISR_OVR             /*!< Overrun/Underrun (slave mo
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_PECERR                   I2C_ISR_PECERR          /*!< PEC Error in reception (SM
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_TIMEOUT                  I2C_ISR_TIMEOUT         /*!< Timeout detection flag (SM
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_ALERT                    I2C_ISR_ALERT           /*!< SMBus alert (SMBus mode)  
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ISR_BUSY                     I2C_ISR_BUSY            /*!< Bus busy                  
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_IT IT Defines
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief    IT defines which can be used with LL_I2C_ReadReg and  LL_I2C_WriteReg functions
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_CR1_TXIE                     I2C_CR1_TXIE            /*!< TX Interrupt enable       
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_CR1_RXIE                     I2C_CR1_RXIE            /*!< RX Interrupt enable       
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_CR1_ADDRIE                   I2C_CR1_ADDRIE          /*!< Address match Interrupt en
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_CR1_NACKIE                   I2C_CR1_NACKIE          /*!< Not acknowledge received I
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_CR1_STOPIE                   I2C_CR1_STOPIE          /*!< STOP detection Interrupt e
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_CR1_TCIE                     I2C_CR1_TCIE            /*!< Transfer Complete interrup
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_CR1_ERRIE                    I2C_CR1_ERRIE           /*!< Error interrupts enable   
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_PERIPHERAL_MODE Peripheral Mode
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_I2C                    0x00000000U              /*!< I2C Master or Slave mode  
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_HOST             I2C_CR1_SMBHEN           /*!< SMBus Host address acknowl
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_DEVICE           0x00000000U              /*!< SMBus Device default mode
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                          (Default address not ackno
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_DEVICE_ARP       I2C_CR1_SMBDEN           /*!< SMBus Device Default addre
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_ANALOGFILTER_SELECTION Analog Filter Selection
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ANALOGFILTER_ENABLE          0x00000000U             /*!< Analog filter is enabled. 
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ANALOGFILTER_DISABLE         I2C_CR1_ANFOFF          /*!< Analog filter is disabled.
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_ADDRESSING_MODE Master Addressing Mode
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 36


 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ADDRESSING_MODE_7BIT         0x00000000U              /*!< Master operates in 7-bit 
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ADDRESSING_MODE_10BIT        I2C_CR2_ADD10            /*!< Master operates in 10-bit
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_OWNADDRESS1 Own Address 1 Length
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS1_7BIT             0x00000000U             /*!< Own address 1 is a 7-bit a
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS1_10BIT            I2C_OAR1_OA1MODE        /*!< Own address 1 is a 10-bit 
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_OWNADDRESS2 Own Address 2 Masks
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_NOMASK           I2C_OAR2_OA2NOMASK      /*!< Own Address2 No mask.     
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK01           I2C_OAR2_OA2MASK01      /*!< Only Address2 bits[7:2] ar
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK02           I2C_OAR2_OA2MASK02      /*!< Only Address2 bits[7:3] ar
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK03           I2C_OAR2_OA2MASK03      /*!< Only Address2 bits[7:4] ar
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK04           I2C_OAR2_OA2MASK04      /*!< Only Address2 bits[7:5] ar
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK05           I2C_OAR2_OA2MASK05      /*!< Only Address2 bits[7:6] ar
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK06           I2C_OAR2_OA2MASK06      /*!< Only Address2 bits[7] are 
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK07           I2C_OAR2_OA2MASK07      /*!< No comparison is done.
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                          All Address2 are acknowled
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_I2C_ACKNOWLEDGE Acknowledge Generation
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ACK                          0x00000000U              /*!< ACK is sent after current
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_NACK                         I2C_CR2_NACK             /*!< NACK is sent after curren
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_ADDRSLAVE Slave Address Length
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ADDRSLAVE_7BIT               0x00000000U              /*!< Slave Address in 7-bit. *
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ADDRSLAVE_10BIT              I2C_CR2_ADD10            /*!< Slave Address in 10-bit.*
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_REQUEST Transfer Request Direction
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_REQUEST_WRITE                0x00000000U              /*!< Master request a write tr
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_REQUEST_READ                 I2C_CR2_RD_WRN           /*!< Master request a read tra
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 37


 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_MODE Transfer End Mode
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_RELOAD                  I2C_CR2_RELOAD           /*!< Enable I2C Reload mode.  
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_AUTOEND                 I2C_CR2_AUTOEND          /*!< Enable I2C Automatic end 
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           with no HW PEC comparison
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_SOFTEND                 0x00000000U              /*!< Enable I2C Software end m
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           with no HW PEC comparison
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_RELOAD            LL_I2C_MODE_RELOAD       /*!< Enable SMBUS Automatic en
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           with HW PEC comparison.  
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_AUTOEND_NO_PEC    LL_I2C_MODE_AUTOEND      /*!< Enable SMBUS Automatic en
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           with HW PEC comparison.  
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_SOFTEND_NO_PEC    LL_I2C_MODE_SOFTEND      /*!< Enable SMBUS Software end
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           with HW PEC comparison.  
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_AUTOEND_WITH_PEC  (uint32_t)(LL_I2C_MODE_AUTOEND | I2C_CR2_PECBYTE)
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /*!< Enable SMBUS Automatic end mode with HW PEC comparison.   */
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_SOFTEND_WITH_PEC  (uint32_t)(LL_I2C_MODE_SOFTEND | I2C_CR2_PECBYTE)
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /*!< Enable SMBUS Software end mode with HW PEC comparison.    */
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_GENERATE Start And Stop Generation
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_GENERATE_NOSTARTSTOP         0x00000000U
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /*!< Don't Generate Stop and Start condition. */
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_GENERATE_STOP                (uint32_t)(0x80000000U | I2C_CR2_STOP)
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /*!< Generate Stop condition (Size should be set to 0).      */
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_GENERATE_START_READ          (uint32_t)(0x80000000U | I2C_CR2_START | I2C_CR2_RD_WRN
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /*!< Generate Start for read request. */
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_GENERATE_START_WRITE         (uint32_t)(0x80000000U | I2C_CR2_START)
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /*!< Generate Start for write request. */
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_GENERATE_RESTART_7BIT_READ   (uint32_t)(0x80000000U | I2C_CR2_START | I2C_CR2_RD_WRN
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /*!< Generate Restart for read request, slave 7Bit address.  */
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_GENERATE_RESTART_7BIT_WRITE  (uint32_t)(0x80000000U | I2C_CR2_START)
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /*!< Generate Restart for write request, slave 7Bit address. */
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_GENERATE_RESTART_10BIT_READ  (uint32_t)(0x80000000U | I2C_CR2_START | \
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                        I2C_CR2_RD_WRN | I2C_CR2_HEAD10R)
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /*!< Generate Restart for read request, slave 10Bit address. */
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_GENERATE_RESTART_10BIT_WRITE (uint32_t)(0x80000000U | I2C_CR2_START)
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /*!< Generate Restart for write request, slave 10Bit address.*/
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_DIRECTION Read Write Direction
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_DIRECTION_WRITE              0x00000000U              /*!< Write transfer request by
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           slave enters receiver mod
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_DIRECTION_READ               I2C_ISR_DIR              /*!< Read transfer request by 
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           slave enters transmitter 
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 38


 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_DMA_REG_DATA DMA Register Data
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_DMA_REG_DATA_TRANSMIT        0x00000000U              /*!< Get address of data regis
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           transmission */
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_DMA_REG_DATA_RECEIVE         0x00000001U              /*!< Get address of data regis
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           reception */
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_SMBUS_TIMEOUTA_MODE SMBus TimeoutA Mode SCL SDA Timeout
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW      0x00000000U          /*!< TimeoutA is used to detec
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           SCL low level timeout.   
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH I2C_TIMEOUTR_TIDLE   /*!< TimeoutA is used to detec
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                           both SCL and SDA high lev
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_SMBUS_TIMEOUT_SELECTION SMBus Timeout Selection
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_SMBUS_TIMEOUTA               I2C_TIMEOUTR_TIMOUTEN                 /*!< TimeoutA ena
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_SMBUS_TIMEOUTB               I2C_TIMEOUTR_TEXTEN                   /*!< TimeoutB (ex
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                                                        enable bit  
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_SMBUS_ALL_TIMEOUT            (uint32_t)(I2C_TIMEOUTR_TIMOUTEN | \
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                        I2C_TIMEOUTR_TEXTEN)       /*!< TimeoutA and
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** (extended clock) enable bits */
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /* Exported macro ------------------------------------------------------------*/
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_Exported_Macros I2C Exported Macros
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EM_WRITE_READ Common Write and read registers Macros
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Write a value in I2C register
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  __INSTANCE__ I2C Instance
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  __REG__ Register to be written
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  __VALUE__ Value to be written in the register
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 39


 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Read a value in I2C register
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  __INSTANCE__ I2C Instance
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  __REG__ Register to be read
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Register value
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define LL_I2C_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EM_CONVERT_TIMINGS Convert SDA SCL timings
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure the SDA setup, hold time and the SCL high, low period.
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  __PRESCALER__ This parameter must be a value between  Min_Data=0 and Max_Data=0xF.
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  __SETUP_TIME__ This parameter must be a value between Min_Data=0 and Max_Data=0xF.
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                            (tscldel = (SCLDEL+1)xtpresc)
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  __HOLD_TIME__  This parameter must be a value between Min_Data=0 and Max_Data=0xF.
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                            (tsdadel = SDADELxtpresc)
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  __SCLH_PERIOD__ This parameter must be a value between Min_Data=0 and Max_Data=0xFF.
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                             (tsclh = (SCLH+1)xtpresc)
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  __SCLL_PERIOD__ This parameter must be a value between  Min_Data=0 and Max_Data=0xFF.
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                             (tscll = (SCLL+1)xtpresc)
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0 and Max_Data=0xFFFFFFFF
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #define __LL_I2C_CONVERT_TIMINGS(__PRESCALER__, __SETUP_TIME__, __HOLD_TIME__, __SCLH_PERIOD__, __S
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   ((((uint32_t)(__PRESCALER__)    << I2C_TIMINGR_PRESC_Pos)  & I2C_TIMINGR_PRESC)   | \
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****    (((uint32_t)(__SETUP_TIME__)   << I2C_TIMINGR_SCLDEL_Pos) & I2C_TIMINGR_SCLDEL)  | \
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****    (((uint32_t)(__HOLD_TIME__)    << I2C_TIMINGR_SDADEL_Pos) & I2C_TIMINGR_SDADEL)  | \
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****    (((uint32_t)(__SCLH_PERIOD__)  << I2C_TIMINGR_SCLH_Pos)   & I2C_TIMINGR_SCLH)    | \
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****    (((uint32_t)(__SCLL_PERIOD__)  << I2C_TIMINGR_SCLL_Pos)   & I2C_TIMINGR_SCLL))
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /* Exported functions --------------------------------------------------------*/
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_Exported_Functions I2C Exported Functions
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EF_Configuration Configuration
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable I2C peripheral (PE = 1).
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          PE            LL_I2C_Enable
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 40


 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_Enable(I2C_TypeDef *I2Cx)
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_PE);
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable I2C peripheral (PE = 0).
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   When PE = 0, the I2C SCL and SDA lines are released.
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Internal state machines and status bits are put back to their reset value.
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         When cleared, PE must be kept low for at least 3 APB clock cycles.
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          PE            LL_I2C_Disable
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_Disable(I2C_TypeDef *I2Cx)
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_PE);
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if the I2C peripheral is enabled or disabled.
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          PE            LL_I2C_IsEnabled
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabled(I2C_TypeDef *I2Cx)
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_PE) == (I2C_CR1_PE)) ? 1UL : 0UL);
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure Noise Filters (Analog and Digital).
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   If the analog filter is also enabled, the digital filter is added to analog filter.
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         The filters can only be programmed when the I2C is disabled (PE = 0).
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ANFOFF        LL_I2C_ConfigFilters\n
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         CR1          DNF           LL_I2C_ConfigFilters
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  AnalogFilter This parameter can be one of the following values:
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ANALOGFILTER_ENABLE
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ANALOGFILTER_DISABLE
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  DigitalFilter This parameter must be a value between Min_Data=0x00 (Digital filter disa
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                           and Max_Data=0x0F (Digital filter enabled and filtering capability up to 
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         This parameter is used to configure the digital noise filter on SDA and SCL input.
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         The digital filter will filter spikes with a length of up to DNF[3:0]*ti2cclk.
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ConfigFilters(I2C_TypeDef *I2Cx, uint32_t AnalogFilter, uint32_t Digita
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR1, I2C_CR1_ANFOFF | I2C_CR1_DNF, AnalogFilter | (DigitalFilter << I2C_CR1_DNF_
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure Digital Noise Filter.
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   If the analog filter is also enabled, the digital filter is added to analog filter.
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         This filter can only be programmed when the I2C is disabled (PE = 0).
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          DNF           LL_I2C_SetDigitalFilter
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 41


 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  DigitalFilter This parameter must be a value between Min_Data=0x00 (Digital filter disa
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                           and Max_Data=0x0F (Digital filter enabled and filtering capability up to 
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         This parameter is used to configure the digital noise filter on SDA and SCL input.
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         The digital filter will filter spikes with a length of up to DNF[3:0]*ti2cclk.
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetDigitalFilter(I2C_TypeDef *I2Cx, uint32_t DigitalFilter)
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR1, I2C_CR1_DNF, DigitalFilter << I2C_CR1_DNF_Pos);
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the current Digital Noise Filter configuration.
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          DNF           LL_I2C_GetDigitalFilter
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xF
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetDigitalFilter(I2C_TypeDef *I2Cx)
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR1, I2C_CR1_DNF) >> I2C_CR1_DNF_Pos);
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable Analog Noise Filter.
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This filter can only be programmed when the I2C is disabled (PE = 0).
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ANFOFF        LL_I2C_EnableAnalogFilter
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableAnalogFilter(I2C_TypeDef *I2Cx)
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_ANFOFF);
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable Analog Noise Filter.
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This filter can only be programmed when the I2C is disabled (PE = 0).
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ANFOFF        LL_I2C_DisableAnalogFilter
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableAnalogFilter(I2C_TypeDef *I2Cx)
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_ANFOFF);
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if Analog Noise Filter is enabled or disabled.
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ANFOFF        LL_I2C_IsEnabledAnalogFilter
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledAnalogFilter(I2C_TypeDef *I2Cx)
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_ANFOFF) != (I2C_CR1_ANFOFF)) ? 1UL : 0UL);
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 42


 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable DMA transmission requests.
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          TXDMAEN       LL_I2C_EnableDMAReq_TX
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableDMAReq_TX(I2C_TypeDef *I2Cx)
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_TXDMAEN);
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable DMA transmission requests.
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          TXDMAEN       LL_I2C_DisableDMAReq_TX
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableDMAReq_TX(I2C_TypeDef *I2Cx)
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_TXDMAEN);
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if DMA transmission requests are enabled or disabled.
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          TXDMAEN       LL_I2C_IsEnabledDMAReq_TX
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledDMAReq_TX(I2C_TypeDef *I2Cx)
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_TXDMAEN) == (I2C_CR1_TXDMAEN)) ? 1UL : 0UL);
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable DMA reception requests.
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          RXDMAEN       LL_I2C_EnableDMAReq_RX
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableDMAReq_RX(I2C_TypeDef *I2Cx)
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_RXDMAEN);
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable DMA reception requests.
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          RXDMAEN       LL_I2C_DisableDMAReq_RX
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableDMAReq_RX(I2C_TypeDef *I2Cx)
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_RXDMAEN);
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if DMA reception requests are enabled or disabled.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 43


 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          RXDMAEN       LL_I2C_IsEnabledDMAReq_RX
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledDMAReq_RX(I2C_TypeDef *I2Cx)
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_RXDMAEN) == (I2C_CR1_RXDMAEN)) ? 1UL : 0UL);
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the data register address used for DMA transfer
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TXDR         TXDATA        LL_I2C_DMA_GetRegAddr\n
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         RXDR         RXDATA        LL_I2C_DMA_GetRegAddr
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  Direction This parameter can be one of the following values:
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_DMA_REG_DATA_TRANSMIT
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_DMA_REG_DATA_RECEIVE
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Address of data register
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_DMA_GetRegAddr(I2C_TypeDef *I2Cx, uint32_t Direction)
 293              		.loc 4 620 26 view .LVU79
 294              	.LBB91:
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   uint32_t data_reg_addr;
 295              		.loc 4 622 3 view .LVU80
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   if (Direction == LL_I2C_DMA_REG_DATA_TRANSMIT)
 296              		.loc 4 624 3 view .LVU81
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   {
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****     /* return address of TXDR register */
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****     data_reg_addr = (uint32_t) &(I2Cx->TXDR);
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   }
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   else
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   {
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****     /* return address of RXDR register */
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****     data_reg_addr = (uint32_t) &(I2Cx->RXDR);
 297              		.loc 4 632 5 view .LVU82
 298              		.loc 4 632 32 is_stmt 0 view .LVU83
 299 00cc 2D4A     		ldr	r2, .L2+28
 300              	.LVL17:
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   }
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return data_reg_addr;
 301              		.loc 4 635 3 is_stmt 1 view .LVU84
 302              		.loc 4 635 3 is_stmt 0 view .LVU85
 303              	.LBE91:
 304              	.LBE90:
 305              	.LBB92:
 306              	.LBI92:
1097:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1098:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1099:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set the Peripheral address.
1101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_SetPeriphAddress
1104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 44


1105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  PeriphAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphAd
 307              		.loc 3 1116 22 is_stmt 1 view .LVU86
 308              	.LBB93:
1117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
 309              		.loc 3 1118 3 view .LVU87
 310 00ce 9A60     		str	r2, [r3, #8]
 311              	.LVL18:
 312              		.loc 3 1118 3 is_stmt 0 view .LVU88
 313              	.LBE93:
 314              	.LBE92:
 160:Src/i2c.c     ****   LL_DMA_EnableIT_TC(DMA1,LL_DMA_CHANNEL_3);
 315              		.loc 1 160 3 is_stmt 1 view .LVU89
 316              	.LBB94:
 317              	.LBI94:
1119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Memory address.
1123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_GetMemoryAddress
1125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Peripheral address.
1143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_GetPeriphAddress
1145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 45


1150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set the Memory to Memory Source address.
1163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_SetM2MSrcAddress
1166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetM2MSrcAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
1181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set the Memory to Memory Destination address.
1185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_SetM2MDstAddress
1188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetM2MDstAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
1203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get the Memory to Memory Source address.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 46


1207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_GetM2MSrcAddress
1209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetM2MSrcAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get the Memory to Memory Destination address.
1227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_GetM2MDstAddress
1229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetM2MDstAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if (defined(DMA1_CSELR_DEFAULT)||defined(DMA2_CSELR_DEFAULT))
1246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set DMA request for DMA instance on Channel x.
1248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Please refer to Reference Manual to get the available mapping of Request value link to 
1249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CSELR        C1S           LL_DMA_SetPeriphRequest\n
1250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C2S           LL_DMA_SetPeriphRequest\n
1251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C3S           LL_DMA_SetPeriphRequest\n
1252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C4S           LL_DMA_SetPeriphRequest\n
1253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C5S           LL_DMA_SetPeriphRequest\n
1254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C6S           LL_DMA_SetPeriphRequest\n
1255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C7S           LL_DMA_SetPeriphRequest
1256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 47


1264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  PeriphRequest This parameter can be one of the following values:
1266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_0
1267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_1
1268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_2
1269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_3
1270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_4
1271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_5
1272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_6
1273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_7
1274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_8
1275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_9
1276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_10
1277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_11
1278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_12
1279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_13
1280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_14
1281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_15
1282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphRequest(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphRe
1285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(DMAx->CSELR,
1287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              DMA_CSELR_C1S << ((Channel - 1U) * 4U), PeriphRequest << DMA_POSITION_CSELR_CXS);
1288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get DMA request for DMA instance on Channel x.
1292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CSELR        C1S           LL_DMA_GetPeriphRequest\n
1293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C2S           LL_DMA_GetPeriphRequest\n
1294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C3S           LL_DMA_GetPeriphRequest\n
1295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C4S           LL_DMA_GetPeriphRequest\n
1296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C5S           LL_DMA_GetPeriphRequest\n
1297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C6S           LL_DMA_GetPeriphRequest\n
1298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C7S           LL_DMA_GetPeriphRequest
1299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
1309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_0
1310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_1
1311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_2
1312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_3
1313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_4
1314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_5
1315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_6
1316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_7
1317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_8
1318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_9
1319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_10
1320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_11
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 48


1321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_12
1322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_13
1323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_14
1324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_15
1325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphRequest(DMA_TypeDef *DMAx, uint32_t Channel)
1327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->CSELR,
1329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CSELR_C1S << ((Channel - 1U) * 4U)) >> DMA_POSITION_CSELR_CXS);
1330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
1335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EF_FLAG_Management FLAG_Management
1338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
1339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 1 global interrupt flag.
1343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          GIF1          LL_DMA_IsActiveFlag_GI1
1344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI1(DMA_TypeDef *DMAx)
1348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_GIF1) == (DMA_ISR_GIF1));
1350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 2 global interrupt flag.
1354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          GIF2          LL_DMA_IsActiveFlag_GI2
1355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI2(DMA_TypeDef *DMAx)
1359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_GIF2) == (DMA_ISR_GIF2));
1361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 3 global interrupt flag.
1365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          GIF3          LL_DMA_IsActiveFlag_GI3
1366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI3(DMA_TypeDef *DMAx)
1370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_GIF3) == (DMA_ISR_GIF3));
1372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 4 global interrupt flag.
1376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          GIF4          LL_DMA_IsActiveFlag_GI4
1377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 49


1378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI4(DMA_TypeDef *DMAx)
1381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_GIF4) == (DMA_ISR_GIF4));
1383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 5 global interrupt flag.
1387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          GIF5          LL_DMA_IsActiveFlag_GI5
1388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI5(DMA_TypeDef *DMAx)
1392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_GIF5) == (DMA_ISR_GIF5));
1394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
1397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 6 global interrupt flag.
1399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          GIF6          LL_DMA_IsActiveFlag_GI6
1400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI6(DMA_TypeDef *DMAx)
1404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_GIF6) == (DMA_ISR_GIF6));
1406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
1410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 7 global interrupt flag.
1412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          GIF7          LL_DMA_IsActiveFlag_GI7
1413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI7(DMA_TypeDef *DMAx)
1417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_GIF7) == (DMA_ISR_GIF7));
1419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 1 transfer complete flag.
1424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TCIF1         LL_DMA_IsActiveFlag_TC1
1425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC1(DMA_TypeDef *DMAx)
1429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TCIF1) == (DMA_ISR_TCIF1));
1431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 2 transfer complete flag.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 50


1435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TCIF2         LL_DMA_IsActiveFlag_TC2
1436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC2(DMA_TypeDef *DMAx)
1440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TCIF2) == (DMA_ISR_TCIF2));
1442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 3 transfer complete flag.
1446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TCIF3         LL_DMA_IsActiveFlag_TC3
1447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC3(DMA_TypeDef *DMAx)
1451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TCIF3) == (DMA_ISR_TCIF3));
1453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 4 transfer complete flag.
1457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TCIF4         LL_DMA_IsActiveFlag_TC4
1458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC4(DMA_TypeDef *DMAx)
1462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TCIF4) == (DMA_ISR_TCIF4));
1464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 5 transfer complete flag.
1468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TCIF5         LL_DMA_IsActiveFlag_TC5
1469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC5(DMA_TypeDef *DMAx)
1473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TCIF5) == (DMA_ISR_TCIF5));
1475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
1478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 6 transfer complete flag.
1480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TCIF6         LL_DMA_IsActiveFlag_TC6
1481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC6(DMA_TypeDef *DMAx)
1485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TCIF6) == (DMA_ISR_TCIF6));
1487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
1491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 51


1492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 7 transfer complete flag.
1493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TCIF7         LL_DMA_IsActiveFlag_TC7
1494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC7(DMA_TypeDef *DMAx)
1498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TCIF7) == (DMA_ISR_TCIF7));
1500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 1 half transfer flag.
1505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          HTIF1         LL_DMA_IsActiveFlag_HT1
1506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT1(DMA_TypeDef *DMAx)
1510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_HTIF1) == (DMA_ISR_HTIF1));
1512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 2 half transfer flag.
1516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          HTIF2         LL_DMA_IsActiveFlag_HT2
1517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT2(DMA_TypeDef *DMAx)
1521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_HTIF2) == (DMA_ISR_HTIF2));
1523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 3 half transfer flag.
1527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          HTIF3         LL_DMA_IsActiveFlag_HT3
1528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT3(DMA_TypeDef *DMAx)
1532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_HTIF3) == (DMA_ISR_HTIF3));
1534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 4 half transfer flag.
1538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          HTIF4         LL_DMA_IsActiveFlag_HT4
1539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT4(DMA_TypeDef *DMAx)
1543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_HTIF4) == (DMA_ISR_HTIF4));
1545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 5 half transfer flag.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 52


1549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          HTIF5         LL_DMA_IsActiveFlag_HT5
1550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT5(DMA_TypeDef *DMAx)
1554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_HTIF5) == (DMA_ISR_HTIF5));
1556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
1559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 6 half transfer flag.
1561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          HTIF6         LL_DMA_IsActiveFlag_HT6
1562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT6(DMA_TypeDef *DMAx)
1566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_HTIF6) == (DMA_ISR_HTIF6));
1568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
1572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 7 half transfer flag.
1574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          HTIF7         LL_DMA_IsActiveFlag_HT7
1575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT7(DMA_TypeDef *DMAx)
1579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_HTIF7) == (DMA_ISR_HTIF7));
1581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 1 transfer error flag.
1586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TEIF1         LL_DMA_IsActiveFlag_TE1
1587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE1(DMA_TypeDef *DMAx)
1591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TEIF1) == (DMA_ISR_TEIF1));
1593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 2 transfer error flag.
1597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TEIF2         LL_DMA_IsActiveFlag_TE2
1598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE2(DMA_TypeDef *DMAx)
1602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TEIF2) == (DMA_ISR_TEIF2));
1604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 53


1606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 3 transfer error flag.
1608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TEIF3         LL_DMA_IsActiveFlag_TE3
1609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE3(DMA_TypeDef *DMAx)
1613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TEIF3) == (DMA_ISR_TEIF3));
1615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 4 transfer error flag.
1619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TEIF4         LL_DMA_IsActiveFlag_TE4
1620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE4(DMA_TypeDef *DMAx)
1624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TEIF4) == (DMA_ISR_TEIF4));
1626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 5 transfer error flag.
1630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TEIF5         LL_DMA_IsActiveFlag_TE5
1631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE5(DMA_TypeDef *DMAx)
1635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TEIF5) == (DMA_ISR_TEIF5));
1637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
1640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 6 transfer error flag.
1642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TEIF6         LL_DMA_IsActiveFlag_TE6
1643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE6(DMA_TypeDef *DMAx)
1647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TEIF6) == (DMA_ISR_TEIF6));
1649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
1653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 7 transfer error flag.
1655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TEIF7         LL_DMA_IsActiveFlag_TE7
1656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE7(DMA_TypeDef *DMAx)
1660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TEIF7) == (DMA_ISR_TEIF7));
1662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 54


1663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 1 global interrupt flag.
1667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note Do not Clear Channel 1 global interrupt flag when the channel in ON.
1668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC1, LL_DMA_ClearFlag_HT1,
1670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     LL_DMA_ClearFlag_TE1. bug id 2.4.1 in Product Errata Sheet.
1671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CGIF1         LL_DMA_ClearFlag_GI1
1672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI1(DMA_TypeDef *DMAx)
1676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF1);
1678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 2 global interrupt flag.
1682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note Do not Clear Channel 2 global interrupt flag when the channel in ON.
1683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC2, LL_DMA_ClearFlag_HT2,
1685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     LL_DMA_ClearFlag_TE2. bug id 2.4.1 in Product Errata Sheet.
1686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CGIF2         LL_DMA_ClearFlag_GI2
1687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI2(DMA_TypeDef *DMAx)
1691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF2);
1693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 3 global interrupt flag.
1697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note Do not Clear Channel 3 global interrupt flag when the channel in ON.
1698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC3, LL_DMA_ClearFlag_HT3,
1700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     LL_DMA_ClearFlag_TE3. bug id 2.4.1 in Product Errata Sheet.
1701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CGIF3         LL_DMA_ClearFlag_GI3
1702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI3(DMA_TypeDef *DMAx)
1706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF3);
1708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 4 global interrupt flag.
1712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note Do not Clear Channel 4 global interrupt flag when the channel in ON.
1713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC4, LL_DMA_ClearFlag_HT4,
1715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     LL_DMA_ClearFlag_TE4. bug id 2.4.1 in Product Errata Sheet.
1716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CGIF4         LL_DMA_ClearFlag_GI4
1717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 55


1720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI4(DMA_TypeDef *DMAx)
1721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF4);
1723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 5 global interrupt flag.
1727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note Do not Clear Channel 5 global interrupt flag when the channel in ON.
1728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC5, LL_DMA_ClearFlag_HT5,
1730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     LL_DMA_ClearFlag_TE5. bug id 2.4.1 in Product Errata Sheet.
1731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CGIF5         LL_DMA_ClearFlag_GI5
1732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI5(DMA_TypeDef *DMAx)
1736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF5);
1738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
1741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 6 global interrupt flag.
1743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note Do not Clear Channel 6 global interrupt flag when the channel in ON.
1744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC6, LL_DMA_ClearFlag_HT6,
1746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     LL_DMA_ClearFlag_TE6. bug id 2.4.1 in Product Errata Sheet.
1747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CGIF6         LL_DMA_ClearFlag_GI6
1748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI6(DMA_TypeDef *DMAx)
1752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF6);
1754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
1758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 7 global interrupt flag.
1760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note Do not Clear Channel 7 global interrupt flag when the channel in ON.
1761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC7, LL_DMA_ClearFlag_HT7,
1763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     LL_DMA_ClearFlag_TE7. bug id 2.4.1 in Product Errata Sheet.
1764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CGIF7         LL_DMA_ClearFlag_GI7
1765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI7(DMA_TypeDef *DMAx)
1769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF7);
1771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 1  transfer complete flag.
1776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF1        LL_DMA_ClearFlag_TC1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 56


1777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC1(DMA_TypeDef *DMAx)
1781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF1);
1783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 2  transfer complete flag.
1787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF2        LL_DMA_ClearFlag_TC2
1788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC2(DMA_TypeDef *DMAx)
1792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF2);
1794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 3  transfer complete flag.
1798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF3        LL_DMA_ClearFlag_TC3
1799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC3(DMA_TypeDef *DMAx)
1803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF3);
1805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 4  transfer complete flag.
1809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF4        LL_DMA_ClearFlag_TC4
1810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC4(DMA_TypeDef *DMAx)
1814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF4);
1816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 5  transfer complete flag.
1820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF5        LL_DMA_ClearFlag_TC5
1821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC5(DMA_TypeDef *DMAx)
1825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF5);
1827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
1830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 6  transfer complete flag.
1832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF6        LL_DMA_ClearFlag_TC6
1833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 57


1834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC6(DMA_TypeDef *DMAx)
1837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF6);
1839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
1843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 7  transfer complete flag.
1845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF7        LL_DMA_ClearFlag_TC7
1846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC7(DMA_TypeDef *DMAx)
1850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF7);
1852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 1  half transfer flag.
1857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF1        LL_DMA_ClearFlag_HT1
1858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT1(DMA_TypeDef *DMAx)
1862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF1);
1864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 2  half transfer flag.
1868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF2        LL_DMA_ClearFlag_HT2
1869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT2(DMA_TypeDef *DMAx)
1873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF2);
1875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 3  half transfer flag.
1879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF3        LL_DMA_ClearFlag_HT3
1880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT3(DMA_TypeDef *DMAx)
1884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF3);
1886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 4  half transfer flag.
1890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF4        LL_DMA_ClearFlag_HT4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 58


1891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT4(DMA_TypeDef *DMAx)
1895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF4);
1897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 5  half transfer flag.
1901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF5        LL_DMA_ClearFlag_HT5
1902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT5(DMA_TypeDef *DMAx)
1906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF5);
1908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
1911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 6  half transfer flag.
1913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF6        LL_DMA_ClearFlag_HT6
1914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT6(DMA_TypeDef *DMAx)
1918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF6);
1920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
1924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 7  half transfer flag.
1926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF7        LL_DMA_ClearFlag_HT7
1927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT7(DMA_TypeDef *DMAx)
1931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF7);
1933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 1 transfer error flag.
1938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF1        LL_DMA_ClearFlag_TE1
1939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE1(DMA_TypeDef *DMAx)
1943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF1);
1945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 59


1948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 2 transfer error flag.
1949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF2        LL_DMA_ClearFlag_TE2
1950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE2(DMA_TypeDef *DMAx)
1954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF2);
1956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 3 transfer error flag.
1960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF3        LL_DMA_ClearFlag_TE3
1961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE3(DMA_TypeDef *DMAx)
1965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF3);
1967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 4 transfer error flag.
1971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF4        LL_DMA_ClearFlag_TE4
1972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE4(DMA_TypeDef *DMAx)
1976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF4);
1978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 5 transfer error flag.
1982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF5        LL_DMA_ClearFlag_TE5
1983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE5(DMA_TypeDef *DMAx)
1987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF5);
1989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
1992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 6 transfer error flag.
1994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF6        LL_DMA_ClearFlag_TE6
1995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE6(DMA_TypeDef *DMAx)
1999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
2000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF6);
2001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
2002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
2003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
2004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 60


2005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
2006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 7 transfer error flag.
2007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF7        LL_DMA_ClearFlag_TE7
2008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
2010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
2011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE7(DMA_TypeDef *DMAx)
2012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
2013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF7);
2014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
2015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
2016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
2017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
2018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
2019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
2020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
2021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EF_IT_Management IT_Management
2022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
2023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
2024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
2025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Enable Transfer complete interrupt.
2026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          TCIE          LL_DMA_EnableIT_TC
2027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
2029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
2030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
2031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
2032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
2033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
2034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
2035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
2036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
2037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
2038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableIT_TC(DMA_TypeDef *DMAx, uint32_t Channel)
 318              		.loc 3 2038 22 view .LVU90
 319              	.LBB95:
2039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
2040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])))-
 320              		.loc 3 2040 3 view .LVU91
 321 00d0 1A68     		ldr	r2, [r3]
 322 00d2 1743     		orrs	r7, r2
 323 00d4 1F60     		str	r7, [r3]
 324              	.LVL19:
 325              		.loc 3 2040 3 is_stmt 0 view .LVU92
 326              	.LBE95:
 327              	.LBE94:
 161:Src/i2c.c     ****   /* Peripheral clock enable */
 162:Src/i2c.c     ****   LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_I2C1);
 328              		.loc 1 162 3 is_stmt 1 view .LVU93
 329              	.LBB96:
 330              	.LBI96:
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_IsEnabledClock\n
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 61


 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_IsEnabledClock\n
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_IsEnabledClock\n
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOAEN       LL_AHB1_GRP1_IsEnabledClock\n
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_IsEnabledClock\n
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_IsEnabledClock\n
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_IsEnabledClock\n
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_IsEnabledClock\n
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_IsEnabledClock\n
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       TSCEN         LL_AHB1_GRP1_IsEnabledClock
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   return (READ_BIT(RCC->AHBENR, Periphs) == Periphs);
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_DisableClock\n
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_DisableClock\n
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_DisableClock\n
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_DisableClock\n
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_DisableClock\n
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOAEN       LL_AHB1_GRP1_DisableClock\n
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_DisableClock\n
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_DisableClock\n
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_DisableClock\n
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_DisableClock\n
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_DisableClock\n
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       TSCEN         LL_AHB1_GRP1_DisableClock
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 62


 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBENR, Periphs);
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBRSTR      GPIOARST      LL_AHB1_GRP1_ForceReset\n
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOBRST      LL_AHB1_GRP1_ForceReset\n
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOCRST      LL_AHB1_GRP1_ForceReset\n
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIODRST      LL_AHB1_GRP1_ForceReset\n
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOERST      LL_AHB1_GRP1_ForceReset\n
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOFRST      LL_AHB1_GRP1_ForceReset\n
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ForceReset
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->AHBRSTR, Periphs);
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBRSTR      GPIOARST      LL_AHB1_GRP1_ReleaseReset\n
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOBRST      LL_AHB1_GRP1_ReleaseReset\n
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOCRST      LL_AHB1_GRP1_ReleaseReset\n
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIODRST      LL_AHB1_GRP1_ReleaseReset\n
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOERST      LL_AHB1_GRP1_ReleaseReset\n
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOFRST      LL_AHB1_GRP1_ReleaseReset\n
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ReleaseReset
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 63


 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBRSTR, Periphs);
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1_GRP1 APB1 GRP1
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock (available in register 1).
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_EnableClock\n
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_EnableClock\n
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_EnableClock\n
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_EnableClock\n
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_EnableClock\n
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_EnableClock\n
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_EnableClock\n
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_EnableClock\n
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_EnableClock\n
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART4EN      LL_APB1_GRP1_EnableClock\n
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART5EN      LL_APB1_GRP1_EnableClock\n
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_EnableClock\n
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_EnableClock\n
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_EnableClock\n
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CANEN         LL_APB1_GRP1_EnableClock\n
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CRSEN         LL_APB1_GRP1_EnableClock\n
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_EnableClock\n
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_EnableClock\n
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_EnableClock
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 64


 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 331              		.loc 2 415 22 view .LVU94
 332              	.LBB97:
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 333              		.loc 2 417 3 view .LVU95
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 334              		.loc 2 418 3 view .LVU96
 335 00d6 E269     		ldr	r2, [r4, #28]
 336 00d8 8021     		movs	r1, #128
 337 00da 8903     		lsls	r1, r1, #14
 338 00dc 0A43     		orrs	r2, r1
 339 00de E261     		str	r2, [r4, #28]
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 340              		.loc 2 420 3 view .LVU97
 341              		.loc 2 420 12 is_stmt 0 view .LVU98
 342 00e0 E369     		ldr	r3, [r4, #28]
 343 00e2 0B40     		ands	r3, r1
 344              		.loc 2 420 10 view .LVU99
 345 00e4 0193     		str	r3, [sp, #4]
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 346              		.loc 2 421 3 is_stmt 1 view .LVU100
 347 00e6 019B     		ldr	r3, [sp, #4]
 348              	.LVL20:
 349              		.loc 2 421 3 is_stmt 0 view .LVU101
 350              	.LBE97:
 351              	.LBE96:
 163:Src/i2c.c     **** 
 164:Src/i2c.c     ****   /* I2C1 interrupt Init */
 165:Src/i2c.c     ****   NVIC_SetPriority(I2C1_IRQn, 0);
 352              		.loc 1 165 3 is_stmt 1 view .LVU102
 353              	.LBB98:
 354              	.LBI98:
 355              		.file 5 "Drivers/CMSIS/Include/core_cm0.h"
   1:Drivers/CMSIS/Include/core_cm0.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm0.h ****  * @file     core_cm0.h
   3:Drivers/CMSIS/Include/core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm0.h ****  * @version  V5.0.5
   5:Drivers/CMSIS/Include/core_cm0.h ****  * @date     28. May 2018
   6:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm0.h **** /*
   8:Drivers/CMSIS/Include/core_cm0.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm0.h ****  *
  10:Drivers/CMSIS/Include/core_cm0.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm0.h ****  *
  12:Drivers/CMSIS/Include/core_cm0.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm0.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm0.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm0.h ****  *
  16:Drivers/CMSIS/Include/core_cm0.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm0.h ****  *
  18:Drivers/CMSIS/Include/core_cm0.h ****  * Unless required by applicable law or agreed to in writing, software
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 65


  19:Drivers/CMSIS/Include/core_cm0.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm0.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm0.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm0.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm0.h ****  */
  24:Drivers/CMSIS/Include/core_cm0.h **** 
  25:Drivers/CMSIS/Include/core_cm0.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm0.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm0.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm0.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm0.h **** #endif
  30:Drivers/CMSIS/Include/core_cm0.h **** 
  31:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm0.h **** 
  34:Drivers/CMSIS/Include/core_cm0.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm0.h **** 
  36:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm0.h **** #endif
  39:Drivers/CMSIS/Include/core_cm0.h **** 
  40:Drivers/CMSIS/Include/core_cm0.h **** /**
  41:Drivers/CMSIS/Include/core_cm0.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm0.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm0.h **** 
  44:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm0.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm0.h **** 
  47:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm0.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm0.h **** 
  50:Drivers/CMSIS/Include/core_cm0.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm0.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm0.h ****  */
  53:Drivers/CMSIS/Include/core_cm0.h **** 
  54:Drivers/CMSIS/Include/core_cm0.h **** 
  55:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm0.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm0.h **** /**
  59:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup Cortex_M0
  60:Drivers/CMSIS/Include/core_cm0.h ****   @{
  61:Drivers/CMSIS/Include/core_cm0.h ****  */
  62:Drivers/CMSIS/Include/core_cm0.h **** 
  63:Drivers/CMSIS/Include/core_cm0.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm0.h ****  
  65:Drivers/CMSIS/Include/core_cm0.h **** /*  CMSIS CM0 definitions */
  66:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm0.h ****                                     __CM0_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm0.h **** 
  71:Drivers/CMSIS/Include/core_cm0.h **** #define __CORTEX_M                (0U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm0.h **** 
  73:Drivers/CMSIS/Include/core_cm0.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm0.h ****     This core does not support an FPU at all
  75:Drivers/CMSIS/Include/core_cm0.h **** */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 66


  76:Drivers/CMSIS/Include/core_cm0.h **** #define __FPU_USED       0U
  77:Drivers/CMSIS/Include/core_cm0.h **** 
  78:Drivers/CMSIS/Include/core_cm0.h **** #if defined ( __CC_ARM )
  79:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TARGET_FPU_VFP
  80:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  82:Drivers/CMSIS/Include/core_cm0.h **** 
  83:Drivers/CMSIS/Include/core_cm0.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARM_PCS_VFP
  85:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm0.h **** 
  88:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __GNUC__ )
  89:Drivers/CMSIS/Include/core_cm0.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  91:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  92:Drivers/CMSIS/Include/core_cm0.h **** 
  93:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __ICCARM__ )
  94:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARMVFP__
  95:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  97:Drivers/CMSIS/Include/core_cm0.h **** 
  98:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TI_ARM__ )
  99:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TI_VFP_SUPPORT__
 100:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 102:Drivers/CMSIS/Include/core_cm0.h **** 
 103:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TASKING__ )
 104:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __FPU_VFP__
 105:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 107:Drivers/CMSIS/Include/core_cm0.h **** 
 108:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __CSMC__ )
 109:Drivers/CMSIS/Include/core_cm0.h ****   #if ( __CSMC__ & 0x400U)
 110:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 112:Drivers/CMSIS/Include/core_cm0.h **** 
 113:Drivers/CMSIS/Include/core_cm0.h **** #endif
 114:Drivers/CMSIS/Include/core_cm0.h **** 
 115:Drivers/CMSIS/Include/core_cm0.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:Drivers/CMSIS/Include/core_cm0.h **** 
 117:Drivers/CMSIS/Include/core_cm0.h **** 
 118:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 119:Drivers/CMSIS/Include/core_cm0.h **** }
 120:Drivers/CMSIS/Include/core_cm0.h **** #endif
 121:Drivers/CMSIS/Include/core_cm0.h **** 
 122:Drivers/CMSIS/Include/core_cm0.h **** #endif /* __CORE_CM0_H_GENERIC */
 123:Drivers/CMSIS/Include/core_cm0.h **** 
 124:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CMSIS_GENERIC
 125:Drivers/CMSIS/Include/core_cm0.h **** 
 126:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_DEPENDANT
 127:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_DEPENDANT
 128:Drivers/CMSIS/Include/core_cm0.h **** 
 129:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 130:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
 131:Drivers/CMSIS/Include/core_cm0.h **** #endif
 132:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 67


 133:Drivers/CMSIS/Include/core_cm0.h **** /* check device defines and use defaults */
 134:Drivers/CMSIS/Include/core_cm0.h **** #if defined __CHECK_DEVICE_DEFINES
 135:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __CM0_REV
 136:Drivers/CMSIS/Include/core_cm0.h ****     #define __CM0_REV               0x0000U
 137:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__CM0_REV not defined in device header file; using default!"
 138:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 139:Drivers/CMSIS/Include/core_cm0.h **** 
 140:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __NVIC_PRIO_BITS
 141:Drivers/CMSIS/Include/core_cm0.h ****     #define __NVIC_PRIO_BITS          2U
 142:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 143:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 144:Drivers/CMSIS/Include/core_cm0.h **** 
 145:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __Vendor_SysTickConfig
 146:Drivers/CMSIS/Include/core_cm0.h ****     #define __Vendor_SysTickConfig    0U
 147:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 148:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 149:Drivers/CMSIS/Include/core_cm0.h **** #endif
 150:Drivers/CMSIS/Include/core_cm0.h **** 
 151:Drivers/CMSIS/Include/core_cm0.h **** /* IO definitions (access restrictions to peripheral registers) */
 152:Drivers/CMSIS/Include/core_cm0.h **** /**
 153:Drivers/CMSIS/Include/core_cm0.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 154:Drivers/CMSIS/Include/core_cm0.h **** 
 155:Drivers/CMSIS/Include/core_cm0.h ****     <strong>IO Type Qualifiers</strong> are used
 156:Drivers/CMSIS/Include/core_cm0.h ****     \li to specify the access to peripheral variables.
 157:Drivers/CMSIS/Include/core_cm0.h ****     \li for automatic generation of peripheral register debug information.
 158:Drivers/CMSIS/Include/core_cm0.h **** */
 159:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 160:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 161:Drivers/CMSIS/Include/core_cm0.h **** #else
 162:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 163:Drivers/CMSIS/Include/core_cm0.h **** #endif
 164:Drivers/CMSIS/Include/core_cm0.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 165:Drivers/CMSIS/Include/core_cm0.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 166:Drivers/CMSIS/Include/core_cm0.h **** 
 167:Drivers/CMSIS/Include/core_cm0.h **** /* following defines should be used for structure members */
 168:Drivers/CMSIS/Include/core_cm0.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 169:Drivers/CMSIS/Include/core_cm0.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 170:Drivers/CMSIS/Include/core_cm0.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 171:Drivers/CMSIS/Include/core_cm0.h **** 
 172:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group Cortex_M0 */
 173:Drivers/CMSIS/Include/core_cm0.h **** 
 174:Drivers/CMSIS/Include/core_cm0.h **** 
 175:Drivers/CMSIS/Include/core_cm0.h **** 
 176:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 177:Drivers/CMSIS/Include/core_cm0.h ****  *                 Register Abstraction
 178:Drivers/CMSIS/Include/core_cm0.h ****   Core Register contain:
 179:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register
 180:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Register
 181:Drivers/CMSIS/Include/core_cm0.h ****   - Core SCB Register
 182:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Register
 183:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 184:Drivers/CMSIS/Include/core_cm0.h **** /**
 185:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 186:Drivers/CMSIS/Include/core_cm0.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 187:Drivers/CMSIS/Include/core_cm0.h **** */
 188:Drivers/CMSIS/Include/core_cm0.h **** 
 189:Drivers/CMSIS/Include/core_cm0.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 68


 190:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 191:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 192:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Core Register type definitions.
 193:Drivers/CMSIS/Include/core_cm0.h ****   @{
 194:Drivers/CMSIS/Include/core_cm0.h ****  */
 195:Drivers/CMSIS/Include/core_cm0.h **** 
 196:Drivers/CMSIS/Include/core_cm0.h **** /**
 197:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 198:Drivers/CMSIS/Include/core_cm0.h ****  */
 199:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 200:Drivers/CMSIS/Include/core_cm0.h **** {
 201:Drivers/CMSIS/Include/core_cm0.h ****   struct
 202:Drivers/CMSIS/Include/core_cm0.h ****   {
 203:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 204:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 205:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 206:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 207:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 208:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 209:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 210:Drivers/CMSIS/Include/core_cm0.h **** } APSR_Type;
 211:Drivers/CMSIS/Include/core_cm0.h **** 
 212:Drivers/CMSIS/Include/core_cm0.h **** /* APSR Register Definitions */
 213:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 214:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 215:Drivers/CMSIS/Include/core_cm0.h **** 
 216:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 217:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 218:Drivers/CMSIS/Include/core_cm0.h **** 
 219:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 220:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 221:Drivers/CMSIS/Include/core_cm0.h **** 
 222:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 223:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 224:Drivers/CMSIS/Include/core_cm0.h **** 
 225:Drivers/CMSIS/Include/core_cm0.h **** 
 226:Drivers/CMSIS/Include/core_cm0.h **** /**
 227:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 228:Drivers/CMSIS/Include/core_cm0.h ****  */
 229:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 230:Drivers/CMSIS/Include/core_cm0.h **** {
 231:Drivers/CMSIS/Include/core_cm0.h ****   struct
 232:Drivers/CMSIS/Include/core_cm0.h ****   {
 233:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 234:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 235:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 236:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 237:Drivers/CMSIS/Include/core_cm0.h **** } IPSR_Type;
 238:Drivers/CMSIS/Include/core_cm0.h **** 
 239:Drivers/CMSIS/Include/core_cm0.h **** /* IPSR Register Definitions */
 240:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 241:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 242:Drivers/CMSIS/Include/core_cm0.h **** 
 243:Drivers/CMSIS/Include/core_cm0.h **** 
 244:Drivers/CMSIS/Include/core_cm0.h **** /**
 245:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 246:Drivers/CMSIS/Include/core_cm0.h ****  */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 69


 247:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 248:Drivers/CMSIS/Include/core_cm0.h **** {
 249:Drivers/CMSIS/Include/core_cm0.h ****   struct
 250:Drivers/CMSIS/Include/core_cm0.h ****   {
 251:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 252:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 253:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 254:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 255:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 256:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 257:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 258:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 259:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 260:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 261:Drivers/CMSIS/Include/core_cm0.h **** } xPSR_Type;
 262:Drivers/CMSIS/Include/core_cm0.h **** 
 263:Drivers/CMSIS/Include/core_cm0.h **** /* xPSR Register Definitions */
 264:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 265:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 266:Drivers/CMSIS/Include/core_cm0.h **** 
 267:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 268:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 269:Drivers/CMSIS/Include/core_cm0.h **** 
 270:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 271:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 272:Drivers/CMSIS/Include/core_cm0.h **** 
 273:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 274:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 275:Drivers/CMSIS/Include/core_cm0.h **** 
 276:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 277:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 278:Drivers/CMSIS/Include/core_cm0.h **** 
 279:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 280:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 281:Drivers/CMSIS/Include/core_cm0.h **** 
 282:Drivers/CMSIS/Include/core_cm0.h **** 
 283:Drivers/CMSIS/Include/core_cm0.h **** /**
 284:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Control Registers (CONTROL).
 285:Drivers/CMSIS/Include/core_cm0.h ****  */
 286:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 287:Drivers/CMSIS/Include/core_cm0.h **** {
 288:Drivers/CMSIS/Include/core_cm0.h ****   struct
 289:Drivers/CMSIS/Include/core_cm0.h ****   {
 290:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:1;               /*!< bit:      0  Reserved */
 291:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 292:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 293:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 294:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 295:Drivers/CMSIS/Include/core_cm0.h **** } CONTROL_Type;
 296:Drivers/CMSIS/Include/core_cm0.h **** 
 297:Drivers/CMSIS/Include/core_cm0.h **** /* CONTROL Register Definitions */
 298:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 299:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 300:Drivers/CMSIS/Include/core_cm0.h **** 
 301:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CORE */
 302:Drivers/CMSIS/Include/core_cm0.h **** 
 303:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 70


 304:Drivers/CMSIS/Include/core_cm0.h **** /**
 305:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 306:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 307:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Type definitions for the NVIC Registers
 308:Drivers/CMSIS/Include/core_cm0.h ****   @{
 309:Drivers/CMSIS/Include/core_cm0.h ****  */
 310:Drivers/CMSIS/Include/core_cm0.h **** 
 311:Drivers/CMSIS/Include/core_cm0.h **** /**
 312:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 313:Drivers/CMSIS/Include/core_cm0.h ****  */
 314:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 315:Drivers/CMSIS/Include/core_cm0.h **** {
 316:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 317:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0[31U];
 318:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 319:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RSERVED1[31U];
 320:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 321:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED2[31U];
 322:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 323:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED3[31U];
 324:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED4[64U];
 325:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 326:Drivers/CMSIS/Include/core_cm0.h **** }  NVIC_Type;
 327:Drivers/CMSIS/Include/core_cm0.h **** 
 328:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_NVIC */
 329:Drivers/CMSIS/Include/core_cm0.h **** 
 330:Drivers/CMSIS/Include/core_cm0.h **** 
 331:Drivers/CMSIS/Include/core_cm0.h **** /**
 332:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 333:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 334:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Control Block Registers
 335:Drivers/CMSIS/Include/core_cm0.h ****   @{
 336:Drivers/CMSIS/Include/core_cm0.h ****  */
 337:Drivers/CMSIS/Include/core_cm0.h **** 
 338:Drivers/CMSIS/Include/core_cm0.h **** /**
 339:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Control Block (SCB).
 340:Drivers/CMSIS/Include/core_cm0.h ****  */
 341:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 342:Drivers/CMSIS/Include/core_cm0.h **** {
 343:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 344:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 345:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0;
 346:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 347:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 348:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 349:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED1;
 350:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 351:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 352:Drivers/CMSIS/Include/core_cm0.h **** } SCB_Type;
 353:Drivers/CMSIS/Include/core_cm0.h **** 
 354:Drivers/CMSIS/Include/core_cm0.h **** /* SCB CPUID Register Definitions */
 355:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 356:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 357:Drivers/CMSIS/Include/core_cm0.h **** 
 358:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 359:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 360:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 71


 361:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 362:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 363:Drivers/CMSIS/Include/core_cm0.h **** 
 364:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 365:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 366:Drivers/CMSIS/Include/core_cm0.h **** 
 367:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 368:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 369:Drivers/CMSIS/Include/core_cm0.h **** 
 370:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 371:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 372:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 373:Drivers/CMSIS/Include/core_cm0.h **** 
 374:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 375:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 376:Drivers/CMSIS/Include/core_cm0.h **** 
 377:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 378:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 379:Drivers/CMSIS/Include/core_cm0.h **** 
 380:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 381:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 382:Drivers/CMSIS/Include/core_cm0.h **** 
 383:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 384:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 385:Drivers/CMSIS/Include/core_cm0.h **** 
 386:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 387:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 388:Drivers/CMSIS/Include/core_cm0.h **** 
 389:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 390:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 391:Drivers/CMSIS/Include/core_cm0.h **** 
 392:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 393:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 394:Drivers/CMSIS/Include/core_cm0.h **** 
 395:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 396:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 397:Drivers/CMSIS/Include/core_cm0.h **** 
 398:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 399:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 400:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 401:Drivers/CMSIS/Include/core_cm0.h **** 
 402:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 403:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 404:Drivers/CMSIS/Include/core_cm0.h **** 
 405:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 406:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 407:Drivers/CMSIS/Include/core_cm0.h **** 
 408:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 409:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 410:Drivers/CMSIS/Include/core_cm0.h **** 
 411:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 412:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 413:Drivers/CMSIS/Include/core_cm0.h **** 
 414:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Control Register Definitions */
 415:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 416:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 417:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 72


 418:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 419:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 420:Drivers/CMSIS/Include/core_cm0.h **** 
 421:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 422:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 423:Drivers/CMSIS/Include/core_cm0.h **** 
 424:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Configuration Control Register Definitions */
 425:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 426:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 427:Drivers/CMSIS/Include/core_cm0.h **** 
 428:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 429:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 430:Drivers/CMSIS/Include/core_cm0.h **** 
 431:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 432:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 433:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 434:Drivers/CMSIS/Include/core_cm0.h **** 
 435:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SCB */
 436:Drivers/CMSIS/Include/core_cm0.h **** 
 437:Drivers/CMSIS/Include/core_cm0.h **** 
 438:Drivers/CMSIS/Include/core_cm0.h **** /**
 439:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 440:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 441:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Timer Registers.
 442:Drivers/CMSIS/Include/core_cm0.h ****   @{
 443:Drivers/CMSIS/Include/core_cm0.h ****  */
 444:Drivers/CMSIS/Include/core_cm0.h **** 
 445:Drivers/CMSIS/Include/core_cm0.h **** /**
 446:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Timer (SysTick).
 447:Drivers/CMSIS/Include/core_cm0.h ****  */
 448:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 449:Drivers/CMSIS/Include/core_cm0.h **** {
 450:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 451:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 452:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 453:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 454:Drivers/CMSIS/Include/core_cm0.h **** } SysTick_Type;
 455:Drivers/CMSIS/Include/core_cm0.h **** 
 456:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Control / Status Register Definitions */
 457:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 458:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 459:Drivers/CMSIS/Include/core_cm0.h **** 
 460:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 461:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 462:Drivers/CMSIS/Include/core_cm0.h **** 
 463:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 464:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 465:Drivers/CMSIS/Include/core_cm0.h **** 
 466:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 467:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 468:Drivers/CMSIS/Include/core_cm0.h **** 
 469:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Reload Register Definitions */
 470:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 471:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 472:Drivers/CMSIS/Include/core_cm0.h **** 
 473:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Current Register Definitions */
 474:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 73


 475:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 476:Drivers/CMSIS/Include/core_cm0.h **** 
 477:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Calibration Register Definitions */
 478:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 479:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 480:Drivers/CMSIS/Include/core_cm0.h **** 
 481:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 482:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 483:Drivers/CMSIS/Include/core_cm0.h **** 
 484:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 485:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 486:Drivers/CMSIS/Include/core_cm0.h **** 
 487:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SysTick */
 488:Drivers/CMSIS/Include/core_cm0.h **** 
 489:Drivers/CMSIS/Include/core_cm0.h **** 
 490:Drivers/CMSIS/Include/core_cm0.h **** /**
 491:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 492:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 493:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Cortex-M0 Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ove
 494:Drivers/CMSIS/Include/core_cm0.h ****             Therefore they are not covered by the Cortex-M0 header file.
 495:Drivers/CMSIS/Include/core_cm0.h ****   @{
 496:Drivers/CMSIS/Include/core_cm0.h ****  */
 497:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CoreDebug */
 498:Drivers/CMSIS/Include/core_cm0.h **** 
 499:Drivers/CMSIS/Include/core_cm0.h **** 
 500:Drivers/CMSIS/Include/core_cm0.h **** /**
 501:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 502:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 503:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 504:Drivers/CMSIS/Include/core_cm0.h ****   @{
 505:Drivers/CMSIS/Include/core_cm0.h ****  */
 506:Drivers/CMSIS/Include/core_cm0.h **** 
 507:Drivers/CMSIS/Include/core_cm0.h **** /**
 508:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 509:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 510:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
 511:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted value.
 512:Drivers/CMSIS/Include/core_cm0.h **** */
 513:Drivers/CMSIS/Include/core_cm0.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
 514:Drivers/CMSIS/Include/core_cm0.h **** 
 515:Drivers/CMSIS/Include/core_cm0.h **** /**
 516:Drivers/CMSIS/Include/core_cm0.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 517:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 518:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
 519:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted bit field value.
 520:Drivers/CMSIS/Include/core_cm0.h **** */
 521:Drivers/CMSIS/Include/core_cm0.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
 522:Drivers/CMSIS/Include/core_cm0.h **** 
 523:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_core_bitfield */
 524:Drivers/CMSIS/Include/core_cm0.h **** 
 525:Drivers/CMSIS/Include/core_cm0.h **** 
 526:Drivers/CMSIS/Include/core_cm0.h **** /**
 527:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 528:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_base     Core Definitions
 529:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Definitions for base addresses, unions, and structures.
 530:Drivers/CMSIS/Include/core_cm0.h ****   @{
 531:Drivers/CMSIS/Include/core_cm0.h ****  */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 74


 532:Drivers/CMSIS/Include/core_cm0.h **** 
 533:Drivers/CMSIS/Include/core_cm0.h **** /* Memory mapping of Core Hardware */
 534:Drivers/CMSIS/Include/core_cm0.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 535:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 536:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 537:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 538:Drivers/CMSIS/Include/core_cm0.h **** 
 539:Drivers/CMSIS/Include/core_cm0.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 540:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 541:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 542:Drivers/CMSIS/Include/core_cm0.h **** 
 543:Drivers/CMSIS/Include/core_cm0.h **** 
 544:Drivers/CMSIS/Include/core_cm0.h **** /*@} */
 545:Drivers/CMSIS/Include/core_cm0.h **** 
 546:Drivers/CMSIS/Include/core_cm0.h **** 
 547:Drivers/CMSIS/Include/core_cm0.h **** 
 548:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 549:Drivers/CMSIS/Include/core_cm0.h ****  *                Hardware Abstraction Layer
 550:Drivers/CMSIS/Include/core_cm0.h ****   Core Function Interface contains:
 551:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Functions
 552:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Functions
 553:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register Access Functions
 554:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 555:Drivers/CMSIS/Include/core_cm0.h **** /**
 556:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 557:Drivers/CMSIS/Include/core_cm0.h **** */
 558:Drivers/CMSIS/Include/core_cm0.h **** 
 559:Drivers/CMSIS/Include/core_cm0.h **** 
 560:Drivers/CMSIS/Include/core_cm0.h **** 
 561:Drivers/CMSIS/Include/core_cm0.h **** /* ##########################   NVIC functions  #################################### */
 562:Drivers/CMSIS/Include/core_cm0.h **** /**
 563:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 564:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 565:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 566:Drivers/CMSIS/Include/core_cm0.h ****   @{
 567:Drivers/CMSIS/Include/core_cm0.h ****  */
 568:Drivers/CMSIS/Include/core_cm0.h **** 
 569:Drivers/CMSIS/Include/core_cm0.h **** #ifdef CMSIS_NVIC_VIRTUAL
 570:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
 571:Drivers/CMSIS/Include/core_cm0.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
 572:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 573:Drivers/CMSIS/Include/core_cm0.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
 574:Drivers/CMSIS/Include/core_cm0.h **** #else
 575:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
 576:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
 577:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
 578:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
 579:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
 580:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
 581:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
 582:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
 583:Drivers/CMSIS/Include/core_cm0.h **** /*#define NVIC_GetActive              __NVIC_GetActive             not available for Cortex-M0 */
 584:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
 585:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
 586:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
 587:Drivers/CMSIS/Include/core_cm0.h **** #endif /* CMSIS_NVIC_VIRTUAL */
 588:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 75


 589:Drivers/CMSIS/Include/core_cm0.h **** #ifdef CMSIS_VECTAB_VIRTUAL
 590:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 591:Drivers/CMSIS/Include/core_cm0.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
 592:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 593:Drivers/CMSIS/Include/core_cm0.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 594:Drivers/CMSIS/Include/core_cm0.h **** #else
 595:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetVector              __NVIC_SetVector
 596:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetVector              __NVIC_GetVector
 597:Drivers/CMSIS/Include/core_cm0.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
 598:Drivers/CMSIS/Include/core_cm0.h **** 
 599:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC_USER_IRQ_OFFSET          16
 600:Drivers/CMSIS/Include/core_cm0.h **** 
 601:Drivers/CMSIS/Include/core_cm0.h **** 
 602:Drivers/CMSIS/Include/core_cm0.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
 603:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
 604:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
 605:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
 606:Drivers/CMSIS/Include/core_cm0.h **** 
 607:Drivers/CMSIS/Include/core_cm0.h **** 
 608:Drivers/CMSIS/Include/core_cm0.h **** /* Interrupt Priorities are WORD accessible only under Armv6-M                  */
 609:Drivers/CMSIS/Include/core_cm0.h **** /* The following MACROS handle generation of the register offset and byte masks */
 610:Drivers/CMSIS/Include/core_cm0.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 611:Drivers/CMSIS/Include/core_cm0.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 612:Drivers/CMSIS/Include/core_cm0.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 613:Drivers/CMSIS/Include/core_cm0.h **** 
 614:Drivers/CMSIS/Include/core_cm0.h **** #define __NVIC_SetPriorityGrouping(X) (void)(X)
 615:Drivers/CMSIS/Include/core_cm0.h **** #define __NVIC_GetPriorityGrouping()  (0U)
 616:Drivers/CMSIS/Include/core_cm0.h **** 
 617:Drivers/CMSIS/Include/core_cm0.h **** /**
 618:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Enable Interrupt
 619:Drivers/CMSIS/Include/core_cm0.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
 620:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 621:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 622:Drivers/CMSIS/Include/core_cm0.h ****  */
 623:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 624:Drivers/CMSIS/Include/core_cm0.h **** {
 625:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 626:Drivers/CMSIS/Include/core_cm0.h ****   {
 627:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 628:Drivers/CMSIS/Include/core_cm0.h ****   }
 629:Drivers/CMSIS/Include/core_cm0.h **** }
 630:Drivers/CMSIS/Include/core_cm0.h **** 
 631:Drivers/CMSIS/Include/core_cm0.h **** 
 632:Drivers/CMSIS/Include/core_cm0.h **** /**
 633:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Get Interrupt Enable status
 634:Drivers/CMSIS/Include/core_cm0.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
 635:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 636:Drivers/CMSIS/Include/core_cm0.h ****   \return             0  Interrupt is not enabled.
 637:Drivers/CMSIS/Include/core_cm0.h ****   \return             1  Interrupt is enabled.
 638:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 639:Drivers/CMSIS/Include/core_cm0.h ****  */
 640:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
 641:Drivers/CMSIS/Include/core_cm0.h **** {
 642:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 643:Drivers/CMSIS/Include/core_cm0.h ****   {
 644:Drivers/CMSIS/Include/core_cm0.h ****     return((uint32_t)(((NVIC->ISER[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 645:Drivers/CMSIS/Include/core_cm0.h ****   }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 76


 646:Drivers/CMSIS/Include/core_cm0.h ****   else
 647:Drivers/CMSIS/Include/core_cm0.h ****   {
 648:Drivers/CMSIS/Include/core_cm0.h ****     return(0U);
 649:Drivers/CMSIS/Include/core_cm0.h ****   }
 650:Drivers/CMSIS/Include/core_cm0.h **** }
 651:Drivers/CMSIS/Include/core_cm0.h **** 
 652:Drivers/CMSIS/Include/core_cm0.h **** 
 653:Drivers/CMSIS/Include/core_cm0.h **** /**
 654:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Disable Interrupt
 655:Drivers/CMSIS/Include/core_cm0.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
 656:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 657:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 658:Drivers/CMSIS/Include/core_cm0.h ****  */
 659:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
 660:Drivers/CMSIS/Include/core_cm0.h **** {
 661:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 662:Drivers/CMSIS/Include/core_cm0.h ****   {
 663:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 664:Drivers/CMSIS/Include/core_cm0.h ****     __DSB();
 665:Drivers/CMSIS/Include/core_cm0.h ****     __ISB();
 666:Drivers/CMSIS/Include/core_cm0.h ****   }
 667:Drivers/CMSIS/Include/core_cm0.h **** }
 668:Drivers/CMSIS/Include/core_cm0.h **** 
 669:Drivers/CMSIS/Include/core_cm0.h **** 
 670:Drivers/CMSIS/Include/core_cm0.h **** /**
 671:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Get Pending Interrupt
 672:Drivers/CMSIS/Include/core_cm0.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
 673:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 674:Drivers/CMSIS/Include/core_cm0.h ****   \return             0  Interrupt status is not pending.
 675:Drivers/CMSIS/Include/core_cm0.h ****   \return             1  Interrupt status is pending.
 676:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 677:Drivers/CMSIS/Include/core_cm0.h ****  */
 678:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
 679:Drivers/CMSIS/Include/core_cm0.h **** {
 680:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 681:Drivers/CMSIS/Include/core_cm0.h ****   {
 682:Drivers/CMSIS/Include/core_cm0.h ****     return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 683:Drivers/CMSIS/Include/core_cm0.h ****   }
 684:Drivers/CMSIS/Include/core_cm0.h ****   else
 685:Drivers/CMSIS/Include/core_cm0.h ****   {
 686:Drivers/CMSIS/Include/core_cm0.h ****     return(0U);
 687:Drivers/CMSIS/Include/core_cm0.h ****   }
 688:Drivers/CMSIS/Include/core_cm0.h **** }
 689:Drivers/CMSIS/Include/core_cm0.h **** 
 690:Drivers/CMSIS/Include/core_cm0.h **** 
 691:Drivers/CMSIS/Include/core_cm0.h **** /**
 692:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Set Pending Interrupt
 693:Drivers/CMSIS/Include/core_cm0.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
 694:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 695:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 696:Drivers/CMSIS/Include/core_cm0.h ****  */
 697:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
 698:Drivers/CMSIS/Include/core_cm0.h **** {
 699:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 700:Drivers/CMSIS/Include/core_cm0.h ****   {
 701:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 702:Drivers/CMSIS/Include/core_cm0.h ****   }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 77


 703:Drivers/CMSIS/Include/core_cm0.h **** }
 704:Drivers/CMSIS/Include/core_cm0.h **** 
 705:Drivers/CMSIS/Include/core_cm0.h **** 
 706:Drivers/CMSIS/Include/core_cm0.h **** /**
 707:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Clear Pending Interrupt
 708:Drivers/CMSIS/Include/core_cm0.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
 709:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 710:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 711:Drivers/CMSIS/Include/core_cm0.h ****  */
 712:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 713:Drivers/CMSIS/Include/core_cm0.h **** {
 714:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 715:Drivers/CMSIS/Include/core_cm0.h ****   {
 716:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 717:Drivers/CMSIS/Include/core_cm0.h ****   }
 718:Drivers/CMSIS/Include/core_cm0.h **** }
 719:Drivers/CMSIS/Include/core_cm0.h **** 
 720:Drivers/CMSIS/Include/core_cm0.h **** 
 721:Drivers/CMSIS/Include/core_cm0.h **** /**
 722:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Set Interrupt Priority
 723:Drivers/CMSIS/Include/core_cm0.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
 724:Drivers/CMSIS/Include/core_cm0.h ****            The interrupt number can be positive to specify a device specific interrupt,
 725:Drivers/CMSIS/Include/core_cm0.h ****            or negative to specify a processor exception.
 726:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Interrupt number.
 727:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]  priority  Priority to set.
 728:Drivers/CMSIS/Include/core_cm0.h ****   \note    The priority cannot be set for every processor exception.
 729:Drivers/CMSIS/Include/core_cm0.h ****  */
 730:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 356              		.loc 5 730 22 view .LVU103
 357              	.LBB99:
 731:Drivers/CMSIS/Include/core_cm0.h **** {
 732:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 358              		.loc 5 732 3 view .LVU104
 733:Drivers/CMSIS/Include/core_cm0.h ****   {
 734:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))
 359              		.loc 5 734 5 view .LVU105
 360              		.loc 5 734 52 is_stmt 0 view .LVU106
 361 00e8 274A     		ldr	r2, .L2+32
 362 00ea C521     		movs	r1, #197
 363 00ec 8900     		lsls	r1, r1, #2
 364 00ee 5358     		ldr	r3, [r2, r1]
 365              		.loc 5 734 33 view .LVU107
 366 00f0 1B02     		lsls	r3, r3, #8
 367 00f2 1B0A     		lsrs	r3, r3, #8
 368              		.loc 5 734 30 view .LVU108
 369 00f4 5350     		str	r3, [r2, r1]
 370              	.LVL21:
 371              		.loc 5 734 30 view .LVU109
 372              	.LBE99:
 373              	.LBE98:
 166:Src/i2c.c     ****   NVIC_EnableIRQ(I2C1_IRQn);
 374              		.loc 1 166 3 is_stmt 1 view .LVU110
 375              	.LBB100:
 376              	.LBI100:
 623:Drivers/CMSIS/Include/core_cm0.h **** {
 377              		.loc 5 623 22 view .LVU111
 378              	.LBB101:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 78


 625:Drivers/CMSIS/Include/core_cm0.h ****   {
 379              		.loc 5 625 3 view .LVU112
 627:Drivers/CMSIS/Include/core_cm0.h ****   }
 380              		.loc 5 627 5 view .LVU113
 627:Drivers/CMSIS/Include/core_cm0.h ****   }
 381              		.loc 5 627 20 is_stmt 0 view .LVU114
 382 00f6 8023     		movs	r3, #128
 383 00f8 1B04     		lsls	r3, r3, #16
 384 00fa 1360     		str	r3, [r2]
 385              	.LVL22:
 627:Drivers/CMSIS/Include/core_cm0.h ****   }
 386              		.loc 5 627 20 view .LVU115
 387              	.LBE101:
 388              	.LBE100:
 167:Src/i2c.c     **** 
 168:Src/i2c.c     ****   /* USER CODE BEGIN I2C1_Init 1 */
 169:Src/i2c.c     ****   
 170:Src/i2c.c     ****   /* USER CODE END I2C1_Init 1 */
 171:Src/i2c.c     ****   /** I2C Initialization
 172:Src/i2c.c     ****   */
 173:Src/i2c.c     ****   
 174:Src/i2c.c     ****   LL_I2C_DisableGeneralCall(I2C1);
 389              		.loc 1 174 3 is_stmt 1 view .LVU116
 390              	.LBB102:
 391              	.LBI102:
 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable Clock stretching.
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This bit can only be programmed when the I2C is disabled (PE = 0).
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          NOSTRETCH     LL_I2C_EnableClockStretching
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableClockStretching(I2C_TypeDef *I2Cx)
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_NOSTRETCH);
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable Clock stretching.
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This bit can only be programmed when the I2C is disabled (PE = 0).
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          NOSTRETCH     LL_I2C_DisableClockStretching
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableClockStretching(I2C_TypeDef *I2Cx)
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_NOSTRETCH);
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if Clock stretching is enabled or disabled.
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          NOSTRETCH     LL_I2C_IsEnabledClockStretching
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 79


 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledClockStretching(I2C_TypeDef *I2Cx)
 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_NOSTRETCH) != (I2C_CR1_NOSTRETCH)) ? 1UL : 0UL);
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable hardware byte control in slave mode.
 675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          SBC           LL_I2C_EnableSlaveByteControl
 676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSlaveByteControl(I2C_TypeDef *I2Cx)
 680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_SBC);
 682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable hardware byte control in slave mode.
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          SBC           LL_I2C_DisableSlaveByteControl
 687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableSlaveByteControl(I2C_TypeDef *I2Cx)
 691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_SBC);
 693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if hardware byte control in slave mode is enabled or disabled.
 697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          SBC           LL_I2C_IsEnabledSlaveByteControl
 698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSlaveByteControl(I2C_TypeDef *I2Cx)
 702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_SBC) == (I2C_CR1_SBC)) ? 1UL : 0UL);
 704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #if defined(I2C_CR1_WUPEN)
 707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable Wakeup from STOP.
 709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_I2C_WAKEUP_FROMSTOP_INSTANCE(I2Cx) can be used to check whether or not
 710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         WakeUpFromStop feature is supported by the I2Cx Instance.
 711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This bit can only be programmed when Digital Filter is disabled.
 712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          WUPEN         LL_I2C_EnableWakeUpFromStop
 713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableWakeUpFromStop(I2C_TypeDef *I2Cx)
 717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_WUPEN);
 719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable Wakeup from STOP.
 723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_I2C_WAKEUP_FROMSTOP_INSTANCE(I2Cx) can be used to check whether or not
 724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         WakeUpFromStop feature is supported by the I2Cx Instance.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 80


 725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          WUPEN         LL_I2C_DisableWakeUpFromStop
 726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableWakeUpFromStop(I2C_TypeDef *I2Cx)
 730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_WUPEN);
 732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if Wakeup from STOP is enabled or disabled.
 736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_I2C_WAKEUP_FROMSTOP_INSTANCE(I2Cx) can be used to check whether or not
 737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         WakeUpFromStop feature is supported by the I2Cx Instance.
 738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          WUPEN         LL_I2C_IsEnabledWakeUpFromStop
 739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledWakeUpFromStop(I2C_TypeDef *I2Cx)
 743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_WUPEN) == (I2C_CR1_WUPEN)) ? 1UL : 0UL);
 745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** #endif /* I2C_CR1_WUPEN */
 748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable General Call.
 750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   When enabled the Address 0x00 is ACKed.
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          GCEN          LL_I2C_EnableGeneralCall
 752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableGeneralCall(I2C_TypeDef *I2Cx)
 756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_GCEN);
 758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable General Call.
 762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   When disabled the Address 0x00 is NACKed.
 763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          GCEN          LL_I2C_DisableGeneralCall
 764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableGeneralCall(I2C_TypeDef *I2Cx)
 392              		.loc 4 767 22 view .LVU117
 393              	.LBB103:
 768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_GCEN);
 394              		.loc 4 769 3 view .LVU118
 395 00fc 234C     		ldr	r4, .L2+36
 396 00fe 2368     		ldr	r3, [r4]
 397 0100 234A     		ldr	r2, .L2+40
 398 0102 1340     		ands	r3, r2
 399 0104 2360     		str	r3, [r4]
 400              	.LVL23:
 401              		.loc 4 769 3 is_stmt 0 view .LVU119
 402              	.LBE103:
 403              	.LBE102:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 81


 175:Src/i2c.c     ****   LL_I2C_EnableClockStretching(I2C1);
 404              		.loc 1 175 3 is_stmt 1 view .LVU120
 405              	.LBB104:
 406              	.LBI104:
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 407              		.loc 4 645 22 view .LVU121
 408              	.LBB105:
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 409              		.loc 4 647 3 view .LVU122
 410 0106 2368     		ldr	r3, [r4]
 411 0108 224A     		ldr	r2, .L2+44
 412 010a 1340     		ands	r3, r2
 413 010c 2360     		str	r3, [r4]
 414              	.LVL24:
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 415              		.loc 4 647 3 is_stmt 0 view .LVU123
 416              	.LBE105:
 417              	.LBE104:
 176:Src/i2c.c     ****   I2C_InitStruct.PeripheralMode = LL_I2C_MODE_I2C;
 418              		.loc 1 176 3 is_stmt 1 view .LVU124
 419              		.loc 1 176 33 is_stmt 0 view .LVU125
 420 010e 0023     		movs	r3, #0
 421 0110 0993     		str	r3, [sp, #36]
 177:Src/i2c.c     ****   I2C_InitStruct.Timing = 0x2000090E;
 422              		.loc 1 177 3 is_stmt 1 view .LVU126
 423              		.loc 1 177 25 is_stmt 0 view .LVU127
 424 0112 214A     		ldr	r2, .L2+48
 425 0114 0A92     		str	r2, [sp, #40]
 178:Src/i2c.c     ****   I2C_InitStruct.AnalogFilter = LL_I2C_ANALOGFILTER_ENABLE;
 426              		.loc 1 178 3 is_stmt 1 view .LVU128
 427              		.loc 1 178 31 is_stmt 0 view .LVU129
 428 0116 0B93     		str	r3, [sp, #44]
 179:Src/i2c.c     ****   I2C_InitStruct.DigitalFilter = 0;
 429              		.loc 1 179 3 is_stmt 1 view .LVU130
 430              		.loc 1 179 32 is_stmt 0 view .LVU131
 431 0118 0C93     		str	r3, [sp, #48]
 180:Src/i2c.c     ****   I2C_InitStruct.OwnAddress1 = _id;
 432              		.loc 1 180 3 is_stmt 1 view .LVU132
 433              		.loc 1 180 30 is_stmt 0 view .LVU133
 434 011a 4A46     		mov	r2, r9
 435 011c 0D92     		str	r2, [sp, #52]
 181:Src/i2c.c     ****   I2C_InitStruct.TypeAcknowledge = LL_I2C_ACK;
 436              		.loc 1 181 3 is_stmt 1 view .LVU134
 437              		.loc 1 181 34 is_stmt 0 view .LVU135
 438 011e 0E93     		str	r3, [sp, #56]
 182:Src/i2c.c     ****   I2C_InitStruct.OwnAddrSize = LL_I2C_OWNADDRESS1_7BIT;
 439              		.loc 1 182 3 is_stmt 1 view .LVU136
 440              		.loc 1 182 30 is_stmt 0 view .LVU137
 441 0120 0F93     		str	r3, [sp, #60]
 183:Src/i2c.c     ****   LL_I2C_Init(I2C1, &I2C_InitStruct);
 442              		.loc 1 183 3 is_stmt 1 view .LVU138
 443 0122 09A9     		add	r1, sp, #36
 444 0124 2000     		movs	r0, r4
 445 0126 FFF7FEFF 		bl	LL_I2C_Init
 446              	.LVL25:
 184:Src/i2c.c     ****   LL_I2C_EnableAutoEndMode(I2C1);
 447              		.loc 1 184 3 view .LVU139
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 82


 448              	.LBB106:
 449              	.LBI106:
 770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if General Call is enabled or disabled.
 774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          GCEN          LL_I2C_IsEnabledGeneralCall
 775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledGeneralCall(I2C_TypeDef *I2Cx)
 779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_GCEN) == (I2C_CR1_GCEN)) ? 1UL : 0UL);
 781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure the Master to operate in 7-bit or 10-bit addressing mode.
 785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   Changing this bit is not allowed, when the START bit is set.
 786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          ADD10         LL_I2C_SetMasterAddressingMode
 787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  AddressingMode This parameter can be one of the following values:
 789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRESSING_MODE_7BIT
 790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRESSING_MODE_10BIT
 791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetMasterAddressingMode(I2C_TypeDef *I2Cx, uint32_t AddressingMode)
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR2, I2C_CR2_ADD10, AddressingMode);
 796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the Master addressing mode.
 800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          ADD10         LL_I2C_GetMasterAddressingMode
 801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Returned value can be one of the following values:
 803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRESSING_MODE_7BIT
 804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRESSING_MODE_10BIT
 805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetMasterAddressingMode(I2C_TypeDef *I2Cx)
 807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR2, I2C_CR2_ADD10));
 809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Set the Own Address1.
 813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll OAR1         OA1           LL_I2C_SetOwnAddress1\n
 814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         OAR1         OA1MODE       LL_I2C_SetOwnAddress1
 815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  OwnAddress1 This parameter must be a value between Min_Data=0 and Max_Data=0x3FF.
 817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  OwnAddrSize This parameter can be one of the following values:
 818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS1_7BIT
 819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS1_10BIT
 820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetOwnAddress1(I2C_TypeDef *I2Cx, uint32_t OwnAddress1, uint32_t OwnAdd
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   MODIFY_REG(I2Cx->OAR1, I2C_OAR1_OA1 | I2C_OAR1_OA1MODE, OwnAddress1 | OwnAddrSize);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 83


 825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable acknowledge on Own Address1 match address.
 829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll OAR1         OA1EN         LL_I2C_EnableOwnAddress1
 830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableOwnAddress1(I2C_TypeDef *I2Cx)
 834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->OAR1, I2C_OAR1_OA1EN);
 836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable acknowledge on Own Address1 match address.
 840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll OAR1         OA1EN         LL_I2C_DisableOwnAddress1
 841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableOwnAddress1(I2C_TypeDef *I2Cx)
 845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->OAR1, I2C_OAR1_OA1EN);
 847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if Own Address1 acknowledge is enabled or disabled.
 851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll OAR1         OA1EN         LL_I2C_IsEnabledOwnAddress1
 852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledOwnAddress1(I2C_TypeDef *I2Cx)
 856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->OAR1, I2C_OAR1_OA1EN) == (I2C_OAR1_OA1EN)) ? 1UL : 0UL);
 858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Set the 7bits Own Address2.
 862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This action has no effect if own address2 is enabled.
 863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll OAR2         OA2           LL_I2C_SetOwnAddress2\n
 864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         OAR2         OA2MSK        LL_I2C_SetOwnAddress2
 865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  OwnAddress2 Value between Min_Data=0 and Max_Data=0x7F.
 867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  OwnAddrMask This parameter can be one of the following values:
 868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_NOMASK
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK01
 870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK02
 871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK03
 872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK04
 873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK05
 874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK06
 875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK07
 876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetOwnAddress2(I2C_TypeDef *I2Cx, uint32_t OwnAddress2, uint32_t OwnAdd
 879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   MODIFY_REG(I2Cx->OAR2, I2C_OAR2_OA2 | I2C_OAR2_OA2MSK, OwnAddress2 | OwnAddrMask);
 881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 84


 882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable acknowledge on Own Address2 match address.
 885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll OAR2         OA2EN         LL_I2C_EnableOwnAddress2
 886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableOwnAddress2(I2C_TypeDef *I2Cx)
 890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->OAR2, I2C_OAR2_OA2EN);
 892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable  acknowledge on Own Address2 match address.
 896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll OAR2         OA2EN         LL_I2C_DisableOwnAddress2
 897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableOwnAddress2(I2C_TypeDef *I2Cx)
 901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->OAR2, I2C_OAR2_OA2EN);
 903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if Own Address1 acknowledge is enabled or disabled.
 907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll OAR2         OA2EN         LL_I2C_IsEnabledOwnAddress2
 908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledOwnAddress2(I2C_TypeDef *I2Cx)
 912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->OAR2, I2C_OAR2_OA2EN) == (I2C_OAR2_OA2EN)) ? 1UL : 0UL);
 914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure the SDA setup, hold time and the SCL high, low period.
 918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This bit can only be programmed when the I2C is disabled (PE = 0).
 919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMINGR      TIMINGR       LL_I2C_SetTiming
 920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  Timing This parameter must be a value between Min_Data=0 and Max_Data=0xFFFFFFFF.
 922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This parameter is computed with the STM32CubeMX Tool.
 923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetTiming(I2C_TypeDef *I2Cx, uint32_t Timing)
 926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   WRITE_REG(I2Cx->TIMINGR, Timing);
 928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the Timing Prescaler setting.
 932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMINGR      PRESC         LL_I2C_GetTimingPrescaler
 933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xF
 935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetTimingPrescaler(I2C_TypeDef *I2Cx)
 937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_PRESC) >> I2C_TIMINGR_PRESC_Pos);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 85


 939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the SCL low period setting.
 943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMINGR      SCLL          LL_I2C_GetClockLowPeriod
 944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
 946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetClockLowPeriod(I2C_TypeDef *I2Cx)
 948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_SCLL) >> I2C_TIMINGR_SCLL_Pos);
 950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the SCL high period setting.
 954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMINGR      SCLH          LL_I2C_GetClockHighPeriod
 955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
 957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetClockHighPeriod(I2C_TypeDef *I2Cx)
 959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_SCLH) >> I2C_TIMINGR_SCLH_Pos);
 961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the SDA hold time.
 965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMINGR      SDADEL        LL_I2C_GetDataHoldTime
 966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xF
 968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetDataHoldTime(I2C_TypeDef *I2Cx)
 970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_SDADEL) >> I2C_TIMINGR_SDADEL_Pos);
 972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the SDA setup time.
 976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMINGR      SCLDEL        LL_I2C_GetDataSetupTime
 977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xF
 979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetDataSetupTime(I2C_TypeDef *I2Cx)
 981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_SCLDEL) >> I2C_TIMINGR_SCLDEL_Pos);
 983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
 985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
 986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure peripheral mode.
 987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
 988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
 989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          SMBHEN        LL_I2C_SetMode\n
 990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         CR1          SMBDEN        LL_I2C_SetMode
 991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  PeripheralMode This parameter can be one of the following values:
 993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_I2C
 994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_HOST
 995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_DEVICE
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 86


 996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_DEVICE_ARP
 997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
 998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
 999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetMode(I2C_TypeDef *I2Cx, uint32_t PeripheralMode)
1000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR1, I2C_CR1_SMBHEN | I2C_CR1_SMBDEN, PeripheralMode);
1002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get peripheral mode.
1006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          SMBHEN        LL_I2C_GetMode\n
1009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         CR1          SMBDEN        LL_I2C_GetMode
1010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Returned value can be one of the following values:
1012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_I2C
1013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_HOST
1014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_DEVICE
1015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_DEVICE_ARP
1016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetMode(I2C_TypeDef *I2Cx)
1018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR1, I2C_CR1_SMBHEN | I2C_CR1_SMBDEN));
1020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable SMBus alert (Host or Device mode)
1024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   SMBus Device mode:
1027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         - SMBus Alert pin is drived low and
1028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *           Alert Response Address Header acknowledge is enabled.
1029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus Host mode:
1030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         - SMBus Alert pin management is supported.
1031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ALERTEN       LL_I2C_EnableSMBusAlert
1032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSMBusAlert(I2C_TypeDef *I2Cx)
1036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_ALERTEN);
1038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1041:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable SMBus alert (Host or Device mode)
1042:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1043:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1044:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   SMBus Device mode:
1045:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         - SMBus Alert pin is not drived (can be used as a standard GPIO) and
1046:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *           Alert Response Address Header acknowledge is disabled.
1047:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus Host mode:
1048:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         - SMBus Alert pin management is not supported.
1049:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ALERTEN       LL_I2C_DisableSMBusAlert
1050:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1051:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1052:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 87


1053:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableSMBusAlert(I2C_TypeDef *I2Cx)
1054:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1055:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_ALERTEN);
1056:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1057:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1059:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if SMBus alert (Host or Device mode) is enabled or disabled.
1060:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1061:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1062:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ALERTEN       LL_I2C_IsEnabledSMBusAlert
1063:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1064:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1065:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1066:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSMBusAlert(I2C_TypeDef *I2Cx)
1067:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1068:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_ALERTEN) == (I2C_CR1_ALERTEN)) ? 1UL : 0UL);
1069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1071:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable SMBus Packet Error Calculation (PEC).
1073:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1074:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1075:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          PECEN         LL_I2C_EnableSMBusPEC
1076:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1077:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1078:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1079:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSMBusPEC(I2C_TypeDef *I2Cx)
1080:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1081:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_PECEN);
1082:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1083:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1084:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1085:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable SMBus Packet Error Calculation (PEC).
1086:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1087:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1088:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          PECEN         LL_I2C_DisableSMBusPEC
1089:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1090:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1091:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableSMBusPEC(I2C_TypeDef *I2Cx)
1093:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1094:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_PECEN);
1095:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1096:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1097:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1098:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if SMBus Packet Error Calculation (PEC) is enabled or disabled.
1099:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          PECEN         LL_I2C_IsEnabledSMBusPEC
1102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSMBusPEC(I2C_TypeDef *I2Cx)
1106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_PECEN) == (I2C_CR1_PECEN)) ? 1UL : 0UL);
1108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 88


1110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure the SMBus Clock Timeout.
1112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This configuration can only be programmed when associated Timeout is disabled (TimeoutA
1115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTA      LL_I2C_ConfigSMBusTimeout\n
1116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         TIMEOUTR     TIDLE         LL_I2C_ConfigSMBusTimeout\n
1117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         TIMEOUTR     TIMEOUTB      LL_I2C_ConfigSMBusTimeout
1118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  TimeoutA This parameter must be a value between  Min_Data=0 and Max_Data=0xFFF.
1120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  TimeoutAMode This parameter can be one of the following values:
1121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW
1122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH
1123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  TimeoutB
1124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ConfigSMBusTimeout(I2C_TypeDef *I2Cx, uint32_t TimeoutA, uint32_t Timeo
1127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                                uint32_t TimeoutB)
1128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   MODIFY_REG(I2Cx->TIMEOUTR, I2C_TIMEOUTR_TIMEOUTA | I2C_TIMEOUTR_TIDLE | I2C_TIMEOUTR_TIMEOUTB,
1130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****              TimeoutA | TimeoutAMode | (TimeoutB << I2C_TIMEOUTR_TIMEOUTB_Pos));
1131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure the SMBus Clock TimeoutA (SCL low timeout or SCL and SDA high timeout depends
1135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   These bits can only be programmed when TimeoutA is disabled.
1138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTA      LL_I2C_SetSMBusTimeoutA
1139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  TimeoutA This parameter must be a value between  Min_Data=0 and Max_Data=0xFFF.
1141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetSMBusTimeoutA(I2C_TypeDef *I2Cx, uint32_t TimeoutA)
1144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   WRITE_REG(I2Cx->TIMEOUTR, TimeoutA);
1146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the SMBus Clock TimeoutA setting.
1150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTA      LL_I2C_GetSMBusTimeoutA
1153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0 and Max_Data=0xFFF
1155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetSMBusTimeoutA(I2C_TypeDef *I2Cx)
1157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMEOUTR, I2C_TIMEOUTR_TIMEOUTA));
1159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Set the SMBus Clock TimeoutA mode.
1163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This bit can only be programmed when TimeoutA is disabled.
1166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIDLE         LL_I2C_SetSMBusTimeoutAMode
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 89


1167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  TimeoutAMode This parameter can be one of the following values:
1169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW
1170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH
1171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetSMBusTimeoutAMode(I2C_TypeDef *I2Cx, uint32_t TimeoutAMode)
1174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   WRITE_REG(I2Cx->TIMEOUTR, TimeoutAMode);
1176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the SMBus Clock TimeoutA mode.
1180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIDLE         LL_I2C_GetSMBusTimeoutAMode
1183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Returned value can be one of the following values:
1185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW
1186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH
1187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetSMBusTimeoutAMode(I2C_TypeDef *I2Cx)
1189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMEOUTR, I2C_TIMEOUTR_TIDLE));
1191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure the SMBus Extended Cumulative Clock TimeoutB (Master or Slave mode).
1195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   These bits can only be programmed when TimeoutB is disabled.
1198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTB      LL_I2C_SetSMBusTimeoutB
1199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  TimeoutB This parameter must be a value between  Min_Data=0 and Max_Data=0xFFF.
1201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetSMBusTimeoutB(I2C_TypeDef *I2Cx, uint32_t TimeoutB)
1204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   WRITE_REG(I2Cx->TIMEOUTR, TimeoutB << I2C_TIMEOUTR_TIMEOUTB_Pos);
1206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the SMBus Extended Cumulative Clock TimeoutB setting.
1210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTB      LL_I2C_GetSMBusTimeoutB
1213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0 and Max_Data=0xFFF
1215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetSMBusTimeoutB(I2C_TypeDef *I2Cx)
1217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMEOUTR, I2C_TIMEOUTR_TIMEOUTB) >> I2C_TIMEOUTR_TIMEOUTB_Pos);
1219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable the SMBus Clock Timeout.
1223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 90


1224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMOUTEN      LL_I2C_EnableSMBusTimeout\n
1226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         TIMEOUTR     TEXTEN        LL_I2C_EnableSMBusTimeout
1227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  ClockTimeout This parameter can be one of the following values:
1229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA
1230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTB
1231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_ALL_TIMEOUT
1232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSMBusTimeout(I2C_TypeDef *I2Cx, uint32_t ClockTimeout)
1235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->TIMEOUTR, ClockTimeout);
1237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable the SMBus Clock Timeout.
1241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMOUTEN      LL_I2C_DisableSMBusTimeout\n
1244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         TIMEOUTR     TEXTEN        LL_I2C_DisableSMBusTimeout
1245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  ClockTimeout This parameter can be one of the following values:
1247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA
1248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTB
1249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_ALL_TIMEOUT
1250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableSMBusTimeout(I2C_TypeDef *I2Cx, uint32_t ClockTimeout)
1253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->TIMEOUTR, ClockTimeout);
1255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if the SMBus Clock Timeout is enabled or disabled.
1259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMOUTEN      LL_I2C_IsEnabledSMBusTimeout\n
1262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         TIMEOUTR     TEXTEN        LL_I2C_IsEnabledSMBusTimeout
1263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  ClockTimeout This parameter can be one of the following values:
1265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA
1266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTB
1267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_ALL_TIMEOUT
1268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSMBusTimeout(I2C_TypeDef *I2Cx, uint32_t ClockTimeout)
1271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->TIMEOUTR, (I2C_TIMEOUTR_TIMOUTEN | I2C_TIMEOUTR_TEXTEN)) == \
1273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****            (ClockTimeout)) ? 1UL : 0UL);
1274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
1278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EF_IT_Management IT_Management
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 91


1281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
1282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable TXIS interrupt.
1286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          TXIE          LL_I2C_EnableIT_TX
1287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_TX(I2C_TypeDef *I2Cx)
1291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_TXIE);
1293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable TXIS interrupt.
1297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          TXIE          LL_I2C_DisableIT_TX
1298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_TX(I2C_TypeDef *I2Cx)
1302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_TXIE);
1304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if the TXIS Interrupt is enabled or disabled.
1308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          TXIE          LL_I2C_IsEnabledIT_TX
1309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_TX(I2C_TypeDef *I2Cx)
1313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_TXIE) == (I2C_CR1_TXIE)) ? 1UL : 0UL);
1315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable RXNE interrupt.
1319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          RXIE          LL_I2C_EnableIT_RX
1320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_RX(I2C_TypeDef *I2Cx)
1324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_RXIE);
1326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable RXNE interrupt.
1330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          RXIE          LL_I2C_DisableIT_RX
1331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_RX(I2C_TypeDef *I2Cx)
1335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_RXIE);
1337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 92


1338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if the RXNE Interrupt is enabled or disabled.
1341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          RXIE          LL_I2C_IsEnabledIT_RX
1342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_RX(I2C_TypeDef *I2Cx)
1346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_RXIE) == (I2C_CR1_RXIE)) ? 1UL : 0UL);
1348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable Address match interrupt (slave mode only).
1352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ADDRIE        LL_I2C_EnableIT_ADDR
1353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_ADDR(I2C_TypeDef *I2Cx)
1357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_ADDRIE);
1359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable Address match interrupt (slave mode only).
1363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ADDRIE        LL_I2C_DisableIT_ADDR
1364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_ADDR(I2C_TypeDef *I2Cx)
1368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_ADDRIE);
1370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if Address match interrupt is enabled or disabled.
1374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ADDRIE        LL_I2C_IsEnabledIT_ADDR
1375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_ADDR(I2C_TypeDef *I2Cx)
1379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_ADDRIE) == (I2C_CR1_ADDRIE)) ? 1UL : 0UL);
1381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable Not acknowledge received interrupt.
1385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          NACKIE        LL_I2C_EnableIT_NACK
1386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_NACK(I2C_TypeDef *I2Cx)
1390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_NACKIE);
1392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 93


1395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable Not acknowledge received interrupt.
1396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          NACKIE        LL_I2C_DisableIT_NACK
1397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_NACK(I2C_TypeDef *I2Cx)
1401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_NACKIE);
1403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if Not acknowledge received interrupt is enabled or disabled.
1407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          NACKIE        LL_I2C_IsEnabledIT_NACK
1408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_NACK(I2C_TypeDef *I2Cx)
1412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_NACKIE) == (I2C_CR1_NACKIE)) ? 1UL : 0UL);
1414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable STOP detection interrupt.
1418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          STOPIE        LL_I2C_EnableIT_STOP
1419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_STOP(I2C_TypeDef *I2Cx)
1423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_STOPIE);
1425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable STOP detection interrupt.
1429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          STOPIE        LL_I2C_DisableIT_STOP
1430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_STOP(I2C_TypeDef *I2Cx)
1434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_STOPIE);
1436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if STOP detection interrupt is enabled or disabled.
1440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          STOPIE        LL_I2C_IsEnabledIT_STOP
1441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_STOP(I2C_TypeDef *I2Cx)
1445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_STOPIE) == (I2C_CR1_STOPIE)) ? 1UL : 0UL);
1447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable Transfer Complete interrupt.
1451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   Any of these events will generate interrupt :
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 94


1452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Transfer Complete (TC)
1453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Transfer Complete Reload (TCR)
1454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          TCIE          LL_I2C_EnableIT_TC
1455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_TC(I2C_TypeDef *I2Cx)
1459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_TCIE);
1461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable Transfer Complete interrupt.
1465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   Any of these events will generate interrupt :
1466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Transfer Complete (TC)
1467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Transfer Complete Reload (TCR)
1468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          TCIE          LL_I2C_DisableIT_TC
1469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_TC(I2C_TypeDef *I2Cx)
1473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_TCIE);
1475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if Transfer Complete interrupt is enabled or disabled.
1479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          TCIE          LL_I2C_IsEnabledIT_TC
1480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_TC(I2C_TypeDef *I2Cx)
1484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_TCIE) == (I2C_CR1_TCIE)) ? 1UL : 0UL);
1486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable Error interrupts.
1490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   Any of these errors will generate interrupt :
1493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Arbitration Loss (ARLO)
1494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Bus Error detection (BERR)
1495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Overrun/Underrun (OVR)
1496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus Timeout detection (TIMEOUT)
1497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus PEC error detection (PECERR)
1498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus Alert pin event detection (ALERT)
1499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ERRIE         LL_I2C_EnableIT_ERR
1500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_ERR(I2C_TypeDef *I2Cx)
1504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_ERRIE);
1506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 95


1509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable Error interrupts.
1510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   Any of these errors will generate interrupt :
1513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Arbitration Loss (ARLO)
1514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Bus Error detection (BERR)
1515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Overrun/Underrun (OVR)
1516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus Timeout detection (TIMEOUT)
1517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus PEC error detection (PECERR)
1518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus Alert pin event detection (ALERT)
1519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ERRIE         LL_I2C_DisableIT_ERR
1520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_ERR(I2C_TypeDef *I2Cx)
1524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_ERRIE);
1526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if Error interrupts are enabled or disabled.
1530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR1          ERRIE         LL_I2C_IsEnabledIT_ERR
1531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_ERR(I2C_TypeDef *I2Cx)
1535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_ERRIE) == (I2C_CR1_ERRIE)) ? 1UL : 0UL);
1537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
1541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EF_FLAG_management FLAG_management
1544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
1545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Transmit data register empty flag.
1549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: When next data is written in Transmit data register.
1550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When Transmit data register is empty.
1551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          TXE           LL_I2C_IsActiveFlag_TXE
1552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_TXE(I2C_TypeDef *I2Cx)
1556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TXE) == (I2C_ISR_TXE)) ? 1UL : 0UL);
1558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Transmit interrupt flag.
1562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: When next data is written in Transmit data register.
1563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When Transmit data register is empty.
1564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          TXIS          LL_I2C_IsActiveFlag_TXIS
1565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 96


1566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_TXIS(I2C_TypeDef *I2Cx)
1569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TXIS) == (I2C_ISR_TXIS)) ? 1UL : 0UL);
1571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Receive data register not empty flag.
1575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: When Receive data register is read.
1576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When the received data is copied in Receive data register.
1577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          RXNE          LL_I2C_IsActiveFlag_RXNE
1578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_RXNE(I2C_TypeDef *I2Cx)
1582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_RXNE) == (I2C_ISR_RXNE)) ? 1UL : 0UL);
1584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Address matched flag (slave mode).
1588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When the received slave address matched with one of the enabled slave address.
1590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          ADDR          LL_I2C_IsActiveFlag_ADDR
1591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_ADDR(I2C_TypeDef *I2Cx)
1595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_ADDR) == (I2C_ISR_ADDR)) ? 1UL : 0UL);
1597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Not Acknowledge received flag.
1601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When a NACK is received after a byte transmission.
1603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          NACKF         LL_I2C_IsActiveFlag_NACK
1604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_NACK(I2C_TypeDef *I2Cx)
1608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_NACKF) == (I2C_ISR_NACKF)) ? 1UL : 0UL);
1610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Stop detection flag.
1614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When a Stop condition is detected.
1616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          STOPF         LL_I2C_IsActiveFlag_STOP
1617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_STOP(I2C_TypeDef *I2Cx)
1621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_STOPF) == (I2C_ISR_STOPF)) ? 1UL : 0UL);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 97


1623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Transfer complete flag (master mode).
1627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When RELOAD=0, AUTOEND=0 and NBYTES date have been transferred.
1629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          TC            LL_I2C_IsActiveFlag_TC
1630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_TC(I2C_TypeDef *I2Cx)
1634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TC) == (I2C_ISR_TC)) ? 1UL : 0UL);
1636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Transfer complete flag (master mode).
1640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When RELOAD=1 and NBYTES date have been transferred.
1642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          TCR           LL_I2C_IsActiveFlag_TCR
1643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_TCR(I2C_TypeDef *I2Cx)
1647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TCR) == (I2C_ISR_TCR)) ? 1UL : 0UL);
1649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Bus error flag.
1653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When a misplaced Start or Stop condition is detected.
1655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          BERR          LL_I2C_IsActiveFlag_BERR
1656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_BERR(I2C_TypeDef *I2Cx)
1660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_BERR) == (I2C_ISR_BERR)) ? 1UL : 0UL);
1662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Arbitration lost flag.
1666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When arbitration lost.
1668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          ARLO          LL_I2C_IsActiveFlag_ARLO
1669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_ARLO(I2C_TypeDef *I2Cx)
1673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_ARLO) == (I2C_ISR_ARLO)) ? 1UL : 0UL);
1675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Overrun/Underrun flag (slave mode).
1679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 98


1680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When an overrun/underrun error occurs (Clock Stretching Disabled).
1681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          OVR           LL_I2C_IsActiveFlag_OVR
1682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_OVR(I2C_TypeDef *I2Cx)
1686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_OVR) == (I2C_ISR_OVR)) ? 1UL : 0UL);
1688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of SMBus PEC error flag in reception.
1692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When the received PEC does not match with the PEC register content.
1696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          PECERR        LL_I2C_IsActiveSMBusFlag_PECERR
1697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveSMBusFlag_PECERR(I2C_TypeDef *I2Cx)
1701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_PECERR) == (I2C_ISR_PECERR)) ? 1UL : 0UL);
1703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of SMBus Timeout detection flag.
1707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When a timeout or extended clock timeout occurs.
1711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          TIMEOUT       LL_I2C_IsActiveSMBusFlag_TIMEOUT
1712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveSMBusFlag_TIMEOUT(I2C_TypeDef *I2Cx)
1716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TIMEOUT) == (I2C_ISR_TIMEOUT)) ? 1UL : 0UL);
1718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of SMBus alert flag.
1722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When SMBus host configuration, SMBus alert enabled and
1726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *              a falling edge event occurs on SMBA pin.
1727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          ALERT         LL_I2C_IsActiveSMBusFlag_ALERT
1728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveSMBusFlag_ALERT(I2C_TypeDef *I2Cx)
1732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_ALERT) == (I2C_ISR_ALERT)) ? 1UL : 0UL);
1734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 99


1737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the status of Bus Busy flag.
1738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: When a Start condition is detected.
1740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          BUSY          LL_I2C_IsActiveFlag_BUSY
1741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_BUSY(I2C_TypeDef *I2Cx)
1745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_BUSY) == (I2C_ISR_BUSY)) ? 1UL : 0UL);
1747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Clear Address Matched flag.
1751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ICR          ADDRCF        LL_I2C_ClearFlag_ADDR
1752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_ADDR(I2C_TypeDef *I2Cx)
1756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_ADDRCF);
1758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Clear Not Acknowledge flag.
1762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ICR          NACKCF        LL_I2C_ClearFlag_NACK
1763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_NACK(I2C_TypeDef *I2Cx)
1767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_NACKCF);
1769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Clear Stop detection flag.
1773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ICR          STOPCF        LL_I2C_ClearFlag_STOP
1774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_STOP(I2C_TypeDef *I2Cx)
1778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_STOPCF);
1780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Clear Transmit data register empty flag (TXE).
1784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This bit can be clear by software in order to flush the transmit data register (TXDR).
1785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          TXE           LL_I2C_ClearFlag_TXE
1786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_TXE(I2C_TypeDef *I2Cx)
1790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   WRITE_REG(I2Cx->ISR, I2C_ISR_TXE);
1792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 100


1794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Clear Bus error flag.
1796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ICR          BERRCF        LL_I2C_ClearFlag_BERR
1797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_BERR(I2C_TypeDef *I2Cx)
1801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_BERRCF);
1803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Clear Arbitration lost flag.
1807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ICR          ARLOCF        LL_I2C_ClearFlag_ARLO
1808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_ARLO(I2C_TypeDef *I2Cx)
1812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_ARLOCF);
1814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Clear Overrun/Underrun flag.
1818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ICR          OVRCF         LL_I2C_ClearFlag_OVR
1819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_OVR(I2C_TypeDef *I2Cx)
1823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_OVRCF);
1825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Clear SMBus PEC error flag.
1829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ICR          PECCF         LL_I2C_ClearSMBusFlag_PECERR
1832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearSMBusFlag_PECERR(I2C_TypeDef *I2Cx)
1836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_PECCF);
1838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Clear SMBus Timeout detection flag.
1842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ICR          TIMOUTCF      LL_I2C_ClearSMBusFlag_TIMEOUT
1845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearSMBusFlag_TIMEOUT(I2C_TypeDef *I2Cx)
1849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_TIMOUTCF);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 101


1851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Clear SMBus Alert flag.
1855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ICR          ALERTCF       LL_I2C_ClearSMBusFlag_ALERT
1858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearSMBusFlag_ALERT(I2C_TypeDef *I2Cx)
1862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_ALERTCF);
1864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @}
1868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /** @defgroup I2C_LL_EF_Data_Management Data_Management
1871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @{
1872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable automatic STOP condition generation (master mode).
1876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   Automatic end mode : a STOP condition is automatically sent when NBYTES data are transf
1877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         This bit has no effect in slave mode or when RELOAD bit is set.
1878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          AUTOEND       LL_I2C_EnableAutoEndMode
1879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableAutoEndMode(I2C_TypeDef *I2Cx)
 450              		.loc 4 1882 22 view .LVU140
 451              	.LBB107:
1883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR2, I2C_CR2_AUTOEND);
 452              		.loc 4 1884 3 view .LVU141
 453 012a 6268     		ldr	r2, [r4, #4]
 454 012c 8023     		movs	r3, #128
 455 012e 9B04     		lsls	r3, r3, #18
 456 0130 1343     		orrs	r3, r2
 457 0132 6360     		str	r3, [r4, #4]
 458              	.LVL26:
 459              		.loc 4 1884 3 is_stmt 0 view .LVU142
 460              	.LBE107:
 461              	.LBE106:
 185:Src/i2c.c     ****   LL_I2C_SetOwnAddress2(I2C1, 0, LL_I2C_OWNADDRESS2_NOMASK);
 462              		.loc 1 185 3 is_stmt 1 view .LVU143
 463              	.LBB108:
 464              	.LBI108:
 878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 465              		.loc 4 878 22 view .LVU144
 466              	.LBB109:
 880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 467              		.loc 4 880 3 view .LVU145
 468 0134 E368     		ldr	r3, [r4, #12]
 469 0136 194A     		ldr	r2, .L2+52
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 102


 470 0138 1340     		ands	r3, r2
 471 013a E360     		str	r3, [r4, #12]
 472              	.LVL27:
 880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 473              		.loc 4 880 3 is_stmt 0 view .LVU146
 474              	.LBE109:
 475              	.LBE108:
 186:Src/i2c.c     ****   LL_I2C_EnableOwnAddress2(I2C1);
 476              		.loc 1 186 3 is_stmt 1 view .LVU147
 477              	.LBB110:
 478              	.LBI110:
 889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 479              		.loc 4 889 22 view .LVU148
 480              	.LBB111:
 891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 481              		.loc 4 891 3 view .LVU149
 482 013c E268     		ldr	r2, [r4, #12]
 483 013e 8023     		movs	r3, #128
 484 0140 1B02     		lsls	r3, r3, #8
 485 0142 1A43     		orrs	r2, r3
 486 0144 E260     		str	r2, [r4, #12]
 487              	.LVL28:
 891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 488              		.loc 4 891 3 is_stmt 0 view .LVU150
 489              	.LBE111:
 490              	.LBE110:
 187:Src/i2c.c     ****     /* USER CODE BEGIN I2C1_Init 2 */
 188:Src/i2c.c     ****     LL_I2C_Enable(I2C1);
 491              		.loc 1 188 5 is_stmt 1 view .LVU151
 492              	.LBB112:
 493              	.LBI112:
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 494              		.loc 4 430 22 view .LVU152
 495              	.LBB113:
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 496              		.loc 4 432 3 view .LVU153
 497 0146 2268     		ldr	r2, [r4]
 498 0148 1543     		orrs	r5, r2
 499 014a 2560     		str	r5, [r4]
 500              	.LVL29:
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 501              		.loc 4 432 3 is_stmt 0 view .LVU154
 502              	.LBE113:
 503              	.LBE112:
 189:Src/i2c.c     ****     LL_I2C_EnableIT_ADDR(I2C1);
 504              		.loc 1 189 5 is_stmt 1 view .LVU155
 505              	.LBB114:
 506              	.LBI114:
1356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 507              		.loc 4 1356 22 view .LVU156
 508              	.LBB115:
1358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 509              		.loc 4 1358 3 view .LVU157
 510 014c 2268     		ldr	r2, [r4]
 511 014e 0821     		movs	r1, #8
 512 0150 0A43     		orrs	r2, r1
 513 0152 2260     		str	r2, [r4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 103


 514              	.LVL30:
1358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 515              		.loc 4 1358 3 is_stmt 0 view .LVU158
 516              	.LBE115:
 517              	.LBE114:
 190:Src/i2c.c     ****     LL_I2C_EnableDMAReq_RX(I2C1);
 518              		.loc 1 190 5 is_stmt 1 view .LVU159
 519              	.LBB116:
 520              	.LBI116:
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 521              		.loc 4 583 22 view .LVU160
 522              	.LBB117:
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 523              		.loc 4 585 3 view .LVU161
 524 0154 2268     		ldr	r2, [r4]
 525 0156 1343     		orrs	r3, r2
 526 0158 2360     		str	r3, [r4]
 527              	.LVL31:
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 528              		.loc 4 585 3 is_stmt 0 view .LVU162
 529              	.LBE117:
 530              	.LBE116:
 191:Src/i2c.c     ****     /* USER CODE END I2C1_Init 2 */
 192:Src/i2c.c     **** }
 531              		.loc 1 192 1 view .LVU163
 532 015a 10B0     		add	sp, sp, #64
 533              		@ sp needed
 534              	.LVL32:
 535              		.loc 1 192 1 view .LVU164
 536 015c E0BC     		pop	{r5, r6, r7}
 537 015e BA46     		mov	r10, r7
 538 0160 B146     		mov	r9, r6
 539 0162 A846     		mov	r8, r5
 540 0164 F0BD     		pop	{r4, r5, r6, r7, pc}
 541              	.L3:
 542 0166 C046     		.align	2
 543              	.L2:
 544 0168 00100240 		.word	1073876992
 545 016c 30000240 		.word	1073872944
 546 0170 EFBFFFFF 		.word	-16401
 547 0174 FFCFFFFF 		.word	-12289
 548 0178 FFFCFFFF 		.word	-769
 549 017c FFF3FFFF 		.word	-3073
 550 0180 00000000 		.word	.LANCHOR0
 551 0184 24540040 		.word	1073763364
 552 0188 00E100E0 		.word	-536813312
 553 018c 00540040 		.word	1073763328
 554 0190 FFFFF7FF 		.word	-524289
 555 0194 FFFFFDFF 		.word	-131073
 556 0198 0E090020 		.word	536873230
 557 019c 01F8FFFF 		.word	-2047
 558              		.cfi_endproc
 559              	.LFE1020:
 561              		.section	.text.Set_ID,"ax",%progbits
 562              		.align	1
 563              		.global	Set_ID
 564              		.syntax unified
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 104


 565              		.code	16
 566              		.thumb_func
 568              	Set_ID:
 569              	.LVL33:
 570              	.LFB1021:
 193:Src/i2c.c     **** 
 194:Src/i2c.c     **** void Set_ID(uint8_t _id)
 195:Src/i2c.c     **** {
 571              		.loc 1 195 1 is_stmt 1 view -0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575              		@ link register save eliminated.
 196:Src/i2c.c     ****     LL_I2C_DisableOwnAddress1(I2C1);
 576              		.loc 1 196 5 view .LVU166
 577              	.LBB118:
 578              	.LBI118:
 844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 579              		.loc 4 844 22 view .LVU167
 580              	.LBB119:
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 581              		.loc 4 846 3 view .LVU168
 582 0000 074B     		ldr	r3, .L5
 583 0002 9A68     		ldr	r2, [r3, #8]
 584 0004 0749     		ldr	r1, .L5+4
 585 0006 0A40     		ands	r2, r1
 586 0008 9A60     		str	r2, [r3, #8]
 587              	.LVL34:
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 588              		.loc 4 846 3 is_stmt 0 view .LVU169
 589              	.LBE119:
 590              	.LBE118:
 197:Src/i2c.c     ****     LL_I2C_SetOwnAddress1(I2C1,_id,LL_I2C_OWNADDRESS1_7BIT);
 591              		.loc 1 197 5 is_stmt 1 view .LVU170
 592              	.LBB120:
 593              	.LBI120:
 822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 594              		.loc 4 822 22 view .LVU171
 595              	.LBB121:
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 596              		.loc 4 824 3 view .LVU172
 597 000a 9A68     		ldr	r2, [r3, #8]
 598 000c D20A     		lsrs	r2, r2, #11
 599 000e D202     		lsls	r2, r2, #11
 600 0010 0243     		orrs	r2, r0
 601 0012 9A60     		str	r2, [r3, #8]
 602              	.LVL35:
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 603              		.loc 4 824 3 is_stmt 0 view .LVU173
 604              	.LBE121:
 605              	.LBE120:
 198:Src/i2c.c     ****     LL_I2C_EnableOwnAddress1(I2C1);
 606              		.loc 1 198 5 is_stmt 1 view .LVU174
 607              	.LBB122:
 608              	.LBI122:
 833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 609              		.loc 4 833 22 view .LVU175
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 105


 610              	.LBB123:
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 611              		.loc 4 835 3 view .LVU176
 612 0014 9968     		ldr	r1, [r3, #8]
 613 0016 8022     		movs	r2, #128
 614 0018 1202     		lsls	r2, r2, #8
 615 001a 0A43     		orrs	r2, r1
 616 001c 9A60     		str	r2, [r3, #8]
 617              	.LVL36:
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 618              		.loc 4 835 3 is_stmt 0 view .LVU177
 619              	.LBE123:
 620              	.LBE122:
 199:Src/i2c.c     **** }
 621              		.loc 1 199 1 view .LVU178
 622              		@ sp needed
 623 001e 7047     		bx	lr
 624              	.L6:
 625              		.align	2
 626              	.L5:
 627 0020 00540040 		.word	1073763328
 628 0024 FF7FFFFF 		.word	-32769
 629              		.cfi_endproc
 630              	.LFE1021:
 632              		.section	.text.Slave_Transmit,"ax",%progbits
 633              		.align	1
 634              		.global	Slave_Transmit
 635              		.syntax unified
 636              		.code	16
 637              		.thumb_func
 639              	Slave_Transmit:
 640              	.LVL37:
 641              	.LFB1022:
 200:Src/i2c.c     **** 
 201:Src/i2c.c     **** ErrorStatus Slave_Transmit(uint8_t *pdata,uint16_t size,uint32_t timeout)
 202:Src/i2c.c     **** {
 642              		.loc 1 202 1 is_stmt 1 view -0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646              		.loc 1 202 1 is_stmt 0 view .LVU180
 647 0000 70B5     		push	{r4, r5, r6, lr}
 648              	.LCFI3:
 649              		.cfi_def_cfa_offset 16
 650              		.cfi_offset 4, -16
 651              		.cfi_offset 5, -12
 652              		.cfi_offset 6, -8
 653              		.cfi_offset 14, -4
 203:Src/i2c.c     ****     uint32_t Timeout = timeout;
 654              		.loc 1 203 5 is_stmt 1 view .LVU181
 655              	.LVL38:
 204:Src/i2c.c     ****     while(!LL_I2C_IsActiveFlag_ADDR(I2C1))
 656              		.loc 1 204 5 view .LVU182
 203:Src/i2c.c     ****     uint32_t Timeout = timeout;
 657              		.loc 1 203 14 is_stmt 0 view .LVU183
 658 0002 1300     		movs	r3, r2
 659              	.LVL39:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 106


 660              	.L13:
 661              		.loc 1 204 10 is_stmt 1 view .LVU184
 662              	.LBB124:
 663              	.LBI124:
1594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 664              		.loc 4 1594 26 view .LVU185
 665              	.LBB125:
1596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 666              		.loc 4 1596 3 view .LVU186
1596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 667              		.loc 4 1596 12 is_stmt 0 view .LVU187
 668 0004 194C     		ldr	r4, .L20
 669 0006 A469     		ldr	r4, [r4, #24]
1596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 670              		.loc 4 1596 71 view .LVU188
 671 0008 2407     		lsls	r4, r4, #28
 672 000a 09D5     		bpl	.L10
 673              	.LVL40:
1596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 674              		.loc 4 1596 71 view .LVU189
 675              	.LBE125:
 676              	.LBE124:
 205:Src/i2c.c     ****     {
 206:Src/i2c.c     ****     /* Check Systick counter flag to decrement the time-out value */
 207:Src/i2c.c     ****         if (LL_SYSTICK_IsActiveCounterFlag()) 
 208:Src/i2c.c     ****         {
 209:Src/i2c.c     ****             if(Timeout-- == 0)
 210:Src/i2c.c     ****             {
 211:Src/i2c.c     ****             /* Time-out occurred. return error */
 212:Src/i2c.c     ****             return ERROR;
 213:Src/i2c.c     ****             }
 214:Src/i2c.c     ****         }
 215:Src/i2c.c     ****     }
 216:Src/i2c.c     ****   /*Clear ADDR flag and loop until end of transfer*/
 217:Src/i2c.c     ****   /* Clear ADDR flag value in ISR register */
 218:Src/i2c.c     ****     LL_I2C_ClearFlag_ADDR(I2C1);  
 677              		.loc 1 218 5 is_stmt 1 view .LVU190
 678              	.LBB126:
 679              	.LBI126:
1755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 680              		.loc 4 1755 22 view .LVU191
 681              	.LBB127:
1757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 682              		.loc 4 1757 3 view .LVU192
 683 000c 174C     		ldr	r4, .L20
 684 000e E569     		ldr	r5, [r4, #28]
 685 0010 0826     		movs	r6, #8
 686 0012 3543     		orrs	r5, r6
 687 0014 E561     		str	r5, [r4, #28]
 688              	.LVL41:
1757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 689              		.loc 4 1757 3 is_stmt 0 view .LVU193
 690              	.LBE127:
 691              	.LBE126:
 219:Src/i2c.c     ****   
 220:Src/i2c.c     ****    if(LL_I2C_GetTransferDirection(I2C1) == LL_I2C_DIRECTION_READ)
 692              		.loc 1 220 4 is_stmt 1 view .LVU194
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 107


 693              	.LBB128:
 694              	.LBI128:
1885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable automatic STOP condition generation (master mode).
1889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   Software end mode : TC flag is set when NBYTES data are transferre, stretching SCL low.
1890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          AUTOEND       LL_I2C_DisableAutoEndMode
1891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableAutoEndMode(I2C_TypeDef *I2Cx)
1895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR2, I2C_CR2_AUTOEND);
1897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if automatic STOP condition is enabled or disabled.
1901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          AUTOEND       LL_I2C_IsEnabledAutoEndMode
1902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledAutoEndMode(I2C_TypeDef *I2Cx)
1906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR2, I2C_CR2_AUTOEND) == (I2C_CR2_AUTOEND)) ? 1UL : 0UL);
1908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable reload mode (master mode).
1912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The transfer is not completed after the NBYTES data transfer, NBYTES will be reloaded w
1913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          RELOAD       LL_I2C_EnableReloadMode
1914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableReloadMode(I2C_TypeDef *I2Cx)
1918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR2, I2C_CR2_RELOAD);
1920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable reload mode (master mode).
1924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The transfer is completed after the NBYTES data transfer(STOP or RESTART will follow).
1925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          RELOAD       LL_I2C_DisableReloadMode
1926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableReloadMode(I2C_TypeDef *I2Cx)
1930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR2, I2C_CR2_RELOAD);
1932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if reload mode is enabled or disabled.
1936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          RELOAD       LL_I2C_IsEnabledReloadMode
1937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 108


1940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledReloadMode(I2C_TypeDef *I2Cx)
1941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR2, I2C_CR2_RELOAD) == (I2C_CR2_RELOAD)) ? 1UL : 0UL);
1943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure the number of bytes for transfer.
1947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   Changing these bits when START bit is set is not allowed.
1948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          NBYTES           LL_I2C_SetTransferSize
1949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  TransferSize This parameter must be a value between Min_Data=0x00 and Max_Data=0xFF.
1951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetTransferSize(I2C_TypeDef *I2Cx, uint32_t TransferSize)
1954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR2, I2C_CR2_NBYTES, TransferSize << I2C_CR2_NBYTES_Pos);
1956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the number of bytes configured for transfer.
1960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          NBYTES           LL_I2C_GetTransferSize
1961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xFF
1963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetTransferSize(I2C_TypeDef *I2Cx)
1965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR2, I2C_CR2_NBYTES) >> I2C_CR2_NBYTES_Pos);
1967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Prepare the generation of a ACKnowledge or Non ACKnowledge condition after the address 
1971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****             or next received byte.
1972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   Usage in Slave mode only.
1973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          NACK          LL_I2C_AcknowledgeNextData
1974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  TypeAcknowledge This parameter can be one of the following values:
1976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ACK
1977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_NACK
1978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_AcknowledgeNextData(I2C_TypeDef *I2Cx, uint32_t TypeAcknowledge)
1981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR2, I2C_CR2_NACK, TypeAcknowledge);
1983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
1984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Generate a START or RESTART condition
1987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The START bit can be set even if bus is BUSY or I2C is in slave mode.
1988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         This action has no effect when RELOAD is set.
1989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          START           LL_I2C_GenerateStartCondition
1990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
1992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
1993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_GenerateStartCondition(I2C_TypeDef *I2Cx)
1994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
1995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR2, I2C_CR2_START);
1996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 109


1997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
1998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
1999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Generate a STOP condition after the current byte transfer (master mode).
2000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          STOP          LL_I2C_GenerateStopCondition
2001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
2003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
2004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_GenerateStopCondition(I2C_TypeDef *I2Cx)
2005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
2006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR2, I2C_CR2_STOP);
2007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
2008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
2009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
2010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable automatic RESTART Read request condition for 10bit address header (master mode).
2011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The master sends the complete 10bit slave address read sequence :
2012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         Start + 2 bytes 10bit address in Write direction + Restart + first 7 bits of 10bit addr
2013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****             in Read direction.
2014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          HEAD10R       LL_I2C_EnableAuto10BitRead
2015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
2017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
2018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableAuto10BitRead(I2C_TypeDef *I2Cx)
2019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
2020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR2, I2C_CR2_HEAD10R);
2021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
2022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
2023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
2024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Disable automatic RESTART Read request condition for 10bit address header (master mode)
2025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The master only sends the first 7 bits of 10bit address in Read direction.
2026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          HEAD10R       LL_I2C_DisableAuto10BitRead
2027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
2029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
2030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableAuto10BitRead(I2C_TypeDef *I2Cx)
2031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
2032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR2, I2C_CR2_HEAD10R);
2033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
2034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
2035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
2036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if automatic RESTART Read request condition for 10bit address header is enabled o
2037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          HEAD10R       LL_I2C_IsEnabledAuto10BitRead
2038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
2040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
2041:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledAuto10BitRead(I2C_TypeDef *I2Cx)
2042:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
2043:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR2, I2C_CR2_HEAD10R) != (I2C_CR2_HEAD10R)) ? 1UL : 0UL);
2044:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
2045:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
2046:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
2047:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure the transfer direction (master mode).
2048:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   Changing these bits when START bit is set is not allowed.
2049:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          RD_WRN           LL_I2C_SetTransferRequest
2050:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2051:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  TransferRequest This parameter can be one of the following values:
2052:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_REQUEST_WRITE
2053:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_REQUEST_READ
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 110


2054:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
2055:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
2056:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetTransferRequest(I2C_TypeDef *I2Cx, uint32_t TransferRequest)
2057:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
2058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR2, I2C_CR2_RD_WRN, TransferRequest);
2059:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
2060:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
2061:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
2062:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the transfer direction requested (master mode).
2063:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          RD_WRN           LL_I2C_GetTransferRequest
2064:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2065:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Returned value can be one of the following values:
2066:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_REQUEST_WRITE
2067:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_REQUEST_READ
2068:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
2069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetTransferRequest(I2C_TypeDef *I2Cx)
2070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
2071:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR2, I2C_CR2_RD_WRN));
2072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
2073:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
2074:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
2075:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Configure the slave address for transfer (master mode).
2076:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   Changing these bits when START bit is set is not allowed.
2077:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          SADD           LL_I2C_SetSlaveAddr
2078:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2079:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  SlaveAddr This parameter must be a value between Min_Data=0x00 and Max_Data=0x3F.
2080:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
2081:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
2082:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetSlaveAddr(I2C_TypeDef *I2Cx, uint32_t SlaveAddr)
2083:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
2084:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR2, I2C_CR2_SADD, SlaveAddr);
2085:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
2086:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
2087:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
2088:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the slave address programmed for transfer.
2089:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          SADD           LL_I2C_GetSlaveAddr
2090:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2091:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0x3F
2092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
2093:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetSlaveAddr(I2C_TypeDef *I2Cx)
2094:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
2095:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR2, I2C_CR2_SADD));
2096:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
2097:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
2098:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
2099:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Handles I2Cx communication when starting transfer or during transfer (TC or TCR flag ar
2100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          SADD          LL_I2C_HandleTransfer\n
2101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         CR2          ADD10         LL_I2C_HandleTransfer\n
2102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         CR2          RD_WRN        LL_I2C_HandleTransfer\n
2103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         CR2          START         LL_I2C_HandleTransfer\n
2104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         CR2          STOP          LL_I2C_HandleTransfer\n
2105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         CR2          RELOAD        LL_I2C_HandleTransfer\n
2106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         CR2          NBYTES        LL_I2C_HandleTransfer\n
2107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         CR2          AUTOEND       LL_I2C_HandleTransfer\n
2108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         CR2          HEAD10R       LL_I2C_HandleTransfer
2109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  SlaveAddr Specifies the slave address to be programmed.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 111


2111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  SlaveAddrSize This parameter can be one of the following values:
2112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRSLAVE_7BIT
2113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRSLAVE_10BIT
2114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  TransferSize Specifies the number of bytes to be programmed.
2115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *                       This parameter must be a value between Min_Data=0 and Max_Data=255.
2116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  EndMode This parameter can be one of the following values:
2117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_RELOAD
2118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_AUTOEND
2119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SOFTEND
2120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_RELOAD
2121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_AUTOEND_NO_PEC
2122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_SOFTEND_NO_PEC
2123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_AUTOEND_WITH_PEC
2124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_SOFTEND_WITH_PEC
2125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  Request This parameter can be one of the following values:
2126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_GENERATE_NOSTARTSTOP
2127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_GENERATE_STOP
2128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_GENERATE_START_READ
2129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_GENERATE_START_WRITE
2130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_GENERATE_RESTART_7BIT_READ
2131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_GENERATE_RESTART_7BIT_WRITE
2132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_GENERATE_RESTART_10BIT_READ
2133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_GENERATE_RESTART_10BIT_WRITE
2134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
2135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
2136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_HandleTransfer(I2C_TypeDef *I2Cx, uint32_t SlaveAddr, uint32_t SlaveAdd
2137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****                                            uint32_t TransferSize, uint32_t EndMode, uint32_t Reques
2138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
2139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR2, I2C_CR2_SADD | I2C_CR2_ADD10 |
2140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****              (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) |
2141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****              I2C_CR2_START | I2C_CR2_STOP | I2C_CR2_RELOAD |
2142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****              I2C_CR2_NBYTES | I2C_CR2_AUTOEND | I2C_CR2_HEAD10R,
2143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****              SlaveAddr | SlaveAddrSize | (TransferSize << I2C_CR2_NBYTES_Pos) | EndMode | Request);
2144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
2145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
2146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
2147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Indicate the value of transfer direction (slave mode).
2148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   RESET: Write transfer, Slave enters in receiver mode.
2149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SET: Read transfer, Slave enters in transmitter mode.
2150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          DIR           LL_I2C_GetTransferDirection
2151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Returned value can be one of the following values:
2153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_DIRECTION_WRITE
2154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         @arg @ref LL_I2C_DIRECTION_READ
2155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
2156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetTransferDirection(I2C_TypeDef *I2Cx)
 695              		.loc 4 2156 26 view .LVU195
 696              	.LBB129:
2157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
2158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->ISR, I2C_ISR_DIR));
 697              		.loc 4 2158 3 view .LVU196
 698              		.loc 4 2158 21 is_stmt 0 view .LVU197
 699 0016 A469     		ldr	r4, [r4, #24]
 700              	.LVL42:
 701              		.loc 4 2158 21 view .LVU198
 702              	.LBE129:
 703              	.LBE128:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 112


 704              		.loc 1 220 6 view .LVU199
 705 0018 E403     		lsls	r4, r4, #15
 706 001a 0AD4     		bmi	.L11
 221:Src/i2c.c     ****    {
 222:Src/i2c.c     ****        /* Loop until TXE flag is raised  */
 223:Src/i2c.c     ****         while(size > 0)
 224:Src/i2c.c     ****         {
 225:Src/i2c.c     ****             /* Transmit data (TXE flag raised) **********************************/
 226:Src/i2c.c     ****             /* Check TXE flag value in ISR register */
 227:Src/i2c.c     ****             if(LL_I2C_IsActiveFlag_TXE(I2C1))
 228:Src/i2c.c     ****             {
 229:Src/i2c.c     ****             /* Write data in Transmit Data register.
 230:Src/i2c.c     ****                 TXE flag is cleared by writing data in TXDR register */
 231:Src/i2c.c     ****                 LL_I2C_TransmitData8(I2C1, (*pdata++));
 232:Src/i2c.c     ****                 size--;
 233:Src/i2c.c     ****                 Timeout = timeout;
 234:Src/i2c.c     ****             }
 235:Src/i2c.c     ****             /* Check Systick counter flag to decrement the time-out value */
 236:Src/i2c.c     ****             if (LL_SYSTICK_IsActiveCounterFlag()) 
 237:Src/i2c.c     ****             {
 238:Src/i2c.c     ****                 if(Timeout-- == 0)
 239:Src/i2c.c     ****                 {
 240:Src/i2c.c     ****                     /* Time-out occurred. return error */
 241:Src/i2c.c     ****                     return ERROR;
 242:Src/i2c.c     ****                 }
 243:Src/i2c.c     ****             }
 244:Src/i2c.c     ****         } 
 245:Src/i2c.c     ****    }
 246:Src/i2c.c     ****    return SUCCESS;  
 707              		.loc 1 246 11 view .LVU200
 708 001c 0020     		movs	r0, #0
 709              	.LVL43:
 710              	.L9:
 247:Src/i2c.c     **** }
 711              		.loc 1 247 1 view .LVU201
 712              		@ sp needed
 713 001e 70BD     		pop	{r4, r5, r6, pc}
 714              	.LVL44:
 715              	.L10:
 207:Src/i2c.c     ****         {
 716              		.loc 1 207 9 is_stmt 1 view .LVU202
 717              	.LBB130:
 718              	.LBI130:
 719              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @file    stm32f0xx_ll_cortex.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @brief   Header file of CORTEX LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   @verbatim
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   ==============================================================================
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****                      ##### How to use this driver #####
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   ==============================================================================
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****     [..]
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****     The LL CORTEX driver contains a set of generic APIs that can be
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****     used by user:
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****       (+) SYSTICK configuration used by LL_mDelay and LL_Init1msTick
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 113


  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****           functions
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****       (+) Low power mode configuration (SCB register of Cortex-MCU)
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****       (+) API to access to MCU info (CPUID register)
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   @endverbatim
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   ******************************************************************************
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @attention
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * All rights reserved.</center></h2>
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * the "License"; You may not use this file except in compliance with the
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * License. You may obtain a copy of the License at:
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *                        opensource.org/licenses/BSD-3-Clause
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   ******************************************************************************
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** #ifndef __STM32F0xx_LL_CORTEX_H
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** #define __STM32F0xx_LL_CORTEX_H
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** #ifdef __cplusplus
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** extern "C" {
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** #endif
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Includes ------------------------------------------------------------------*/
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** #include "stm32f0xx.h"
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /** @addtogroup STM32F0xx_LL_Driver
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @{
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /** @defgroup CORTEX_LL CORTEX
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @{
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Private types -------------------------------------------------------------*/
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Private variables ---------------------------------------------------------*/
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Private constants ---------------------------------------------------------*/
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Private macros ------------------------------------------------------------*/
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Exported types ------------------------------------------------------------*/
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Exported constants --------------------------------------------------------*/
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_Exported_Constants CORTEX Exported Constants
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @{
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_CLKSOURCE_HCLK SYSTICK Clock Source
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @{
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** #define LL_SYSTICK_CLKSOURCE_HCLK_DIV8     0x00000000U                 /*!< AHB clock divided by 8 
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** #define LL_SYSTICK_CLKSOURCE_HCLK          SysTick_CTRL_CLKSOURCE_Msk  /*!< AHB clock selected as S
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 114


  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @}
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /**
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @}
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Exported macro ------------------------------------------------------------*/
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Exported functions --------------------------------------------------------*/
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_Exported_Functions CORTEX Exported Functions
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @{
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EF_SYSTICK SYSTICK
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @{
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /**
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @brief  This function checks if the Systick counter flag is active or not.
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @note   It can be used in timeout function on application side.
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @rmtoll STK_CTRL     COUNTFLAG     LL_SYSTICK_IsActiveCounterFlag
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @retval State of bit (1 or 0).
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** __STATIC_INLINE uint32_t LL_SYSTICK_IsActiveCounterFlag(void)
 720              		.loc 6 95 26 view .LVU203
 721              	.LBB131:
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** {
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   return ((SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) == (SysTick_CTRL_COUNTFLAG_Msk));
 722              		.loc 6 97 3 view .LVU204
 723              		.loc 6 97 19 is_stmt 0 view .LVU205
 724 0020 134C     		ldr	r4, .L20+4
 725 0022 2468     		ldr	r4, [r4]
 726              	.LBE131:
 727              	.LBE130:
 207:Src/i2c.c     ****         {
 728              		.loc 1 207 12 view .LVU206
 729 0024 E403     		lsls	r4, r4, #15
 730 0026 EDD5     		bpl	.L13
 209:Src/i2c.c     ****             {
 731              		.loc 1 209 13 is_stmt 1 view .LVU207
 209:Src/i2c.c     ****             {
 732              		.loc 1 209 23 is_stmt 0 view .LVU208
 733 0028 5C1E     		subs	r4, r3, #1
 734              	.LVL45:
 209:Src/i2c.c     ****             {
 735              		.loc 1 209 15 view .LVU209
 736 002a 002B     		cmp	r3, #0
 737 002c 19D0     		beq	.L17
 209:Src/i2c.c     ****             {
 738              		.loc 1 209 23 view .LVU210
 739 002e 2300     		movs	r3, r4
 740 0030 E8E7     		b	.L13
 741              	.LVL46:
 742              	.L11:
 223:Src/i2c.c     ****         {
 743              		.loc 1 223 14 is_stmt 1 view .LVU211
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 115


 744 0032 0029     		cmp	r1, #0
 745 0034 13D0     		beq	.L19
 227:Src/i2c.c     ****             {
 746              		.loc 1 227 13 view .LVU212
 747              	.LVL47:
 748              	.LBB132:
 749              	.LBI132:
1555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
 750              		.loc 4 1555 26 view .LVU213
 751              	.LBB133:
1557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 752              		.loc 4 1557 3 view .LVU214
1557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 753              		.loc 4 1557 12 is_stmt 0 view .LVU215
 754 0036 0D4C     		ldr	r4, .L20
 755 0038 A469     		ldr	r4, [r4, #24]
1557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 756              		.loc 4 1557 69 view .LVU216
 757 003a E407     		lsls	r4, r4, #31
 758 003c 06D5     		bpl	.L14
 759              	.LVL48:
1557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
 760              		.loc 4 1557 69 view .LVU217
 761              	.LBE133:
 762              	.LBE132:
 231:Src/i2c.c     ****                 size--;
 763              		.loc 1 231 17 is_stmt 1 view .LVU218
 231:Src/i2c.c     ****                 size--;
 764              		.loc 1 231 17 is_stmt 0 view .LVU219
 765 003e 0478     		ldrb	r4, [r0]
 766              	.LVL49:
 767              	.LBB134:
 768              	.LBI134:
2159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
2160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
2161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
2162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Return the slave matched address.
2163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll ISR          ADDCODE       LL_I2C_GetAddressMatchCode
2164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
2166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
2167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetAddressMatchCode(I2C_TypeDef *I2Cx)
2168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
2169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->ISR, I2C_ISR_ADDCODE) >> I2C_ISR_ADDCODE_Pos << 1);
2170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
2171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
2172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
2173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Enable internal comparison of the SMBus Packet Error byte (transmission or reception mo
2174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
2175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
2176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   This feature is cleared by hardware when the PEC byte is transferred, or when a STOP co
2177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****             or an Address Matched is received.
2178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         This bit has no effect when RELOAD bit is set.
2179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         This bit has no effect in device mode when SBC bit is not set.
2180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          PECBYTE       LL_I2C_EnableSMBusPECCompare
2181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 116


2183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
2184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSMBusPECCompare(I2C_TypeDef *I2Cx)
2185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
2186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   SET_BIT(I2Cx->CR2, I2C_CR2_PECBYTE);
2187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
2188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
2189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
2190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Check if the SMBus Packet Error byte internal comparison is requested or not.
2191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
2192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
2193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll CR2          PECBYTE       LL_I2C_IsEnabledSMBusPECCompare
2194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
2196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
2197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSMBusPECCompare(I2C_TypeDef *I2Cx)
2198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
2199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR2, I2C_CR2_PECBYTE) == (I2C_CR2_PECBYTE)) ? 1UL : 0UL);
2200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
2201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
2202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
2203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Get the SMBus Packet Error byte calculated.
2204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
2205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
2206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll PECR         PEC           LL_I2C_GetSMBusPEC
2207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
2209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
2210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetSMBusPEC(I2C_TypeDef *I2Cx)
2211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
2212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->PECR, I2C_PECR_PEC));
2213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
2214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
2215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
2216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Read Receive Data register.
2217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll RXDR         RXDATA        LL_I2C_ReceiveData8
2218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
2220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
2221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE uint8_t LL_I2C_ReceiveData8(I2C_TypeDef *I2Cx)
2222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
2223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   return (uint8_t)(READ_BIT(I2Cx->RXDR, I2C_RXDR_RXDATA));
2224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** }
2225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** 
2226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** /**
2227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @brief  Write in Transmit Data Register .
2228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @rmtoll TXDR         TXDATA        LL_I2C_TransmitData8
2229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @param  Data Value between Min_Data=0x00 and Max_Data=0xFF
2231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   * @retval None
2232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   */
2233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_TransmitData8(I2C_TypeDef *I2Cx, uint8_t Data)
 769              		.loc 4 2233 22 is_stmt 1 view .LVU220
 770              	.LBB135:
2234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h **** {
2235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_i2c.h ****   WRITE_REG(I2Cx->TXDR, Data);
 771              		.loc 4 2235 3 view .LVU221
 772 0040 0A4B     		ldr	r3, .L20
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 117


 773              	.LVL50:
 774              		.loc 4 2235 3 is_stmt 0 view .LVU222
 775 0042 9C62     		str	r4, [r3, #40]
 776              	.LVL51:
 777              		.loc 4 2235 3 view .LVU223
 778              	.LBE135:
 779              	.LBE134:
 232:Src/i2c.c     ****                 Timeout = timeout;
 780              		.loc 1 232 17 is_stmt 1 view .LVU224
 232:Src/i2c.c     ****                 Timeout = timeout;
 781              		.loc 1 232 21 is_stmt 0 view .LVU225
 782 0044 0139     		subs	r1, r1, #1
 783              	.LVL52:
 232:Src/i2c.c     ****                 Timeout = timeout;
 784              		.loc 1 232 21 view .LVU226
 785 0046 89B2     		uxth	r1, r1
 786              	.LVL53:
 233:Src/i2c.c     ****             }
 787              		.loc 1 233 17 is_stmt 1 view .LVU227
 233:Src/i2c.c     ****             }
 788              		.loc 1 233 25 is_stmt 0 view .LVU228
 789 0048 1300     		movs	r3, r2
 231:Src/i2c.c     ****                 size--;
 790              		.loc 1 231 51 view .LVU229
 791 004a 0130     		adds	r0, r0, #1
 792              	.LVL54:
 793              	.L14:
 236:Src/i2c.c     ****             {
 794              		.loc 1 236 13 is_stmt 1 view .LVU230
 795              	.LBB136:
 796              	.LBI136:
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** {
 797              		.loc 6 95 26 view .LVU231
 798              	.LBB137:
 799              		.loc 6 97 3 view .LVU232
 800              		.loc 6 97 19 is_stmt 0 view .LVU233
 801 004c 084C     		ldr	r4, .L20+4
 802 004e 2468     		ldr	r4, [r4]
 803              	.LBE137:
 804              	.LBE136:
 236:Src/i2c.c     ****             {
 805              		.loc 1 236 16 view .LVU234
 806 0050 E403     		lsls	r4, r4, #15
 807 0052 EED5     		bpl	.L11
 238:Src/i2c.c     ****                 {
 808              		.loc 1 238 17 is_stmt 1 view .LVU235
 238:Src/i2c.c     ****                 {
 809              		.loc 1 238 27 is_stmt 0 view .LVU236
 810 0054 5C1E     		subs	r4, r3, #1
 811              	.LVL55:
 238:Src/i2c.c     ****                 {
 812              		.loc 1 238 19 view .LVU237
 813 0056 002B     		cmp	r3, #0
 814 0058 05D0     		beq	.L18
 238:Src/i2c.c     ****                 {
 815              		.loc 1 238 27 view .LVU238
 816 005a 2300     		movs	r3, r4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 118


 817 005c E9E7     		b	.L11
 818              	.LVL56:
 819              	.L19:
 246:Src/i2c.c     **** }
 820              		.loc 1 246 11 view .LVU239
 821 005e 0020     		movs	r0, #0
 822              	.LVL57:
 246:Src/i2c.c     **** }
 823              		.loc 1 246 11 view .LVU240
 824 0060 DDE7     		b	.L9
 825              	.LVL58:
 826              	.L17:
 212:Src/i2c.c     ****             }
 827              		.loc 1 212 20 view .LVU241
 828 0062 0120     		movs	r0, #1
 829              	.LVL59:
 212:Src/i2c.c     ****             }
 830              		.loc 1 212 20 view .LVU242
 831 0064 DBE7     		b	.L9
 832              	.LVL60:
 833              	.L18:
 241:Src/i2c.c     ****                 }
 834              		.loc 1 241 28 view .LVU243
 835 0066 0120     		movs	r0, #1
 836              	.LVL61:
 241:Src/i2c.c     ****                 }
 837              		.loc 1 241 28 view .LVU244
 838 0068 D9E7     		b	.L9
 839              	.L21:
 840 006a C046     		.align	2
 841              	.L20:
 842 006c 00540040 		.word	1073763328
 843 0070 10E000E0 		.word	-536813552
 844              		.cfi_endproc
 845              	.LFE1022:
 847              		.global	i2cDataTx
 848              		.global	i2cDataRx
 849              		.section	.bss.i2cDataRx,"aw",%nobits
 850              		.align	2
 851              		.set	.LANCHOR0,. + 0
 854              	i2cDataRx:
 855 0000 00000000 		.space	8
 855      00000000 
 856              		.section	.bss.i2cDataTx,"aw",%nobits
 857              		.align	2
 860              	i2cDataTx:
 861 0000 00000000 		.space	8
 861      00000000 
 862              		.text
 863              	.Letext0:
 864              		.file 7 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 865              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 866              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 867              		.file 10 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 868              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_tim.h"
 869              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h"
 870              		.file 13 "Inc/i2c.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 119


 871              		.file 14 "<built-in>"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s 			page 120


DEFINED SYMBOLS
                            *ABS*:00000000 i2c.c
C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s:18     .text.MY_I2C1_Init:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s:24     .text.MY_I2C1_Init:00000000 MY_I2C1_Init
C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s:544    .text.MY_I2C1_Init:00000168 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s:562    .text.Set_ID:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s:568    .text.Set_ID:00000000 Set_ID
C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s:627    .text.Set_ID:00000020 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s:633    .text.Slave_Transmit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s:639    .text.Slave_Transmit:00000000 Slave_Transmit
C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s:842    .text.Slave_Transmit:0000006c $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s:860    .bss.i2cDataTx:00000000 i2cDataTx
C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s:854    .bss.i2cDataRx:00000000 i2cDataRx
C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s:850    .bss.i2cDataRx:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccKL3fbT.s:857    .bss.i2cDataTx:00000000 $d

UNDEFINED SYMBOLS
memset
LL_GPIO_Init
LL_I2C_Init
