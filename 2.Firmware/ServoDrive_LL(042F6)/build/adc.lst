ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_ADC_Init
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_ADC_Init:
  25              	.LFB1020:
  26              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /* USER CODE BEGIN Header */
   2:Src/adc.c     **** /**
   3:Src/adc.c     ****   ******************************************************************************
   4:Src/adc.c     ****   * @file    adc.c
   5:Src/adc.c     ****   * @brief   This file provides code for the configuration
   6:Src/adc.c     ****   *          of the ADC instances.
   7:Src/adc.c     ****   ******************************************************************************
   8:Src/adc.c     ****   * @attention
   9:Src/adc.c     ****   *
  10:Src/adc.c     ****   * Copyright (c) 2022 STMicroelectronics.
  11:Src/adc.c     ****   * All rights reserved.
  12:Src/adc.c     ****   *
  13:Src/adc.c     ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Src/adc.c     ****   * in the root directory of this software component.
  15:Src/adc.c     ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Src/adc.c     ****   *
  17:Src/adc.c     ****   ******************************************************************************
  18:Src/adc.c     ****   */
  19:Src/adc.c     **** /* USER CODE END Header */
  20:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  21:Src/adc.c     **** #include "adc.h"
  22:Src/adc.c     **** 
  23:Src/adc.c     **** /* USER CODE BEGIN 0 */
  24:Src/adc.c     **** uint16_t adcData[4];
  25:Src/adc.c     **** /* USER CODE END 0 */
  26:Src/adc.c     **** 
  27:Src/adc.c     **** /* ADC init function */
  28:Src/adc.c     **** void MX_ADC_Init(void)
  29:Src/adc.c     **** {
  27              		.loc 1 29 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 72
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 2


  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 70B5     		push	{r4, r5, r6, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  38 0002 92B0     		sub	sp, sp, #72
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 88
  30:Src/adc.c     **** 
  31:Src/adc.c     ****   /* USER CODE BEGIN ADC_Init 0 */
  32:Src/adc.c     **** 
  33:Src/adc.c     ****   /* USER CODE END ADC_Init 0 */
  34:Src/adc.c     **** 
  35:Src/adc.c     ****   LL_ADC_InitTypeDef ADC_InitStruct = {0};
  41              		.loc 1 35 3 view .LVU1
  42              		.loc 1 35 22 is_stmt 0 view .LVU2
  43 0004 1025     		movs	r5, #16
  44 0006 1022     		movs	r2, #16
  45 0008 0021     		movs	r1, #0
  46 000a 0EA8     		add	r0, sp, #56
  47 000c FFF7FEFF 		bl	memset
  48              	.LVL0:
  36:Src/adc.c     ****   LL_ADC_REG_InitTypeDef ADC_REG_InitStruct = {0};
  49              		.loc 1 36 3 is_stmt 1 view .LVU3
  50              		.loc 1 36 26 is_stmt 0 view .LVU4
  51 0010 1422     		movs	r2, #20
  52 0012 0021     		movs	r1, #0
  53 0014 09A8     		add	r0, sp, #36
  54 0016 FFF7FEFF 		bl	memset
  55              	.LVL1:
  37:Src/adc.c     **** 
  38:Src/adc.c     ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
  56              		.loc 1 38 3 is_stmt 1 view .LVU5
  57              		.loc 1 38 23 is_stmt 0 view .LVU6
  58 001a 1822     		movs	r2, #24
  59 001c 0021     		movs	r1, #0
  60 001e 03A8     		add	r0, sp, #12
  61 0020 FFF7FEFF 		bl	memset
  62              	.LVL2:
  39:Src/adc.c     **** 
  40:Src/adc.c     ****   /* Peripheral clock enable */
  41:Src/adc.c     ****   LL_APB1_GRP2_EnableClock(LL_APB1_GRP2_PERIPH_ADC1);
  63              		.loc 1 41 3 is_stmt 1 view .LVU7
  64              	.LBB46:
  65              	.LBI46:
  66              		.file 2 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @file    stm32f0xx_ll_bus.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   @verbatim                
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****                       ##### RCC Limitations #####
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 3


   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****     [..]  
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write 
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****     [..]  
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @attention
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * All rights reserved.</center></h2>
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * the "License"; You may not use this file except in compliance with the
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * License. You may obtain a copy of the License at:
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *                        opensource.org/licenses/BSD-3-Clause
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ******************************************************************************
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #ifndef __STM32F0xx_LL_BUS_H
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define __STM32F0xx_LL_BUS_H
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #ifdef __cplusplus
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** extern "C" {
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #include "stm32f0xx.h"
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @addtogroup STM32F0xx_LL_Driver
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(RCC)
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 4


  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHBENR_DMA1EN
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(DMA2)
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2           RCC_AHBENR_DMA2EN
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*DMA2*/
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM           RCC_AHBENR_SRAMEN
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FLASH          RCC_AHBENR_FLITFEN
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHBENR_CRCEN
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOA          RCC_AHBENR_GPIOAEN
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOB          RCC_AHBENR_GPIOBEN
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOC          RCC_AHBENR_GPIOCEN
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(GPIOD)
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOD          RCC_AHBENR_GPIODEN
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*GPIOD*/
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(GPIOE)
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOE          RCC_AHBENR_GPIOEEN
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*GPIOE*/
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOF          RCC_AHBENR_GPIOFEN
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TSC)
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_TSC            RCC_AHBENR_TSCEN
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TSC*/
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM2)
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR_TIM2EN
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM2*/
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR_TIM3EN
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM6)
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR_TIM6EN
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM6*/
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM7)
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR_TIM7EN
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM7*/
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM14          RCC_APB1ENR_TIM14EN
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR_WWDGEN
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(SPI2)
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR_SPI2EN
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*SPI2*/
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART2)
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR_USART2EN
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART2 */
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART3)
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART3         RCC_APB1ENR_USART3EN
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 5


 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART3 */
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART4)
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART4         RCC_APB1ENR_USART4EN
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART4 */
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART5)
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART5         RCC_APB1ENR_USART5EN
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART5 */
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR_I2C1EN
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(I2C2)
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR_I2C2EN
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*I2C2*/
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USB)
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR_USBEN
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USB */
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(CAN)
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN            RCC_APB1ENR_CANEN
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*CAN*/
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(CRS)
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CRS            RCC_APB1ENR_CRSEN
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*CRS*/
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR_PWREN
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(DAC)
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR_DACEN
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*DAC*/
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(CEC)
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CEC            RCC_APB1ENR_CECEN
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*CEC*/
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP2_PERIPH  APB1 GRP2 PERIPH
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_SYSCFG         RCC_APB2ENR_SYSCFGEN
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ADC1           RCC_APB2ENR_ADC1EN
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART8)
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART8         RCC_APB2ENR_USART8EN
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*USART8*/
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART7)
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART7         RCC_APB2ENR_USART7EN
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*USART7*/
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART6)
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART6         RCC_APB2ENR_USART6EN
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*USART6*/
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM1           RCC_APB2ENR_TIM1EN
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_SPI1           RCC_APB2ENR_SPI1EN
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART1         RCC_APB2ENR_USART1EN
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM15)
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM15          RCC_APB2ENR_TIM15EN
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM15*/
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM16          RCC_APB2ENR_TIM16EN
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM17          RCC_APB2ENR_TIM17EN
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_DBGMCU         RCC_APB2ENR_DBGMCUEN
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 6


 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_EnableClock\n
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_EnableClock\n
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_EnableClock\n
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_EnableClock\n
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_EnableClock\n
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOAEN       LL_AHB1_GRP1_EnableClock\n
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_EnableClock\n
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_EnableClock\n
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_EnableClock\n
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_EnableClock\n
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_EnableClock\n
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       TSCEN         LL_AHB1_GRP1_EnableClock
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBENR, Periphs);
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 7


 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_IsEnabledClock\n
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_IsEnabledClock\n
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_IsEnabledClock\n
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOAEN       LL_AHB1_GRP1_IsEnabledClock\n
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_IsEnabledClock\n
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_IsEnabledClock\n
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_IsEnabledClock\n
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_IsEnabledClock\n
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_IsEnabledClock\n
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       TSCEN         LL_AHB1_GRP1_IsEnabledClock
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   return (READ_BIT(RCC->AHBENR, Periphs) == Periphs);
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_DisableClock\n
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_DisableClock\n
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_DisableClock\n
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_DisableClock\n
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_DisableClock\n
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOAEN       LL_AHB1_GRP1_DisableClock\n
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_DisableClock\n
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_DisableClock\n
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_DisableClock\n
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_DisableClock\n
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_DisableClock\n
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       TSCEN         LL_AHB1_GRP1_DisableClock
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 8


 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBENR, Periphs);
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBRSTR      GPIOARST      LL_AHB1_GRP1_ForceReset\n
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOBRST      LL_AHB1_GRP1_ForceReset\n
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOCRST      LL_AHB1_GRP1_ForceReset\n
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIODRST      LL_AHB1_GRP1_ForceReset\n
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOERST      LL_AHB1_GRP1_ForceReset\n
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOFRST      LL_AHB1_GRP1_ForceReset\n
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ForceReset
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->AHBRSTR, Periphs);
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBRSTR      GPIOARST      LL_AHB1_GRP1_ReleaseReset\n
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOBRST      LL_AHB1_GRP1_ReleaseReset\n
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOCRST      LL_AHB1_GRP1_ReleaseReset\n
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIODRST      LL_AHB1_GRP1_ReleaseReset\n
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOERST      LL_AHB1_GRP1_ReleaseReset\n
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOFRST      LL_AHB1_GRP1_ReleaseReset\n
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ReleaseReset
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 9


 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBRSTR, Periphs);
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1_GRP1 APB1 GRP1
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock (available in register 1).
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_EnableClock\n
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_EnableClock\n
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_EnableClock\n
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_EnableClock\n
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_EnableClock\n
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_EnableClock\n
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_EnableClock\n
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_EnableClock\n
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_EnableClock\n
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART4EN      LL_APB1_GRP1_EnableClock\n
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART5EN      LL_APB1_GRP1_EnableClock\n
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_EnableClock\n
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_EnableClock\n
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_EnableClock\n
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CANEN         LL_APB1_GRP1_EnableClock\n
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CRSEN         LL_APB1_GRP1_EnableClock\n
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_EnableClock\n
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_EnableClock\n
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_EnableClock
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 10


 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not (available in register 1).
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_IsEnabledClock\n
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_IsEnabledClock\n
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART4EN      LL_APB1_GRP1_IsEnabledClock\n
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART5EN      LL_APB1_GRP1_IsEnabledClock\n
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_IsEnabledClock\n
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CANEN         LL_APB1_GRP1_IsEnabledClock\n
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CRSEN         LL_APB1_GRP1_IsEnabledClock\n
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_IsEnabledClock\n
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_IsEnabledClock\n
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_IsEnabledClock
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 11


 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   return (READ_BIT(RCC->APB1ENR, Periphs) == Periphs);
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock (available in register 1).
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_DisableClock\n
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_DisableClock\n
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_DisableClock\n
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_DisableClock\n
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_DisableClock\n
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_DisableClock\n
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_DisableClock\n
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_DisableClock\n
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_DisableClock\n
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART4EN      LL_APB1_GRP1_DisableClock\n
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART5EN      LL_APB1_GRP1_DisableClock\n
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_DisableClock\n
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_DisableClock\n
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_DisableClock\n
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CANEN         LL_APB1_GRP1_DisableClock\n
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CRSEN         LL_APB1_GRP1_DisableClock\n
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_DisableClock\n
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_DisableClock\n
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_DisableClock
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR, Periphs);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 12


 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset (available in register 1).
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST       LL_APB1_GRP1_ForceReset\n
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST       LL_APB1_GRP1_ForceReset\n
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST       LL_APB1_GRP1_ForceReset\n
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST       LL_APB1_GRP1_ForceReset\n
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM14RST      LL_APB1_GRP1_ForceReset\n
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST       LL_APB1_GRP1_ForceReset\n
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST       LL_APB1_GRP1_ForceReset\n
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART2RST     LL_APB1_GRP1_ForceReset\n
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART3RST     LL_APB1_GRP1_ForceReset\n
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART4RST     LL_APB1_GRP1_ForceReset\n
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART5RST     LL_APB1_GRP1_ForceReset\n
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST       LL_APB1_GRP1_ForceReset\n
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST       LL_APB1_GRP1_ForceReset\n
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USBRST        LL_APB1_GRP1_ForceReset\n
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CANRST        LL_APB1_GRP1_ForceReset\n
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CRSRST        LL_APB1_GRP1_ForceReset\n
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     PWRRST        LL_APB1_GRP1_ForceReset\n
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     DACRST        LL_APB1_GRP1_ForceReset\n
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CECRST        LL_APB1_GRP1_ForceReset
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR, Periphs);
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset (available in register 1).
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST       LL_APB1_GRP1_ReleaseReset\n
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST       LL_APB1_GRP1_ReleaseReset\n
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 13


 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST       LL_APB1_GRP1_ReleaseReset\n
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST       LL_APB1_GRP1_ReleaseReset\n
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM14RST      LL_APB1_GRP1_ReleaseReset\n
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST       LL_APB1_GRP1_ReleaseReset\n
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST       LL_APB1_GRP1_ReleaseReset\n
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART2RST     LL_APB1_GRP1_ReleaseReset\n
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART3RST     LL_APB1_GRP1_ReleaseReset\n
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART4RST     LL_APB1_GRP1_ReleaseReset\n
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART5RST     LL_APB1_GRP1_ReleaseReset\n
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST       LL_APB1_GRP1_ReleaseReset\n
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST       LL_APB1_GRP1_ReleaseReset\n
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USBRST        LL_APB1_GRP1_ReleaseReset\n
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CANRST        LL_APB1_GRP1_ReleaseReset\n
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CRSRST        LL_APB1_GRP1_ReleaseReset\n
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     PWRRST        LL_APB1_GRP1_ReleaseReset\n
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     DACRST        LL_APB1_GRP1_ReleaseReset\n
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CECRST        LL_APB1_GRP1_ReleaseReset
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR, Periphs);
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1_GRP2 APB1 GRP2
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock (available in register 2).
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 14


 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB1_GRP2_EnableClock\n
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      ADC1EN        LL_APB1_GRP2_EnableClock\n
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART8EN      LL_APB1_GRP2_EnableClock\n
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART7EN      LL_APB1_GRP2_EnableClock\n
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART6EN      LL_APB1_GRP2_EnableClock\n
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM1EN        LL_APB1_GRP2_EnableClock\n
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB1_GRP2_EnableClock\n
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB1_GRP2_EnableClock\n
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM15EN       LL_APB1_GRP2_EnableClock\n
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM16EN       LL_APB1_GRP2_EnableClock\n
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM17EN       LL_APB1_GRP2_EnableClock\n
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      DBGMCUEN      LL_APB1_GRP2_EnableClock
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SYSCFG
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ADC1
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART8 (*)
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART7 (*)
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART6 (*)
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM1
 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SPI1
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART1
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM15 (*)
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM16
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM17
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_DBGMCU
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_EnableClock(uint32_t Periphs)
  67              		.loc 2 665 22 view .LVU8
  68              	.LBB47:
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   __IO uint32_t tmpreg;
  69              		.loc 2 667 3 view .LVU9
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
  70              		.loc 2 668 3 view .LVU10
  71 0024 444B     		ldr	r3, .L3
  72 0026 9969     		ldr	r1, [r3, #24]
  73 0028 8020     		movs	r0, #128
  74 002a 8000     		lsls	r0, r0, #2
  75 002c 0143     		orrs	r1, r0
  76 002e 9961     		str	r1, [r3, #24]
 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
  77              		.loc 2 670 3 view .LVU11
  78              		.loc 2 670 12 is_stmt 0 view .LVU12
  79 0030 9A69     		ldr	r2, [r3, #24]
  80 0032 0240     		ands	r2, r0
  81              		.loc 2 670 10 view .LVU13
  82 0034 0292     		str	r2, [sp, #8]
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
  83              		.loc 2 671 3 is_stmt 1 view .LVU14
  84 0036 029A     		ldr	r2, [sp, #8]
  85              	.LVL3:
  86              		.loc 2 671 3 is_stmt 0 view .LVU15
  87              	.LBE47:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 15


  88              	.LBE46:
  42:Src/adc.c     **** 
  43:Src/adc.c     ****   LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_GPIOA);
  89              		.loc 1 43 3 is_stmt 1 view .LVU16
  90              	.LBB48:
  91              	.LBI48:
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
  92              		.loc 2 227 22 view .LVU17
  93              	.LBB49:
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
  94              		.loc 2 229 3 view .LVU18
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
  95              		.loc 2 230 3 view .LVU19
  96 0038 5A69     		ldr	r2, [r3, #20]
  97 003a 8021     		movs	r1, #128
  98 003c 8902     		lsls	r1, r1, #10
  99 003e 0A43     		orrs	r2, r1
 100 0040 5A61     		str	r2, [r3, #20]
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 101              		.loc 2 232 3 view .LVU20
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 102              		.loc 2 232 12 is_stmt 0 view .LVU21
 103 0042 5B69     		ldr	r3, [r3, #20]
 104 0044 0B40     		ands	r3, r1
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 105              		.loc 2 232 10 view .LVU22
 106 0046 0193     		str	r3, [sp, #4]
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 107              		.loc 2 233 3 is_stmt 1 view .LVU23
 108 0048 019B     		ldr	r3, [sp, #4]
 109              	.LVL4:
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 110              		.loc 2 233 3 is_stmt 0 view .LVU24
 111              	.LBE49:
 112              	.LBE48:
  44:Src/adc.c     ****   /**ADC GPIO Configuration
  45:Src/adc.c     ****   PA4   ------> ADC_IN4
  46:Src/adc.c     ****   */
  47:Src/adc.c     ****   GPIO_InitStruct.Pin = LL_GPIO_PIN_4;
 113              		.loc 1 47 3 is_stmt 1 view .LVU25
 114              		.loc 1 47 23 is_stmt 0 view .LVU26
 115 004a 0395     		str	r5, [sp, #12]
  48:Src/adc.c     ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 116              		.loc 1 48 3 is_stmt 1 view .LVU27
 117              		.loc 1 48 24 is_stmt 0 view .LVU28
 118 004c 0323     		movs	r3, #3
 119 004e 0493     		str	r3, [sp, #16]
  49:Src/adc.c     ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 120              		.loc 1 49 3 is_stmt 1 view .LVU29
  50:Src/adc.c     ****   LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 121              		.loc 1 50 3 view .LVU30
 122 0050 7138     		subs	r0, r0, #113
 123 0052 FF38     		subs	r0, r0, #255
 124 0054 03A9     		add	r1, sp, #12
 125 0056 C005     		lsls	r0, r0, #23
 126 0058 FFF7FEFF 		bl	LL_GPIO_Init
 127              	.LVL5:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 16


  51:Src/adc.c     **** 
  52:Src/adc.c     ****   /* ADC DMA Init */
  53:Src/adc.c     **** 
  54:Src/adc.c     ****   /* ADC Init */
  55:Src/adc.c     ****   LL_DMA_SetDataTransferDirection(DMA1, LL_DMA_CHANNEL_1, LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
 128              		.loc 1 55 3 view .LVU31
 129              	.LBB50:
 130              	.LBI50:
 131              		.file 3 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @file    stm32f0xx_ll_dma.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief   Header file of DMA LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   ******************************************************************************
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #ifndef __STM32F0xx_LL_DMA_H
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __STM32F0xx_LL_DMA_H
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #ifdef __cplusplus
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** extern "C" {
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #include "stm32f0xx.h"
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @addtogroup STM32F0xx_LL_Driver
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined (DMA1) || defined (DMA2)
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL DMA
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Variables DMA Private Variables
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Array used to get the DMA channel register offset versus channel index LL_DMA_CHANNEL_x */
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** static const uint8_t CHANNEL_OFFSET_TAB[] =
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 17


  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel1_BASE - DMA1_BASE),
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel2_BASE - DMA1_BASE),
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel3_BASE - DMA1_BASE),
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel4_BASE - DMA1_BASE),
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel5_BASE - DMA1_BASE),
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel6_BASE - DMA1_BASE),
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif /*DMA1_Channel6*/
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel7_BASE - DMA1_BASE)
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif /*DMA1_Channel7*/
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** };
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Private constants ---------------------------------------------------------*/
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Constants DMA Private Constants
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Define used to get CSELR register offset */
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define DMA_CSELR_OFFSET                  (uint32_t)(DMA1_CSELR_BASE - DMA1_BASE)
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Defines used for the bit position in the register and perform offsets */
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define DMA_POSITION_CSELR_CXS            ((Channel-1U)*4U)
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Private macros ------------------------------------------------------------*/
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Macros DMA Private Macros
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Exported types ------------------------------------------------------------*/
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_ES_INIT DMA Exported Init structure
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** typedef struct
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcAddress;  /*!< Specifies the peripheral base address for DMA transfer
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         or as Source base address in case of memory to memory trans
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t MemoryOrM2MDstAddress;  /*!< Specifies the memory base address for DMA transfer
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         or as Destination base address in case of memory to memory 
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t Direction;              /*!< Specifies if the data will be transferred from memory to pe
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 18


 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         from memory to memory or from peripheral to memory.
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_DIRECTION
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t Mode;                   /*!< Specifies the normal or circular operation mode.
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MODE
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         @note: The circular buffer mode cannot be used if the memor
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                                data transfer direction is configured on the selecte
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcIncMode;  /*!< Specifies whether the Peripheral address or Source address 
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         is incremented or not.
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PERIPH
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t MemoryOrM2MDstIncMode;  /*!< Specifies whether the Memory address or Destination address
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         is incremented or not.
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MEMORY
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcDataSize; /*!< Specifies the Peripheral data size alignment or Source data
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PDATAALIGN
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t MemoryOrM2MDstDataSize; /*!< Specifies the Memory data size alignment or Destination dat
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MDATAALIGN
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t NbData;                 /*!< Specifies the number of data to transfer, in data unit.
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         The data unit is equal to the source buffer configuration s
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         or MemorySize parameters depending in the transfer directio
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if (defined(DMA1_CSELR_DEFAULT)||defined(DMA2_CSELR_DEFAULT))
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t PeriphRequest;          /*!< Specifies the peripheral request.
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_REQUEST
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t Priority;               /*!< Specifies the channel priority level.
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PRIORITY
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** } LL_DMA_InitTypeDef;
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 19


 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Exported constants --------------------------------------------------------*/
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Constants DMA Exported Constants
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CLEAR_FLAG Clear Flags Defines
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_WriteReg function
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF1                 DMA_IFCR_CGIF1        /*!< Channel 1 global flag         
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF1                DMA_IFCR_CTCIF1       /*!< Channel 1 transfer complete fl
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF1                DMA_IFCR_CHTIF1       /*!< Channel 1 half transfer flag  
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF1                DMA_IFCR_CTEIF1       /*!< Channel 1 transfer error flag 
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF2                 DMA_IFCR_CGIF2        /*!< Channel 2 global flag         
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF2                DMA_IFCR_CTCIF2       /*!< Channel 2 transfer complete fl
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF2                DMA_IFCR_CHTIF2       /*!< Channel 2 half transfer flag  
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF2                DMA_IFCR_CTEIF2       /*!< Channel 2 transfer error flag 
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF3                 DMA_IFCR_CGIF3        /*!< Channel 3 global flag         
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF3                DMA_IFCR_CTCIF3       /*!< Channel 3 transfer complete fl
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF3                DMA_IFCR_CHTIF3       /*!< Channel 3 half transfer flag  
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF3                DMA_IFCR_CTEIF3       /*!< Channel 3 transfer error flag 
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF4                 DMA_IFCR_CGIF4        /*!< Channel 4 global flag         
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF4                DMA_IFCR_CTCIF4       /*!< Channel 4 transfer complete fl
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF4                DMA_IFCR_CHTIF4       /*!< Channel 4 half transfer flag  
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF4                DMA_IFCR_CTEIF4       /*!< Channel 4 transfer error flag 
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF5                 DMA_IFCR_CGIF5        /*!< Channel 5 global flag         
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF5                DMA_IFCR_CTCIF5       /*!< Channel 5 transfer complete fl
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF5                DMA_IFCR_CHTIF5       /*!< Channel 5 half transfer flag  
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF5                DMA_IFCR_CTEIF5       /*!< Channel 5 transfer error flag 
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF6                 DMA_IFCR_CGIF6        /*!< Channel 6 global flag         
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF6                DMA_IFCR_CTCIF6       /*!< Channel 6 transfer complete fl
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF6                DMA_IFCR_CHTIF6       /*!< Channel 6 half transfer flag  
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF6                DMA_IFCR_CTEIF6       /*!< Channel 6 transfer error flag 
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF7                 DMA_IFCR_CGIF7        /*!< Channel 7 global flag         
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF7                DMA_IFCR_CTCIF7       /*!< Channel 7 transfer complete fl
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF7                DMA_IFCR_CHTIF7       /*!< Channel 7 half transfer flag  
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF7                DMA_IFCR_CTEIF7       /*!< Channel 7 transfer error flag 
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_GET_FLAG Get Flags Defines
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_ReadReg function
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_GIF1                   DMA_ISR_GIF1          /*!< Channel 1 global flag         
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF1                  DMA_ISR_TCIF1         /*!< Channel 1 transfer complete fl
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF1                  DMA_ISR_HTIF1         /*!< Channel 1 half transfer flag  
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF1                  DMA_ISR_TEIF1         /*!< Channel 1 transfer error flag 
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_GIF2                   DMA_ISR_GIF2          /*!< Channel 2 global flag         
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 20


 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF2                  DMA_ISR_TCIF2         /*!< Channel 2 transfer complete fl
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF2                  DMA_ISR_HTIF2         /*!< Channel 2 half transfer flag  
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF2                  DMA_ISR_TEIF2         /*!< Channel 2 transfer error flag 
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_GIF3                   DMA_ISR_GIF3          /*!< Channel 3 global flag         
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF3                  DMA_ISR_TCIF3         /*!< Channel 3 transfer complete fl
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF3                  DMA_ISR_HTIF3         /*!< Channel 3 half transfer flag  
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF3                  DMA_ISR_TEIF3         /*!< Channel 3 transfer error flag 
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_GIF4                   DMA_ISR_GIF4          /*!< Channel 4 global flag         
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF4                  DMA_ISR_TCIF4         /*!< Channel 4 transfer complete fl
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF4                  DMA_ISR_HTIF4         /*!< Channel 4 half transfer flag  
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF4                  DMA_ISR_TEIF4         /*!< Channel 4 transfer error flag 
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_GIF5                   DMA_ISR_GIF5          /*!< Channel 5 global flag         
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF5                  DMA_ISR_TCIF5         /*!< Channel 5 transfer complete fl
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF5                  DMA_ISR_HTIF5         /*!< Channel 5 half transfer flag  
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF5                  DMA_ISR_TEIF5         /*!< Channel 5 transfer error flag 
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_GIF6                   DMA_ISR_GIF6          /*!< Channel 6 global flag         
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF6                  DMA_ISR_TCIF6         /*!< Channel 6 transfer complete fl
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF6                  DMA_ISR_HTIF6         /*!< Channel 6 half transfer flag  
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF6                  DMA_ISR_TEIF6         /*!< Channel 6 transfer error flag 
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_GIF7                   DMA_ISR_GIF7          /*!< Channel 7 global flag         
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF7                  DMA_ISR_TCIF7         /*!< Channel 7 transfer complete fl
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF7                  DMA_ISR_HTIF7         /*!< Channel 7 half transfer flag  
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF7                  DMA_ISR_TEIF7         /*!< Channel 7 transfer error flag 
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_IT IT Defines
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief    IT defines which can be used with LL_DMA_ReadReg and  LL_DMA_WriteReg functions
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CCR_TCIE                   DMA_CCR_TCIE          /*!< Transfer complete interrupt */
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CCR_HTIE                   DMA_CCR_HTIE          /*!< Half Transfer interrupt     */
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CCR_TEIE                   DMA_CCR_TEIE          /*!< Transfer error interrupt    */
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CHANNEL CHANNEL
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_1                  0x00000001U /*!< DMA Channel 1 */
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_2                  0x00000002U /*!< DMA Channel 2 */
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_3                  0x00000003U /*!< DMA Channel 3 */
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_4                  0x00000004U /*!< DMA Channel 4 */
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_5                  0x00000005U /*!< DMA Channel 5 */
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_6                  0x00000006U /*!< DMA Channel 6 */
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_7                  0x00000007U /*!< DMA Channel 7 */
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 21


 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_ALL                0xFFFF0000U /*!< DMA Channel all (used only for function 
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_DIRECTION Transfer Direction
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_DIRECTION_PERIPH_TO_MEMORY 0x00000000U             /*!< Peripheral to memory directi
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_PERIPH DMA_CCR_DIR             /*!< Memory to peripheral directi
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_MEMORY DMA_CCR_MEM2MEM         /*!< Memory to memory direction  
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MODE Transfer mode
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_MODE_NORMAL                0x00000000U             /*!< Normal Mode                 
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_MODE_CIRCULAR              DMA_CCR_CIRC            /*!< Circular Mode               
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PERIPH Peripheral increment mode
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PERIPH_INCREMENT           DMA_CCR_PINC            /*!< Peripheral increment mode En
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PERIPH_NOINCREMENT         0x00000000U             /*!< Peripheral increment mode Di
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MEMORY Memory increment mode
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_MEMORY_INCREMENT           DMA_CCR_MINC            /*!< Memory increment mode Enable
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_MEMORY_NOINCREMENT         0x00000000U             /*!< Memory increment mode Disabl
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PDATAALIGN Peripheral data alignment
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_BYTE            0x00000000U             /*!< Peripheral data alignment : 
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_HALFWORD        DMA_CCR_PSIZE_0         /*!< Peripheral data alignment : 
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_WORD            DMA_CCR_PSIZE_1         /*!< Peripheral data alignment : 
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MDATAALIGN Memory data alignment
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_BYTE            0x00000000U             /*!< Memory data alignment : Byte
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 22


 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_HALFWORD        DMA_CCR_MSIZE_0         /*!< Memory data alignment : Half
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_WORD            DMA_CCR_MSIZE_1         /*!< Memory data alignment : Word
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PRIORITY Transfer Priority level
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PRIORITY_LOW               0x00000000U             /*!< Priority level : Low       *
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PRIORITY_MEDIUM            DMA_CCR_PL_0            /*!< Priority level : Medium    *
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PRIORITY_HIGH              DMA_CCR_PL_1            /*!< Priority level : High      *
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PRIORITY_VERYHIGH          DMA_CCR_PL              /*!< Priority level : Very_High *
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if (defined(DMA1_CSELR_DEFAULT)||defined(DMA2_CSELR_DEFAULT))
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_REQUEST Transfer peripheral request
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_0                  0x00000000U /*!< DMA peripheral request 0  */
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_1                  0x00000001U /*!< DMA peripheral request 1  */
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_2                  0x00000002U /*!< DMA peripheral request 2  */
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_3                  0x00000003U /*!< DMA peripheral request 3  */
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_4                  0x00000004U /*!< DMA peripheral request 4  */
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_5                  0x00000005U /*!< DMA peripheral request 5  */
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_6                  0x00000006U /*!< DMA peripheral request 6  */
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_7                  0x00000007U /*!< DMA peripheral request 7  */
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_8                  0x00000008U /*!< DMA peripheral request 8  */
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_9                  0x00000009U /*!< DMA peripheral request 9  */
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_10                 0x0000000AU /*!< DMA peripheral request 10 */
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_11                 0x0000000BU /*!< DMA peripheral request 11 */
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_12                 0x0000000CU /*!< DMA peripheral request 12 */
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_13                 0x0000000DU /*!< DMA peripheral request 13 */
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_14                 0x0000000EU /*!< DMA peripheral request 14 */
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_15                 0x0000000FU /*!< DMA peripheral request 15 */
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Exported macro ------------------------------------------------------------*/
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Macros DMA Exported Macros
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EM_WRITE_READ Common Write and read registers macros
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Write a value in DMA register
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 23


 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __REG__ Register to be written
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __VALUE__ Value to be written in the register
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Read a value in DMA register
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __REG__ Register to be read
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Register value
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EM_CONVERT_DMAxCHANNELy Convert DMAxChannely
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into DMAx
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval DMAx
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA2)
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)   \
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) > ((uint32_t)DMA1_Channel7)) ?  DMA2 : DMA1)
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #else
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)  (DMA1)
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into LL_DMA_CHANNEL_y
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval LL_DMA_CHANNEL_y
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined (DMA2)
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined (DMA2_Channel6) && defined (DMA2_Channel7)
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel1)) ? LL_DMA_CHANNEL_1 : \
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel2)) ? LL_DMA_CHANNEL_2 : \
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel3)) ? LL_DMA_CHANNEL_3 : \
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel4)) ? LL_DMA_CHANNEL_4 : \
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel5)) ? LL_DMA_CHANNEL_5 : \
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel6)) ? LL_DMA_CHANNEL_6 : \
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #else
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel1)) ? LL_DMA_CHANNEL_1 : \
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 24


 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel2)) ? LL_DMA_CHANNEL_2 : \
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel3)) ? LL_DMA_CHANNEL_3 : \
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel4)) ? LL_DMA_CHANNEL_4 : \
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel5)) ? LL_DMA_CHANNEL_5 : \
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #else
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined (DMA1_Channel6) && defined (DMA1_Channel7)
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #elif defined (DMA1_Channel6)
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  LL_DMA_CHANNEL_6)
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #else
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  LL_DMA_CHANNEL_5)
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif /* DMA1_Channel6 && DMA1_Channel7 */
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Convert DMA Instance DMAx and LL_DMA_CHANNEL_y into DMAx_Channely
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __DMA_INSTANCE__ DMAx
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __CHANNEL__ LL_DMA_CHANNEL_y
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval DMAx_Channely
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined (DMA2)
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined (DMA2_Channel6) && defined (DMA2_Channel7)
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 25


 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  DMA2_Channel7)
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #else
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  DMA1_Channel7)
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #else
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined (DMA1_Channel6) && defined (DMA1_Channel7)
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  DMA1_Channel7)
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #elif defined (DMA1_Channel6)
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  DMA1_Channel6)
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #else
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  DMA1_Channel5)
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif /* DMA1_Channel6 && DMA1_Channel7 */
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Exported functions --------------------------------------------------------*/
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 26


 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Functions DMA Exported Functions
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  * @{
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  */
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EF_Configuration Configuration
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Enable DMA channel.
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_EnableChannel
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])))-
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Disable DMA channel.
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_DisableChannel
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_DisableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   CLEAR_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Check if DMA channel is enabled or disabled.
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_IsEnabledChannel
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 27


 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsEnabledChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_EN) == (DMA_CCR_EN));
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Configure all parameters link to DMA transfer.
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_ConfigTransfer\n
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_ConfigTransfer\n
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          CIRC          LL_DMA_ConfigTransfer\n
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          PINC          LL_DMA_ConfigTransfer\n
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          MINC          LL_DMA_ConfigTransfer\n
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          PSIZE         LL_DMA_ConfigTransfer\n
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          MSIZE         LL_DMA_ConfigTransfer\n
 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          PL            LL_DMA_ConfigTransfer
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Configuration This parameter must be a combination of all the following values:
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY or @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH o
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL or @ref LL_DMA_MODE_CIRCULAR
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT or @ref LL_DMA_PERIPH_NOINCREMENT
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT or @ref LL_DMA_MEMORY_NOINCREMENT
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE or @ref LL_DMA_PDATAALIGN_HALFWORD or @ref LL_DMA_PDAT
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE or @ref LL_DMA_MDATAALIGN_HALFWORD or @ref LL_DMA_MDAT
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW or @ref LL_DMA_PRIORITY_MEDIUM or @ref LL_DMA_PRIORITY_HI
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigTransfer(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Configurat
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM | DMA_CCR_CIRC | DMA_CCR_PINC | DMA_CCR_MINC | DMA_CCR_P
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              Configuration);
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set Data transfer direction (read from peripheral or from memory).
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_SetDataTransferDirection\n
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_SetDataTransferDirection
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 28


 676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
 677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t 
 132              		.loc 3 682 22 view .LVU32
 133              	.LBB51:
 683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 134              		.loc 3 684 3 view .LVU33
 135 005c 374B     		ldr	r3, .L3+4
 136 005e 1A68     		ldr	r2, [r3]
 137 0060 3749     		ldr	r1, .L3+8
 138 0062 0A40     		ands	r2, r1
 139 0064 1A60     		str	r2, [r3]
 140              	.LVL6:
 141              		.loc 3 684 3 is_stmt 0 view .LVU34
 142              	.LBE51:
 143              	.LBE50:
  56:Src/adc.c     **** 
  57:Src/adc.c     ****   LL_DMA_SetChannelPriorityLevel(DMA1, LL_DMA_CHANNEL_1, LL_DMA_PRIORITY_LOW);
 144              		.loc 1 57 3 is_stmt 1 view .LVU35
 145              	.LBB52:
 146              	.LBI52:
 685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Data transfer direction (read from peripheral or from memory).
 690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_GetDataTransferDirection\n
 691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_GetDataTransferDirection
 692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel)
 707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_DIR | DMA_CCR_MEM2MEM));
 710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set DMA mode circular or normal.
 714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note The circular buffer mode cannot be used if the memory-to-memory
 715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * data transfer is configured on the selected Channel.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 29


 716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_SetMode
 717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Mode This parameter can be one of the following values:
 727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Mode)
 732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              Mode);
 735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get DMA mode circular or normal.
 739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_GetMode
 740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMode(DMA_TypeDef *DMAx, uint32_t Channel)
 754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_CIRC));
 757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set Peripheral increment mode.
 761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_SetPeriphIncMode
 762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  PeriphOrM2MSrcIncMode This parameter can be one of the following values:
 772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 30


 773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOr
 777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Peripheral increment mode.
 784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_GetPeriphIncMode
 785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_PINC));
 802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set Memory increment mode.
 806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_SetMemoryIncMode
 807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  MemoryOrM2MDstIncMode This parameter can be one of the following values:
 817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOr
 822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Memory increment mode.
 829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_GetMemoryIncMode
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 31


 830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_MINC));
 847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set Peripheral size.
 851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_SetPeriphSize
 852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  PeriphOrM2MSrcDataSize This parameter can be one of the following values:
 862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOrM2M
 868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Peripheral size.
 875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_GetPeriphSize
 876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 32


 887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel)
 891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_PSIZE));
 894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set Memory size.
 898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_SetMemorySize
 899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  MemoryOrM2MDstDataSize This parameter can be one of the following values:
 909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOrM2M
 915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Memory size.
 922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_GetMemorySize
 923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel)
 938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_MSIZE));
 941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 33


 944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set Channel priority level.
 945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_SetChannelPriorityLevel
 946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Priority This parameter can be one of the following values:
 956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t P
 147              		.loc 3 962 22 view .LVU36
 148              	.LBB53:
 963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 149              		.loc 3 964 3 view .LVU37
 150 0066 1A68     		ldr	r2, [r3]
 151 0068 3649     		ldr	r1, .L3+12
 152 006a 0A40     		ands	r2, r1
 153 006c 1A60     		str	r2, [r3]
 154              	.LVL7:
 155              		.loc 3 964 3 is_stmt 0 view .LVU38
 156              	.LBE53:
 157              	.LBE52:
  58:Src/adc.c     **** 
  59:Src/adc.c     ****   LL_DMA_SetMode(DMA1, LL_DMA_CHANNEL_1, LL_DMA_MODE_CIRCULAR);
 158              		.loc 1 59 3 is_stmt 1 view .LVU39
 159              	.LBB54:
 160              	.LBI54:
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 161              		.loc 3 731 22 view .LVU40
 162              	.LBB55:
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              Mode);
 163              		.loc 3 733 3 view .LVU41
 164 006e 1A68     		ldr	r2, [r3]
 165 0070 2021     		movs	r1, #32
 166 0072 8A43     		bics	r2, r1
 167 0074 0A43     		orrs	r2, r1
 168 0076 1A60     		str	r2, [r3]
 169              	.LVL8:
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              Mode);
 170              		.loc 3 733 3 is_stmt 0 view .LVU42
 171              	.LBE55:
 172              	.LBE54:
  60:Src/adc.c     **** 
  61:Src/adc.c     ****   LL_DMA_SetPeriphIncMode(DMA1, LL_DMA_CHANNEL_1, LL_DMA_PERIPH_NOINCREMENT);
 173              		.loc 1 61 3 is_stmt 1 view .LVU43
 174              	.LBB56:
 175              	.LBI56:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 34


 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 176              		.loc 3 776 22 view .LVU44
 177              	.LBB57:
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 178              		.loc 3 778 3 view .LVU45
 179 0078 1A68     		ldr	r2, [r3]
 180 007a 2031     		adds	r1, r1, #32
 181 007c 8A43     		bics	r2, r1
 182 007e 1A60     		str	r2, [r3]
 183              	.LVL9:
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 184              		.loc 3 778 3 is_stmt 0 view .LVU46
 185              	.LBE57:
 186              	.LBE56:
  62:Src/adc.c     **** 
  63:Src/adc.c     ****   LL_DMA_SetMemoryIncMode(DMA1, LL_DMA_CHANNEL_1, LL_DMA_MEMORY_INCREMENT);
 187              		.loc 1 63 3 is_stmt 1 view .LVU47
 188              	.LBB58:
 189              	.LBI58:
 821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 190              		.loc 3 821 22 view .LVU48
 191              	.LBB59:
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 192              		.loc 3 823 3 view .LVU49
 193 0080 1A68     		ldr	r2, [r3]
 194 0082 4031     		adds	r1, r1, #64
 195 0084 8A43     		bics	r2, r1
 196 0086 0A43     		orrs	r2, r1
 197 0088 1A60     		str	r2, [r3]
 198              	.LVL10:
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 199              		.loc 3 823 3 is_stmt 0 view .LVU50
 200              	.LBE59:
 201              	.LBE58:
  64:Src/adc.c     **** 
  65:Src/adc.c     ****   LL_DMA_SetPeriphSize(DMA1, LL_DMA_CHANNEL_1, LL_DMA_PDATAALIGN_HALFWORD);
 202              		.loc 1 65 3 is_stmt 1 view .LVU51
 203              	.LBB60:
 204              	.LBI60:
 867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 205              		.loc 3 867 22 view .LVU52
 206              	.LBB61:
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 207              		.loc 3 869 3 view .LVU53
 208 008a 1A68     		ldr	r2, [r3]
 209 008c 2E49     		ldr	r1, .L3+16
 210 008e 1140     		ands	r1, r2
 211 0090 8022     		movs	r2, #128
 212 0092 5200     		lsls	r2, r2, #1
 213 0094 0A43     		orrs	r2, r1
 214 0096 1A60     		str	r2, [r3]
 215              	.LVL11:
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 216              		.loc 3 869 3 is_stmt 0 view .LVU54
 217              	.LBE61:
 218              	.LBE60:
  66:Src/adc.c     **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 35


  67:Src/adc.c     ****   LL_DMA_SetMemorySize(DMA1, LL_DMA_CHANNEL_1, LL_DMA_MDATAALIGN_HALFWORD);
 219              		.loc 1 67 3 is_stmt 1 view .LVU55
 220              	.LBB62:
 221              	.LBI62:
 914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 222              		.loc 3 914 22 view .LVU56
 223              	.LBB63:
 916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 224              		.loc 3 916 3 view .LVU57
 225 0098 1A68     		ldr	r2, [r3]
 226 009a 2C49     		ldr	r1, .L3+20
 227 009c 1140     		ands	r1, r2
 228 009e 8022     		movs	r2, #128
 229 00a0 D200     		lsls	r2, r2, #3
 230 00a2 0A43     		orrs	r2, r1
 231 00a4 1A60     		str	r2, [r3]
 232              	.LVL12:
 916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 233              		.loc 3 916 3 is_stmt 0 view .LVU58
 234              	.LBE63:
 235              	.LBE62:
  68:Src/adc.c     **** 
  69:Src/adc.c     ****   /* USER CODE BEGIN ADC_Init 1 */
  70:Src/adc.c     ****   LL_DMA_SetDataLength(DMA1,LL_DMA_CHANNEL_1,1);
 236              		.loc 1 70 3 is_stmt 1 view .LVU59
 237              	.LBB64:
 238              	.LBI64:
 965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              Priority);
 966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel priority level.
 970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_GetChannelPriorityLevel
 971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel)
 987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_PL));
 990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set Number of data to transfer.
 994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   This action has no effect if
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 36


 995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         channel is enabled.
 996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_SetDataLength
 997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  NbData Between Min_Data = 0 and Max_Data = 0x0000FFFF
1007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataLength(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t NbData)
 239              		.loc 3 1009 22 view .LVU60
 240              	.LBB65:
1010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 241              		.loc 3 1011 3 view .LVU61
 242 00a6 5A68     		ldr	r2, [r3, #4]
 243 00a8 120C     		lsrs	r2, r2, #16
 244 00aa 1204     		lsls	r2, r2, #16
 245 00ac 0126     		movs	r6, #1
 246 00ae 3243     		orrs	r2, r6
 247 00b0 5A60     		str	r2, [r3, #4]
 248              	.LVL13:
 249              		.loc 3 1011 3 is_stmt 0 view .LVU62
 250              	.LBE65:
 251              	.LBE64:
  71:Src/adc.c     ****   LL_DMA_SetMemoryAddress(DMA1,LL_DMA_CHANNEL_1,(uint32_t )&adcData);
 252              		.loc 1 71 3 is_stmt 1 view .LVU63
 253 00b2 274A     		ldr	r2, .L3+24
 254              	.LVL14:
 255              	.LBB66:
 256              	.LBI66:
1012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
1013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Number of data to transfer.
1017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Once the channel is enabled, the return value indicate the
1018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         remaining bytes to be transmitted.
1019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_GetDataLength
1020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataLength(DMA_TypeDef *DMAx, uint32_t Channel)
1032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 37


1033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CNDTR_NDT));
1035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Configure the Source and Destination addresses.
1039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Each IP using DMA provides an API to get directly the register adress (LL_PPP_DMA_GetRe
1041:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_ConfigAddresses\n
1042:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CMAR         MA            LL_DMA_ConfigAddresses
1043:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1044:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1045:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1046:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1047:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1048:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1049:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1050:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1051:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1052:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  SrcAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1053:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DstAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1054:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
1055:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
1056:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
1057:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
1058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1059:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1060:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigAddresses(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t SrcAddres
1061:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                             uint32_t DstAddress, uint32_t Direction)
1062:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1063:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   /* Direction Memory to Periph */
1064:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   if (Direction == LL_DMA_DIRECTION_MEMORY_TO_PERIPH)
1065:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   {
1066:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]
1067:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]
1068:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   }
1069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   /* Direction Periph to Memory and Memory to Memory */
1070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   else
1071:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   {
1072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]
1073:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]
1074:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   }
1075:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1076:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1077:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1078:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set the Memory address.
1079:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1080:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1081:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_SetMemoryAddress
1082:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1083:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1084:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1085:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1086:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1087:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1088:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1089:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 38


1090:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1091:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1093:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1094:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
 257              		.loc 3 1094 22 view .LVU64
 258              	.LBB67:
1095:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1096:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
 259              		.loc 3 1096 3 view .LVU65
 260 00b4 DA60     		str	r2, [r3, #12]
 261              	.LVL15:
 262              		.loc 3 1096 3 is_stmt 0 view .LVU66
 263              	.LBE67:
 264              	.LBE66:
  72:Src/adc.c     ****   LL_DMA_SetPeriphAddress(DMA1,LL_DMA_CHANNEL_1,LL_ADC_DMA_GetRegAddr(ADC1,LL_ADC_DMA_REG_REGULAR_D
 265              		.loc 1 72 3 is_stmt 1 view .LVU67
 266              	.LBB68:
 267              	.LBI68:
 268              		.file 4 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @file    stm32f0xx_ll_adc.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   ******************************************************************************
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #ifndef __STM32F0xx_LL_ADC_H
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define __STM32F0xx_LL_ADC_H
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #ifdef __cplusplus
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** extern "C" {
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #endif
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #include "stm32f0xx.h"
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @addtogroup STM32F0xx_LL_Driver
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #if defined (ADC1)
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL ADC
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 39


  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* - regular trigger source                                                   */
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* - regular trigger edge                                                     */
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR1_EXTEN_0) /* Trigger edge set to rising edge 
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTSEL) << (4U 
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN) << (4U *
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6U) /* Value equivalent to POSITION_VAL(ADC_CFGR1_EXTS
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10U) /* Value equivalent to POSITION_VAL(ADC_CFGR1_EXTE
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* - channel identifier defined by number                                     */
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR1_AWDCH)
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_CHSELR_CHSEL)
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26U)/* Value equivalent to POSITION_VAL(ADC_CHANNEL_ID
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (0x0000001FU) /* Equivalent to shift: (ADC_CHANNEL_NUMBE
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000U) /* Marker of internal channel */
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH)
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 40


  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* channels literals definition.                                              */
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000U)
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (                                                       
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (                                                       
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (                                                       
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (                                        ADC_CFGR1_AWDCH
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (                                        ADC_CFGR1_AWDCH
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (                                        ADC_CFGR1_AWDCH
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (                                        ADC_CFGR1_AWDCH
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (                    ADC_CFGR1_AWDCH_3                  
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (                    ADC_CFGR1_AWDCH_3                  
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (                    ADC_CFGR1_AWDCH_3                  
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (                    ADC_CFGR1_AWDCH_3                  
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (                    ADC_CFGR1_AWDCH_3 | ADC_CFGR1_AWDCH
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (                    ADC_CFGR1_AWDCH_3 | ADC_CFGR1_AWDCH
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (                    ADC_CFGR1_AWDCH_3 | ADC_CFGR1_AWDCH
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (                    ADC_CFGR1_AWDCH_3 | ADC_CFGR1_AWDCH
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR1_AWDCH_4                                      
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR1_AWDCH_4                                      
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR1_AWDCH_4                                      
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* channels literals definition.                                              */
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_CHSELR_CHSEL0)
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_CHSELR_CHSEL1)
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_CHSELR_CHSEL2)
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_CHSELR_CHSEL3)
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_CHSELR_CHSEL4)
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_CHSELR_CHSEL5)
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_CHSELR_CHSEL6)
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_CHSELR_CHSEL7)
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_CHSELR_CHSEL8)
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_CHSELR_CHSEL9)
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_CHSELR_CHSEL10)
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_CHSELR_CHSEL11)
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_CHSELR_CHSEL12)
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_CHSELR_CHSEL13)
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_CHSELR_CHSEL14)
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_CHSELR_CHSEL15)
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_CHSELR_CHSEL16)
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_CHSELR_CHSEL17)
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_CHSELR_CHSEL18)
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*   selection of ADC group (ADC group regular).                              */
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000U)
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET)
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR1_AWDCH | ADC_CFGR1_AWDEN | ADC_CFGR1_AWDSGL)
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 41


 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET)
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* ADC registers bits positions */
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CFGR1_RES_BITOFFSET_POS        ( 3U) /* Value equivalent to POSITION_VAL(ADC_CFGR1_RES)
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CFGR1_AWDSGL_BITOFFSET_POS     (22U) /* Value equivalent to POSITION_VAL(ADC_CFGR1_AWDS
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_TR_HT_BITOFFSET_POS            (16U) /* Value equivalent to POSITION_VAL(ADC_TR_HT) */
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL0_BITOFFSET_POS    ( 0U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL1_BITOFFSET_POS    ( 1U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL2_BITOFFSET_POS    ( 2U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL3_BITOFFSET_POS    ( 3U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL4_BITOFFSET_POS    ( 4U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL5_BITOFFSET_POS    ( 5U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL6_BITOFFSET_POS    ( 6U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL7_BITOFFSET_POS    ( 7U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL8_BITOFFSET_POS    ( 8U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL9_BITOFFSET_POS    ( 9U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL10_BITOFFSET_POS   (10U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL11_BITOFFSET_POS   (11U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL12_BITOFFSET_POS   (12U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL13_BITOFFSET_POS   (13U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL14_BITOFFSET_POS   (14U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL15_BITOFFSET_POS   (15U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL16_BITOFFSET_POS   (16U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL17_BITOFFSET_POS   (17U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL18_BITOFFSET_POS   (18U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* ADC registers bits groups */
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADSTP | ADC_CR_ADSTART | ADC_CR_A
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* ADC internal channels related definitions */
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFFF7BAU)) /* Internal voltage referenc
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define VREFINT_CAL_VREF                   ( 3300U)                    /* Analog voltage reference 
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Temperature sensor */
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFFF7B8U)) /* Internal temperature sens
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFFF7C2U)) /* Internal temperature sens
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (( int32_t)   30)           /* Internal temperature sens
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (( int32_t)  110)           /* Internal temperature sens
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          ( 3300U)                    /* Analog voltage reference 
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 42


 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         is conditioned to ADC state:
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC instance must be disabled.
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         refer to description of each function for setting
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         conditioned to ADC state.
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** typedef struct
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   uint32_t Clock;                       /*!< Set ADC instance clock source and prescaler.
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_CLOCK_
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              @note On this STM32 serie, this parameter has some clo
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                                    ADC clock synchronous (from PCLK) with prescaler
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                                    (APB prescaler configured inside the RCC must be
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              For more details, refer to description of this functio
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (functions with prefix "REG").
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         is conditioned to ADC state:
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC instance must be disabled.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 43


 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         refer to description of each function for setting
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         conditioned to ADC state.
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** typedef struct
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              @note On this STM32 serie, setting trigger source to e
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                                    (several ADC channels enabled in group regular s
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              data preserved or overwritten.
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 44


 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD        /*!< ADC flag ADC analog watchdog 1 *
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWDIE      /*!< ADC interruption ADC analog watc
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* DMA transfer.                                                              */
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000U) /* ADC group regular conversion data reg
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000U)/*!< ADC measurement pathes all disabled */
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #if defined(ADC_CCR_VBATEN)
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)       /*!< ADC measurement path to inte
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #endif
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CLOCK_SOURCE  ADC instance - Clock source
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 45


 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CFGR2_CKMODE_1)                                  /*
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CFGR2_CKMODE_0)                                  /*
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC                 (0x00000000U)                               /*!< ADC asy
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000U)             /*!< ADC resolution 12 bits */
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                  ADC_CFGR1_RES_0) /*!< ADC resolution 
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR1_RES_1                  ) /*!< ADC resolution 
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR1_RES_1 | ADC_CFGR1_RES_0) /*!< ADC resolution 
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000U)/*!< ADC conversion data alignment: right a
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR1_ALIGN)      /*!< ADC conversion data alignmen
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000U)             /*!< No ADC low power mode act
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR1_WAIT)                    /*!< ADC low power m
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_LP_AUTOPOWEROFF             (ADC_CFGR1_AUTOFF)                  /*!< ADC low power m
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF    (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF) /*!< ADC low power m
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001U) /*!< ADC group regular (available on all S
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_BITFIELD ) /*!< A
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_BITFIELD ) /*!< A
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_BITFIELD ) /*!< A
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_BITFIELD ) /*!< A
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_BITFIELD ) /*!< A
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_BITFIELD ) /*!< A
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 46


 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_BITFIELD ) /*!< A
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_BITFIELD ) /*!< A
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_BITFIELD ) /*!< A
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_BITFIELD ) /*!< A
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_BITFIELD) /*!< A
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_BITFIELD) /*!< A
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_BITFIELD) /*!< A
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_BITFIELD) /*!< A
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_BITFIELD) /*!< A
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_BITFIELD) /*!< A
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_BITFIELD) /*!< A
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_BITFIELD) /*!< A
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #if defined(ADC_CCR_VBATEN)
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_BITFIELD) /*!< A
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #endif
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000U)                                           
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO      (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH4       (ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR1_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO     (ADC_CFGR1_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                    ADC_CFGR1_EXTEN_0) /*!< ADC group r
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR1_EXTEN_1                    ) /*!< ADC group r
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR1_EXTEN_1 | ADC_CFGR1_EXTEN_0) /*!< ADC group r
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** * @{
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** */
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000U) /*!< ADC conversions are performed in sing
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR1_CONT)        /*!< ADC conversions are perform
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 47


 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000U)              /*!< ADC conversions are not 
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                   ADC_CFGR1_DMAEN) /*!< ADC conversion
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN) /*!< ADC conversion
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** * @{
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** */
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000U)/*!< ADC group regular behavior in case of 
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR1_OVRMOD)     /*!< ADC group regular behavior i
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_DIRECTION  ADC group regular - Sequencer scan direction
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_FORWARD    (0x00000000U)/*!< ADC group regular sequencer scan direc
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD   (ADC_CFGR1_SCANDIR)    /*!< ADC group regular sequencer 
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000U)                                           
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR1_DISCEN)                                      
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000U)                               /*!< Samplin
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_7CYCLES_5      (ADC_SMPR_SMP_0)                                      /*
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_13CYCLES_5     (ADC_SMPR_SMP_1)                                      /*
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_28CYCLES_5     (ADC_SMPR_SMP_1 | ADC_SMPR_SMP_0)                     /*
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_41CYCLES_5     (ADC_SMPR_SMP_2)                                      /*
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_55CYCLES_5     (ADC_SMPR_SMP_2 | ADC_SMPR_SMP_0)                     /*
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_71CYCLES_5     (ADC_SMPR_SMP_2 | ADC_SMPR_SMP_1)                     /*
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_239CYCLES_5    (ADC_SMPR_SMP_2 | ADC_SMPR_SMP_1 | ADC_SMPR_SMP_0)    /*
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 48


 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000U)                                           
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (                                                    ADC
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)         | ADC
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)         | ADC
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)         | ADC
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)         | ADC
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)         | ADC
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)         | ADC
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)         | ADC
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)         | ADC
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)         | ADC
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)         | ADC
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)         | ADC
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)         | ADC
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)         | ADC
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)         | ADC
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)         | ADC
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)         | ADC
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)         | ADC
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)         | ADC
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) | ADC
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) | ADC
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #if defined(ADC_CCR_VBATEN)
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)         | ADC
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT       & ADC_CHANNEL_ID_MASK) | ADC
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #endif
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR_HT            )     /*!< ADC analog watchdog thr
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (            ADC_TR_LT)     /*!< ADC analog watchdog thr
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR_HT | ADC_TR_LT)     /*!< ADC analog watchdog bot
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Only ADC IP HW delays are defined in ADC LL driver driver,
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         not timeout values.
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         above each literal definition.
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Note: Only ADC IP HW delays are defined in ADC LL driver driver,           */
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*       not timeout values.                                                  */
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 49


 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*       STM32 serie:                                                         */
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 83/fADC.                    */
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*         cycles                                                             */
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*         configuration.                                                     */
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* parameter "tSTART").                                                       */
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Unit: us                                                                   */
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US       (  10U)  /*!< Delay for internal voltage reference stabi
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* parameter "tSTART").                                                       */
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Unit: us                                                                   */
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US    (  10U)  /*!< Delay for temperature sensor stabilization
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Note: On this STM32 serie, a minimum number of ADC clock cycles            */
 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES ( 2U)  /*!< Delay required between ADC end of calibrat
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Write a value in ADC register
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __REG__ Register to be written
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 50


 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Read a value in ADC register
 672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __REG__ Register to be read
 674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Register value
 675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
 679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
 682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
 683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
 687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
 688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Example:
 689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
 690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           will return decimal number "4".
 691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
 692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         number is returned, either defined with number
 693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
 694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
 696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
 697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
 698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
 699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
 701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
 702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
 703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
 704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
 705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
 706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
 707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
 708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
 709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
 710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
 711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
 712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
 713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18         (1)
 714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
 715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
 716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (1)
 717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         
 718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (1) On STM32F0, parameter not available on all devices: all devices except STM32F030x6,
 719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
 720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                                
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 51


 722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0U)                                          
 723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****     ? (                                                                                            
 724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS         
 725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****       )                                                                                            
 726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****       :                                                                                            
 727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****       (                                                                                            
 728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****        (((__CHANNEL__) & ADC_CHSELR_CHSEL0) == ADC_CHSELR_CHSEL0) ? (0U) :                         
 729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****         (                                                                                          
 730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****          (((__CHANNEL__) & ADC_CHSELR_CHSEL1) == ADC_CHSELR_CHSEL1) ? (1U) :                       
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****           (                                                                                        
 732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****            (((__CHANNEL__) & ADC_CHSELR_CHSEL2) == ADC_CHSELR_CHSEL2) ? (2U) :                     
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****             (                                                                                      
 734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****              (((__CHANNEL__) & ADC_CHSELR_CHSEL3) == ADC_CHSELR_CHSEL3) ? (3U) :                   
 735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****               (                                                                                    
 736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                (((__CHANNEL__) & ADC_CHSELR_CHSEL4) == ADC_CHSELR_CHSEL4) ? (4U) :                 
 737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                 (                                                                                  
 738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                  (((__CHANNEL__) & ADC_CHSELR_CHSEL5) == ADC_CHSELR_CHSEL5) ? (5U) :               
 739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                   (                                                                                
 740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                    (((__CHANNEL__) & ADC_CHSELR_CHSEL6) == ADC_CHSELR_CHSEL6) ? (6U) :             
 741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                     (                                                                              
 742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                      (((__CHANNEL__) & ADC_CHSELR_CHSEL7) == ADC_CHSELR_CHSEL7) ? (7U) :           
 743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                       (                                                                            
 744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                        (((__CHANNEL__) & ADC_CHSELR_CHSEL8) == ADC_CHSELR_CHSEL8) ? (8U) :         
 745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                         (                                                                          
 746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                          (((__CHANNEL__) & ADC_CHSELR_CHSEL9) == ADC_CHSELR_CHSEL9) ? (9U) :       
 747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                           (                                                                        
 748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                            (((__CHANNEL__) & ADC_CHSELR_CHSEL10) == ADC_CHSELR_CHSEL10) ? (10U) :  
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                             (                                                                      
 750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                              (((__CHANNEL__) & ADC_CHSELR_CHSEL11) == ADC_CHSELR_CHSEL11) ? (11U) :
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                               (                                                                    
 752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                (((__CHANNEL__) & ADC_CHSELR_CHSEL12) == ADC_CHSELR_CHSEL12) ? (12U)
 753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                 (                                                                  
 754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                  (((__CHANNEL__) & ADC_CHSELR_CHSEL13) == ADC_CHSELR_CHSEL13) ? (13
 755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                   (                                                                
 756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                    (((__CHANNEL__) & ADC_CHSELR_CHSEL14) == ADC_CHSELR_CHSEL14) ? (
 757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                     (                                                              
 758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                      (((__CHANNEL__) & ADC_CHSELR_CHSEL15) == ADC_CHSELR_CHSEL15) ?
 759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                       (                                                            
 760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                        (((__CHANNEL__) & ADC_CHSELR_CHSEL16) == ADC_CHSELR_CHSEL16)
 761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                         (                                                          
 762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                          (((__CHANNEL__) & ADC_CHSELR_CHSEL17) == ADC_CHSELR_CHSEL1
 763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                           (                                                        
 764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                            (((__CHANNEL__) & ADC_CHSELR_CHSEL18) == ADC_CHSELR_CHSE
 765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                             (0U)                                                   
 766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                           )                                                        
 767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                         )                                                          
 768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                       )                                                            
 769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                     )                                                              
 770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                   )                                                                
 771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                 )                                                                  
 772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                               )                                                                    
 773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                             )                                                                      
 774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                           )                                                                        
 775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                         )                                                                          
 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                       )                                                                            
 777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                     )                                                                              
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                   )                                                                                
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 52


 779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                 )                                                                                  
 780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****               )                                                                                    
 781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****             )                                                                                      
 782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****           )                                                                                        
 783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****         )                                                                                          
 784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****       )                                                                                            
 785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   )
 786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
 789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         from number in decimal format.
 790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Example:
 791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
 792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
 793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
 795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
 796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
 797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
 798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
 799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
 800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
 801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
 802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
 803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
 804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
 805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
 806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
 807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
 808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
 809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
 810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
 811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
 812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
 813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18         (1)
 814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT       (2)
 815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR    (2)
 816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (1)(2)
 817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         
 818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (1) On STM32F0, parameter not available on all devices: all devices except STM32F030x6,
 819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
 820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
 821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
 822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                         \
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   (                                                                            \
 825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****    ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) |                 \
 826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****    (ADC_CHSELR_CHSEL0 << (__DECIMAL_NB__))                                     \
 827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   )
 828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
 831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
 832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
 833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - ADC internal channel:
 834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 53


 836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
 837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
 838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
 839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
 840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
 841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
 842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         returned from ADC registers,
 843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         because internal and external channels share the same channel
 844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
 845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         parameters definitions of driver.
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
 848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
 849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
 850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
 851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
 852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
 853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
 854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
 855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
 856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
 857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
 858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
 859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
 860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
 861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
 862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
 863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
 864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
 865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18         (1)
 866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
 867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
 868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (1)
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         
 870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (1) On STM32F0, parameter not available on all devices: all devices except STM32F030x6,
 871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
 872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
 873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
 875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0U)
 876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
 879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
 880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
 881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
 882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
 883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
 884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
 885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
 886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         a value defined from parameter definition of
 887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
 888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
 889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         from ADC registers.
 890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
 892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 54


 893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
 894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
 895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
 896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
 897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
 898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
 899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
 900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
 901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
 902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
 903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
 904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
 905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
 906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
 907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
 908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
 909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18         (1)
 910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
 911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
 912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (1)
 913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         
 914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (1) On STM32F0, parameter not available on all devices: all devices except STM32F030x6,
 915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
 916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
 917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
 918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
 919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
 920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
 921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
 922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
 923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
 924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
 925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
 926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
 927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
 928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
 929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
 930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
 931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
 932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
 933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
 934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
 935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
 937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
 941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
 942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
 943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
 944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
 945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
 946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
 947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         or a value from functions where a channel number is
 948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         returned from ADC registers,
 949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         because internal and external channels share the same channel
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 55


 950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
 951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         parameters definitions of driver.
 952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
 953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
 955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
 956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (1)
 957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         
 958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (1) On STM32F0, parameter not available on all devices: all devices except STM32F030x6,
 959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
 960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
 961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
 962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #if defined(ADC_CCR_VBATEN)
 963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
 964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   (                                                                            \
 965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
 966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
 967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                     \
 968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   )
 969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #else
 970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
 971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   (                                                                            \
 972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
 973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)                               \
 974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   )
 975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #endif
 976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
 977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
 978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
 979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
 980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         from sequencer channel and groups definition.
 981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
 982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Example:
 983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
 984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
 985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
 986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
 988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
 989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
 990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
 991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
 992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
 993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
 994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
 995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
 996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
 997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
 998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
 999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18         (1)
1006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT       (2)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 56


1007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR    (2)
1008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (1)(2)
1009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         
1010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (1) On STM32F0, parameter not available on all devices: all devices except STM32F030x6,
1011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
1019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG 
1020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG 
1021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG 
1022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG 
1023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG 
1024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG 
1025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG 
1026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG 
1027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG 
1028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG 
1029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
1030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
1031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
1032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
1033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
1034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
1035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
1036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
1037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (1)
1038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
1039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
1040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (1)
1041:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         
1042:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (1) On STM32F0, parameter not available on all devices: all devices except STM32F030x6,
1043:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1044:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1045:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR1_AWDEN | ADC_CFGR1_AWDSGL)
1046:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1047:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1048:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1049:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1050:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         different of 12 bits.
1051:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1052:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1053:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1054:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1055:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1056:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *            (< ADCx param >,
1057:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *            );
1059:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1060:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1061:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1062:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1063:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 57


1064:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1065:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1066:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1067:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1068:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1071:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is 
1073:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         different of 12 bits.
1074:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1075:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1076:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1077:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1078:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1079:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1080:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *            );
1081:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1082:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1083:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1084:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1085:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1086:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1087:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1088:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1089:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1090:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1091:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1093:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1094:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
1095:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1096:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1097:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
1098:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1099:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
1100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__) \
1105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   (((__AWD_THRESHOLD_TYPE__) == LL_ADC_AWD_THRESHOLD_LOW)                                 \
1106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****     ? (                                                                                   \
1107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****        (__AWD_THRESHOLDS__) & LL_ADC_AWD_THRESHOLD_LOW                                    \
1108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****       )                                                                                   \
1109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****       :                                                                                   \
1110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****       (                                                                                   \
1111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****        ((__AWD_THRESHOLDS__) >> ADC_TR_HT_BITOFFSET_POS) & LL_ADC_AWD_THRESHOLD_LOW       \
1112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****       )                                                                                   \
1113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   )
1114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
1117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
1118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
1119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
1120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 58


1121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
1123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval ADC common register instance
1124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
1126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   (ADC1_COMMON)
1127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
1130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC common instance are disabled.
1131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
1132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
1133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
1136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
1137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
1138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
1139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
1141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         are disabled.
1142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
1143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         is enabled.
1144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
1146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   LL_ADC_IsEnabled(ADC1)
1147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
1150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
1151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
1152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
1153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (refer to reference manual).
1154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
1162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   (0xFFFU >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U)))
1163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
1166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         a resolution to another resolution.
1167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted 
1168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of to the data to be converted
1169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
1175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 59


1178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
1181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__, __ADC_RESOLUTION_CURRENT__, __ADC_RESOLUTION_TAR
1183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   (((__DATA__)                                                                 \
1184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U)))   \
1185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U))      \
1186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   )
1187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
1190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
1191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
1195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
1196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                       (unit: digital value).
1197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
1205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                       __ADC_DATA__,\
1206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                      \
1207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
1208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****    / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
1209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   )
1210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
1213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
1214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         reference VrefInt.
1215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
1216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         stored in system memory for each device during production.
1217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
1218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         connected to pin Vref+.
1219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
1220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
1221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, calibration data of internal voltage reference
1222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
1223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         internal voltage reference VrefInt.
1225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
1228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
1229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 60


1235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
1237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                   \
1238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
1239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****     / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                 \
1240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                        (__ADC_RESOLUTION__),                   \
1241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                        LL_ADC_RESOLUTION_12B)                  \
1242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   )
1243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
1248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         stored in system memory for each device during production.
1249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Calculation formula:
1250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
1251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
1252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
1253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
1254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
1255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
1256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
1257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
1258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
1259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
1260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
1261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                  parameters are correct (address and data).
1262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
1263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
1264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                  less accurate than calibrated values),
1265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
1266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, calibration data of temperature sensor
1272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
1273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         temperature sensor.
1275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
1278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
1279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
1280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
1281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                                 sensor voltage has been measured.
1282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
1290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
1291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                   __ADC_RESOLUTION__)                              \
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 61


1292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
1293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                                     (__ADC_RESOLUTION__),          \
1294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                                     LL_ADC_RESOLUTION_12B)         \
1295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                    * (__VREFANALOG_VOLTAGE__))                                     \
1296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                   / TEMPSENSOR_CAL_VREFANALOG)                                     \
1297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****         - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
1298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****      ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
1299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****     ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
1300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****    ) + TEMPSENSOR_CAL1_TEMP                                                        \
1301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   )
1302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
1307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (refer to device datasheet).
1308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Calculation formula:
1309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
1310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
1311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
1312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                                   (unit: digital value)
1313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
1314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
1315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
1316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
1317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
1318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                  of the current device has characteristics in line with
1319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                  datasheet typical values.
1320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
1321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
1322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
1323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
1324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12bits
1330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
1331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
1332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
1333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                                       On STM32F0, refer to device datasheet parameter "Avg_Slop
1334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
1335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                                       On STM32F0, refer to device datasheet parameter "V30" (co
1336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
1337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
1338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
1339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
1340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
1348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 62


1349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
1350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
1351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
1352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                                              __ADC_RESOLUTION__)               \
1353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   ((( (                                                                        \
1354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****        (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
1355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                  * 1000)                                                       \
1356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****        -                                                                       \
1357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****        (int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
1358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                   / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
1359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                  * 1000)                                                       \
1360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****       )                                                                        \
1361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****     ) / (__TEMPSENSOR_TYP_AVGSLOPE__)                                          \
1362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****    ) + (__TEMPSENSOR_CALX_TEMP__)                                              \
1363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   )
1364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
1367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
1371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
1375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
1376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
1377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
1380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
1381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
1383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
1384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
1385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
1388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
1389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
1390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   These ADC registers are data registers:
1391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
1392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
1393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
1394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
1395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Example:
1396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
1397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
1398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
1399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
1400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
1401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
1402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
1403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
1404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
1405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_DMA_GetRegAddr
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 63


1406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
1407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
1408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
1409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval ADC register address
1410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
 269              		.loc 4 1411 26 view .LVU68
 270              	.LBB69:
1412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
1413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* Prevent unused argument compilation warning */
1414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   (void)Register;
 271              		.loc 4 1414 3 view .LVU69
1415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* Retrieve address of register DR */
1417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return (uint32_t)&(ADCx->DR);
 272              		.loc 4 1417 3 view .LVU70
 273              		.loc 4 1417 20 is_stmt 0 view .LVU71
 274 00b6 274A     		ldr	r2, .L3+28
 275              	.LVL16:
 276              		.loc 4 1417 20 view .LVU72
 277              	.LBE69:
 278              	.LBE68:
 279              	.LBB70:
 280              	.LBI70:
1097:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1098:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1099:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set the Peripheral address.
1101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_SetPeriphAddress
1104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  PeriphAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphAd
 281              		.loc 3 1116 22 is_stmt 1 view .LVU73
 282              	.LBB71:
1117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
 283              		.loc 3 1118 3 view .LVU74
 284 00b8 9A60     		str	r2, [r3, #8]
 285              	.LVL17:
 286              		.loc 3 1118 3 is_stmt 0 view .LVU75
 287              	.LBE71:
 288              	.LBE70:
  73:Src/adc.c     ****   LL_DMA_EnableIT_TC(DMA1,LL_DMA_CHANNEL_1);
 289              		.loc 1 73 3 is_stmt 1 view .LVU76
 290              	.LBB72:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 64


 291              	.LBI72:
1119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Memory address.
1123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_GetMemoryAddress
1125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Peripheral address.
1143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_GetPeriphAddress
1145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set the Memory to Memory Source address.
1163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_SetM2MSrcAddress
1166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 65


1175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetM2MSrcAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
1181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set the Memory to Memory Destination address.
1185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_SetM2MDstAddress
1188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetM2MDstAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
1203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get the Memory to Memory Source address.
1207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_GetM2MSrcAddress
1209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetM2MSrcAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get the Memory to Memory Destination address.
1227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_GetM2MDstAddress
1229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 66


1232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetM2MDstAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if (defined(DMA1_CSELR_DEFAULT)||defined(DMA2_CSELR_DEFAULT))
1246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set DMA request for DMA instance on Channel x.
1248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note   Please refer to Reference Manual to get the available mapping of Request value link to 
1249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CSELR        C1S           LL_DMA_SetPeriphRequest\n
1250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C2S           LL_DMA_SetPeriphRequest\n
1251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C3S           LL_DMA_SetPeriphRequest\n
1252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C4S           LL_DMA_SetPeriphRequest\n
1253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C5S           LL_DMA_SetPeriphRequest\n
1254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C6S           LL_DMA_SetPeriphRequest\n
1255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C7S           LL_DMA_SetPeriphRequest
1256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  PeriphRequest This parameter can be one of the following values:
1266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_0
1267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_1
1268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_2
1269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_3
1270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_4
1271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_5
1272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_6
1273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_7
1274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_8
1275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_9
1276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_10
1277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_11
1278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_12
1279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_13
1280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_14
1281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_15
1282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphRequest(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphRe
1285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(DMAx->CSELR,
1287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              DMA_CSELR_C1S << ((Channel - 1U) * 4U), PeriphRequest << DMA_POSITION_CSELR_CXS);
1288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 67


1289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get DMA request for DMA instance on Channel x.
1292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CSELR        C1S           LL_DMA_GetPeriphRequest\n
1293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C2S           LL_DMA_GetPeriphRequest\n
1294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C3S           LL_DMA_GetPeriphRequest\n
1295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C4S           LL_DMA_GetPeriphRequest\n
1296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C5S           LL_DMA_GetPeriphRequest\n
1297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C6S           LL_DMA_GetPeriphRequest\n
1298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CSELR        C7S           LL_DMA_GetPeriphRequest
1299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
1309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_0
1310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_1
1311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_2
1312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_3
1313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_4
1314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_5
1315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_6
1316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_7
1317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_8
1318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_9
1319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_10
1320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_11
1321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_12
1322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_13
1323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_14
1324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_15
1325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphRequest(DMA_TypeDef *DMAx, uint32_t Channel)
1327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->CSELR,
1329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CSELR_C1S << ((Channel - 1U) * 4U)) >> DMA_POSITION_CSELR_CXS);
1330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
1335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EF_FLAG_Management FLAG_Management
1338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
1339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 1 global interrupt flag.
1343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          GIF1          LL_DMA_IsActiveFlag_GI1
1344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 68


1346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI1(DMA_TypeDef *DMAx)
1348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_GIF1) == (DMA_ISR_GIF1));
1350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 2 global interrupt flag.
1354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          GIF2          LL_DMA_IsActiveFlag_GI2
1355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI2(DMA_TypeDef *DMAx)
1359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_GIF2) == (DMA_ISR_GIF2));
1361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 3 global interrupt flag.
1365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          GIF3          LL_DMA_IsActiveFlag_GI3
1366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI3(DMA_TypeDef *DMAx)
1370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_GIF3) == (DMA_ISR_GIF3));
1372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 4 global interrupt flag.
1376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          GIF4          LL_DMA_IsActiveFlag_GI4
1377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI4(DMA_TypeDef *DMAx)
1381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_GIF4) == (DMA_ISR_GIF4));
1383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 5 global interrupt flag.
1387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          GIF5          LL_DMA_IsActiveFlag_GI5
1388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI5(DMA_TypeDef *DMAx)
1392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_GIF5) == (DMA_ISR_GIF5));
1394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
1397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 6 global interrupt flag.
1399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          GIF6          LL_DMA_IsActiveFlag_GI6
1400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 69


1403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI6(DMA_TypeDef *DMAx)
1404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_GIF6) == (DMA_ISR_GIF6));
1406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
1410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 7 global interrupt flag.
1412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          GIF7          LL_DMA_IsActiveFlag_GI7
1413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI7(DMA_TypeDef *DMAx)
1417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_GIF7) == (DMA_ISR_GIF7));
1419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 1 transfer complete flag.
1424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TCIF1         LL_DMA_IsActiveFlag_TC1
1425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC1(DMA_TypeDef *DMAx)
1429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TCIF1) == (DMA_ISR_TCIF1));
1431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 2 transfer complete flag.
1435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TCIF2         LL_DMA_IsActiveFlag_TC2
1436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC2(DMA_TypeDef *DMAx)
1440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TCIF2) == (DMA_ISR_TCIF2));
1442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 3 transfer complete flag.
1446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TCIF3         LL_DMA_IsActiveFlag_TC3
1447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC3(DMA_TypeDef *DMAx)
1451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TCIF3) == (DMA_ISR_TCIF3));
1453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 4 transfer complete flag.
1457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TCIF4         LL_DMA_IsActiveFlag_TC4
1458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 70


1460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC4(DMA_TypeDef *DMAx)
1462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TCIF4) == (DMA_ISR_TCIF4));
1464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 5 transfer complete flag.
1468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TCIF5         LL_DMA_IsActiveFlag_TC5
1469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC5(DMA_TypeDef *DMAx)
1473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TCIF5) == (DMA_ISR_TCIF5));
1475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
1478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 6 transfer complete flag.
1480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TCIF6         LL_DMA_IsActiveFlag_TC6
1481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC6(DMA_TypeDef *DMAx)
1485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TCIF6) == (DMA_ISR_TCIF6));
1487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
1491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 7 transfer complete flag.
1493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TCIF7         LL_DMA_IsActiveFlag_TC7
1494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC7(DMA_TypeDef *DMAx)
1498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TCIF7) == (DMA_ISR_TCIF7));
1500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 1 half transfer flag.
1505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          HTIF1         LL_DMA_IsActiveFlag_HT1
1506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT1(DMA_TypeDef *DMAx)
1510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_HTIF1) == (DMA_ISR_HTIF1));
1512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 2 half transfer flag.
1516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          HTIF2         LL_DMA_IsActiveFlag_HT2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 71


1517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT2(DMA_TypeDef *DMAx)
1521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_HTIF2) == (DMA_ISR_HTIF2));
1523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 3 half transfer flag.
1527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          HTIF3         LL_DMA_IsActiveFlag_HT3
1528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT3(DMA_TypeDef *DMAx)
1532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_HTIF3) == (DMA_ISR_HTIF3));
1534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 4 half transfer flag.
1538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          HTIF4         LL_DMA_IsActiveFlag_HT4
1539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT4(DMA_TypeDef *DMAx)
1543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_HTIF4) == (DMA_ISR_HTIF4));
1545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 5 half transfer flag.
1549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          HTIF5         LL_DMA_IsActiveFlag_HT5
1550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT5(DMA_TypeDef *DMAx)
1554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_HTIF5) == (DMA_ISR_HTIF5));
1556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
1559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 6 half transfer flag.
1561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          HTIF6         LL_DMA_IsActiveFlag_HT6
1562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT6(DMA_TypeDef *DMAx)
1566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_HTIF6) == (DMA_ISR_HTIF6));
1568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
1572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 7 half transfer flag.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 72


1574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          HTIF7         LL_DMA_IsActiveFlag_HT7
1575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT7(DMA_TypeDef *DMAx)
1579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_HTIF7) == (DMA_ISR_HTIF7));
1581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 1 transfer error flag.
1586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TEIF1         LL_DMA_IsActiveFlag_TE1
1587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE1(DMA_TypeDef *DMAx)
1591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TEIF1) == (DMA_ISR_TEIF1));
1593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 2 transfer error flag.
1597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TEIF2         LL_DMA_IsActiveFlag_TE2
1598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE2(DMA_TypeDef *DMAx)
1602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TEIF2) == (DMA_ISR_TEIF2));
1604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 3 transfer error flag.
1608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TEIF3         LL_DMA_IsActiveFlag_TE3
1609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE3(DMA_TypeDef *DMAx)
1613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TEIF3) == (DMA_ISR_TEIF3));
1615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 4 transfer error flag.
1619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TEIF4         LL_DMA_IsActiveFlag_TE4
1620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE4(DMA_TypeDef *DMAx)
1624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TEIF4) == (DMA_ISR_TEIF4));
1626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 5 transfer error flag.
1630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TEIF5         LL_DMA_IsActiveFlag_TE5
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 73


1631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE5(DMA_TypeDef *DMAx)
1635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TEIF5) == (DMA_ISR_TEIF5));
1637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
1640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 6 transfer error flag.
1642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TEIF6         LL_DMA_IsActiveFlag_TE6
1643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE6(DMA_TypeDef *DMAx)
1647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TEIF6) == (DMA_ISR_TEIF6));
1649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
1653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Channel 7 transfer error flag.
1655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll ISR          TEIF7         LL_DMA_IsActiveFlag_TE7
1656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE7(DMA_TypeDef *DMAx)
1660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TEIF7) == (DMA_ISR_TEIF7));
1662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 1 global interrupt flag.
1667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note Do not Clear Channel 1 global interrupt flag when the channel in ON.
1668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC1, LL_DMA_ClearFlag_HT1,
1670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     LL_DMA_ClearFlag_TE1. bug id 2.4.1 in Product Errata Sheet.
1671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CGIF1         LL_DMA_ClearFlag_GI1
1672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI1(DMA_TypeDef *DMAx)
1676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF1);
1678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 2 global interrupt flag.
1682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note Do not Clear Channel 2 global interrupt flag when the channel in ON.
1683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC2, LL_DMA_ClearFlag_HT2,
1685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     LL_DMA_ClearFlag_TE2. bug id 2.4.1 in Product Errata Sheet.
1686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CGIF2         LL_DMA_ClearFlag_GI2
1687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 74


1688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI2(DMA_TypeDef *DMAx)
1691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF2);
1693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 3 global interrupt flag.
1697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note Do not Clear Channel 3 global interrupt flag when the channel in ON.
1698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC3, LL_DMA_ClearFlag_HT3,
1700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     LL_DMA_ClearFlag_TE3. bug id 2.4.1 in Product Errata Sheet.
1701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CGIF3         LL_DMA_ClearFlag_GI3
1702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI3(DMA_TypeDef *DMAx)
1706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF3);
1708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 4 global interrupt flag.
1712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note Do not Clear Channel 4 global interrupt flag when the channel in ON.
1713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC4, LL_DMA_ClearFlag_HT4,
1715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     LL_DMA_ClearFlag_TE4. bug id 2.4.1 in Product Errata Sheet.
1716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CGIF4         LL_DMA_ClearFlag_GI4
1717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI4(DMA_TypeDef *DMAx)
1721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF4);
1723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 5 global interrupt flag.
1727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note Do not Clear Channel 5 global interrupt flag when the channel in ON.
1728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC5, LL_DMA_ClearFlag_HT5,
1730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     LL_DMA_ClearFlag_TE5. bug id 2.4.1 in Product Errata Sheet.
1731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CGIF5         LL_DMA_ClearFlag_GI5
1732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI5(DMA_TypeDef *DMAx)
1736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF5);
1738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
1741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 6 global interrupt flag.
1743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note Do not Clear Channel 6 global interrupt flag when the channel in ON.
1744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 75


1745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC6, LL_DMA_ClearFlag_HT6,
1746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     LL_DMA_ClearFlag_TE6. bug id 2.4.1 in Product Errata Sheet.
1747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CGIF6         LL_DMA_ClearFlag_GI6
1748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI6(DMA_TypeDef *DMAx)
1752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF6);
1754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
1758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 7 global interrupt flag.
1760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note Do not Clear Channel 7 global interrupt flag when the channel in ON.
1761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC7, LL_DMA_ClearFlag_HT7,
1763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****     LL_DMA_ClearFlag_TE7. bug id 2.4.1 in Product Errata Sheet.
1764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CGIF7         LL_DMA_ClearFlag_GI7
1765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI7(DMA_TypeDef *DMAx)
1769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF7);
1771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 1  transfer complete flag.
1776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF1        LL_DMA_ClearFlag_TC1
1777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC1(DMA_TypeDef *DMAx)
1781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF1);
1783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 2  transfer complete flag.
1787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF2        LL_DMA_ClearFlag_TC2
1788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC2(DMA_TypeDef *DMAx)
1792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF2);
1794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 3  transfer complete flag.
1798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF3        LL_DMA_ClearFlag_TC3
1799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 76


1802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC3(DMA_TypeDef *DMAx)
1803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF3);
1805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 4  transfer complete flag.
1809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF4        LL_DMA_ClearFlag_TC4
1810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC4(DMA_TypeDef *DMAx)
1814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF4);
1816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 5  transfer complete flag.
1820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF5        LL_DMA_ClearFlag_TC5
1821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC5(DMA_TypeDef *DMAx)
1825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF5);
1827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
1830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 6  transfer complete flag.
1832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF6        LL_DMA_ClearFlag_TC6
1833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC6(DMA_TypeDef *DMAx)
1837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF6);
1839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
1843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 7  transfer complete flag.
1845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF7        LL_DMA_ClearFlag_TC7
1846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC7(DMA_TypeDef *DMAx)
1850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF7);
1852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 1  half transfer flag.
1857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF1        LL_DMA_ClearFlag_HT1
1858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 77


1859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT1(DMA_TypeDef *DMAx)
1862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF1);
1864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 2  half transfer flag.
1868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF2        LL_DMA_ClearFlag_HT2
1869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT2(DMA_TypeDef *DMAx)
1873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF2);
1875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 3  half transfer flag.
1879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF3        LL_DMA_ClearFlag_HT3
1880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT3(DMA_TypeDef *DMAx)
1884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF3);
1886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 4  half transfer flag.
1890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF4        LL_DMA_ClearFlag_HT4
1891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT4(DMA_TypeDef *DMAx)
1895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF4);
1897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 5  half transfer flag.
1901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF5        LL_DMA_ClearFlag_HT5
1902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT5(DMA_TypeDef *DMAx)
1906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF5);
1908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
1911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 6  half transfer flag.
1913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF6        LL_DMA_ClearFlag_HT6
1914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 78


1916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT6(DMA_TypeDef *DMAx)
1918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF6);
1920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
1924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 7  half transfer flag.
1926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF7        LL_DMA_ClearFlag_HT7
1927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT7(DMA_TypeDef *DMAx)
1931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF7);
1933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
1935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 1 transfer error flag.
1938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF1        LL_DMA_ClearFlag_TE1
1939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE1(DMA_TypeDef *DMAx)
1943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF1);
1945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 2 transfer error flag.
1949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF2        LL_DMA_ClearFlag_TE2
1950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE2(DMA_TypeDef *DMAx)
1954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF2);
1956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 3 transfer error flag.
1960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF3        LL_DMA_ClearFlag_TE3
1961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE3(DMA_TypeDef *DMAx)
1965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF3);
1967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 4 transfer error flag.
1971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF4        LL_DMA_ClearFlag_TE4
1972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 79


1973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE4(DMA_TypeDef *DMAx)
1976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF4);
1978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 5 transfer error flag.
1982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF5        LL_DMA_ClearFlag_TE5
1983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE5(DMA_TypeDef *DMAx)
1987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
1988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF5);
1989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
1990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
1991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
1992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
1993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 6 transfer error flag.
1994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF6        LL_DMA_ClearFlag_TE6
1995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
1997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
1998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE6(DMA_TypeDef *DMAx)
1999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
2000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF6);
2001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
2002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
2003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
2004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
2005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
2006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Clear Channel 7 transfer error flag.
2007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF7        LL_DMA_ClearFlag_TE7
2008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
2010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
2011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE7(DMA_TypeDef *DMAx)
2012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
2013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF7);
2014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
2015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
2016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
2017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
2018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
2019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
2020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
2021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EF_IT_Management IT_Management
2022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
2023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
2024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
2025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Enable Transfer complete interrupt.
2026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          TCIE          LL_DMA_EnableIT_TC
2027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
2029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 80


2030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
2031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
2032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
2033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
2034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
2035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
2036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
2037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
2038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableIT_TC(DMA_TypeDef *DMAx, uint32_t Channel)
 292              		.loc 3 2038 22 view .LVU77
 293              	.LBB73:
2039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
2040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])))-
 294              		.loc 3 2040 3 view .LVU78
 295 00ba 1A68     		ldr	r2, [r3]
 296 00bc 0221     		movs	r1, #2
 297 00be 0A43     		orrs	r2, r1
 298 00c0 1A60     		str	r2, [r3]
 299              	.LVL18:
 300              		.loc 3 2040 3 is_stmt 0 view .LVU79
 301              	.LBE73:
 302              	.LBE72:
  74:Src/adc.c     ****   
  75:Src/adc.c     ****   /* USER CODE END ADC_Init 1 */
  76:Src/adc.c     **** 
  77:Src/adc.c     ****   /** Configure Regular Channel
  78:Src/adc.c     ****   */
  79:Src/adc.c     ****   LL_ADC_REG_SetSequencerChAdd(ADC1, LL_ADC_CHANNEL_4);
 303              		.loc 1 79 3 is_stmt 1 view .LVU80
 304              	.LBB74:
 305              	.LBI74:
1418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
1419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
1422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
1425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
1426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to internal
1430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
1431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   One or several values can be selected.
1432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
1435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
1436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
1437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         temperature sensor stabilization time.
1438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Refer to device datasheet.
1439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
1440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
1441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
1442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         For ADC conversion of internal channels,
1443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         a sampling time minimum value is required.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 81


1444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Refer to device datasheet.
1445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
1447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
1452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
1453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
1454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
1457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT (1)
1461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         
1462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (1) On STM32F0, parameter not available on all devices: all devices except STM32F030x6,
1463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
1464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
1466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
1467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #if defined(ADC_CCR_VBATEN)
1468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
1469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #else
1470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN, PathInternal);
1471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #endif
1472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
1473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
1476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
1477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   One or several values can be selected.
1478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
1481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
1482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
1483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
1486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT (1)
1490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         
1491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (1) On STM32F0, parameter not available on all devices: all devices except STM32F030x6,
1492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
1494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
1495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #if defined(ADC_CCR_VBATEN)
1496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
1497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #else
1498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN));
1499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #endif
1500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 82


1501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
1504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
1507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
1508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Set ADC instance clock source and prescaler.
1512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
1514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be disabled.
1515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_SetClock
1516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
1517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ClockSource This parameter can be one of the following values:
1518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
1519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
1520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
1521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         
1522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (1) On this STM32 serie, synchronous clock has no prescaler.
1523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
1524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetClock(ADC_TypeDef *ADCx, uint32_t ClockSource)
1526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
1527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_CKMODE, ClockSource);
1528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
1529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Get ADC instance clock source and prescaler.
1532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_GetClock
1533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
1534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
1536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
1537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
1538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         
1539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (1) On this STM32 serie, synchronous clock has no prescaler.
1540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetClock(ADC_TypeDef *ADCx)
1542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
1543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_CKMODE));
1544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
1545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Set ADC resolution.
1548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
1552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         on group regular.
1554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_SetResolution
1555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
1556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
1557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 83


1558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
1562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
1564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
1565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_RES, Resolution);
1566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
1567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Get ADC resolution.
1570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_GetResolution
1573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
1574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
1581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
1582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_RES));
1583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
1584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
1587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
1588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
1591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         on group regular.
1593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_SetDataAlignment
1594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
1595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
1596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
1597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
1598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
1599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
1601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
1602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_ALIGN, DataAlignment);
1603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
1604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
1607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
1608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_GetDataAlignment
1610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
1611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
1613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
1614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 84


1615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
1616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
1617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_ALIGN));
1618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
1619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Set ADC low power mode.
1622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
1623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
1624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
1625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           in order to reduce power consumption.
1626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
1627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
1628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           has been retrieved by user software.
1629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
1630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           other conversion.
1631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
1632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
1633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
1634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           applications.
1635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           How to use this low power mode:
1636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           - Do not use with interruption or DMA since these modes
1637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             have to clear immediately the EOC flag to free the
1638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             IRQ vector sequencer.
1639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
1640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
1641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
1642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
1643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             ADC conversion start.
1644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
1645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_MODE_AUTOOFF is available):
1646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
1647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
1648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
1649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
1650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
1651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
1652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         of delay during which ADC was idle.
1653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
1654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
1655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC channel.
1656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
1658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         on group regular.
1660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_SetLowPowerMode\n
1661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_SetLowPowerMode
1662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
1663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
1664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
1665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
1666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
1667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
1668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
1669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
1671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 85


1672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF), LowPowerMode);
1673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
1674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Get ADC low power mode:
1677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
1678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
1679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
1680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           in order to reduce power consumption.
1681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
1682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
1683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           has been retrieved by user software.
1684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
1685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           other conversion.
1686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
1687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
1688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
1689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           applications.
1690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           How to use this low power mode:
1691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           - Do not use with interruption or DMA since these modes
1692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             have to clear immediately the EOC flag to free the
1693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             IRQ vector sequencer.
1694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
1695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
1696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
1697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
1698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             ADC conversion start.
1699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
1700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_MODE_AUTOOFF is available):
1701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
1702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
1703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
1704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
1705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
1706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
1707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         of delay during which ADC was idle.
1708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
1709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
1710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC channel.
1711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_GetLowPowerMode\n
1712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_GetLowPowerMode
1713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
1714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
1716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
1717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
1718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
1719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
1721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
1722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF)));
1723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
1724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Set sampling time common to a group of channels.
1727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
1728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, sampling time scope is on ADC instance:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 86


1729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Sampling time common to all channels.
1730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
1731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
1732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         converted:
1733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
1734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
1735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         setting).
1736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
1737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         TS_temp, ...).
1738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
1739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         On this STM32 serie, ADC processing time is:
1740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
1741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
1742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
1743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
1744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
1745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
1746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         is required.
1747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Refer to device datasheet.
1748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
1750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         on group regular.
1752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll SMPR     SMP            LL_ADC_SetSamplingTimeCommonChannels
1753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
1754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
1755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
1756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
1757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_13CYCLES_5
1758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_28CYCLES_5
1759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_41CYCLES_5
1760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_55CYCLES_5
1761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_71CYCLES_5
1762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_239CYCLES_5
1763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
1764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingTime)
1766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
1767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR, ADC_SMPR_SMP, SamplingTime);
1768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
1769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Get sampling time common to a group of channels.
1772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
1773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, sampling time scope is on ADC instance:
1774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Sampling time common to all channels.
1775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
1776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
1777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
1778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         this STM32 serie.
1779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll SMPR     SMP            LL_ADC_GetSamplingTimeCommonChannels
1780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
1781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
1783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
1784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_13CYCLES_5
1785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_28CYCLES_5
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 87


1786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_41CYCLES_5
1787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_55CYCLES_5
1788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_71CYCLES_5
1789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_239CYCLES_5
1790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonChannels(ADC_TypeDef *ADCx)
1792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
1793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SMPR, ADC_SMPR_SMP));
1794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
1795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
1798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
1801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
1802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
1806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         internal (SW start) or from external IP (timer event,
1807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         external interrupt line).
1808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting trigger source to external trigger
1809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         also set trigger polarity to rising edge 
1810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
1811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
1812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
1813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
1814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer 
1815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
1816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
1818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         on group regular.
1820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_SetTriggerSource\n
1821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_SetTriggerSource
1822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
1823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
1824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
1825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
1826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
1827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO  (1)
1828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
1829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO (1)
1830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         
1831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (1) On STM32F0, parameter not available on all devices
1832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
1833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
1835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
1836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN | ADC_CFGR1_EXTSEL, TriggerSource);
1837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
1838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
1841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         internal (SW start) or from external IP (timer event,
1842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         external interrupt line).
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 88


1843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
1844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         internal (SW start) or external, without detail
1845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
1846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (equivalent to 
1847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
1848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
1849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer 
1850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
1851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_GetTriggerSource\n
1852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_GetTriggerSource
1853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
1854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
1856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
1857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
1858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO  (1)
1859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
1860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO (1)
1861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         
1862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (1) On STM32F0, parameter not available on all devices
1863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
1865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
1866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   uint32_t TriggerSource = READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTSEL | ADC_CFGR1_EXTEN);
1867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   
1868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
1869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* corresponding to ADC_CFGR1_EXTEN {0; 1; 2; 3}.                           */
1870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR1_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2
1871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   
1872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR1_EXTEN and ADC_CFGR1_EXTSEL       */
1873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
1874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return ((TriggerSource
1875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR1_EXTSEL)
1876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR1_EXTEN)
1877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****          );
1878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
1879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
1882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****             or external.
1883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
1884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
1885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
1886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
1887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
1888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
1889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
1890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
1892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
1893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return (READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN));
1894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
1895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
1898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
1899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 89


1900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
1901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         on group regular.
1903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_SetTriggerEdge
1904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
1905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
1906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
1907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
1908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
1909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
1910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
1912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
1913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN, ExternalTriggerEdge);
1914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
1915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
1918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
1919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_GetTriggerEdge
1920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
1921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
1923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
1924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
1925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
1927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
1928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN));
1929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
1930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer scan direction.
1934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
1935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         the default scan direction is forward.
1936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
1938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         on group regular.
1940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_SetSequencerScanDirection
1941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
1942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ScanDirection This parameter can be one of the following values:
1943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
1944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
1945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
1946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerScanDirection(ADC_TypeDef *ADCx, uint32_t ScanDirection
1948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
1949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_SCANDIR, ScanDirection);
1950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
1951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer scan direction.
1954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
1955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         the default scan direction is forward.
1956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_GetSequencerScanDirection
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 90


1957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
1958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
1960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
1961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerScanDirection(ADC_TypeDef *ADCx)
1963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
1964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_SCANDIR));
1965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
1966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
1969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
1970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         number of ranks.
1971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular 
1972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
1973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
1975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         on group regular.
1977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_SetSequencerDiscont\n
1978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
1979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
1980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
1981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
1982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
1983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
1985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
1986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DISCEN, SeqDiscont);
1987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
1988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
1989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
1990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
1991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
1992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         number of ranks.
1993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_GetSequencerDiscont\n
1994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
1995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
1997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
1998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
1999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
2000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DISCEN));
2002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on rank corresponding to
2006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         channel number.
2007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   This function performs:
2008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - Set channels selected by overwriting the current sequencer
2012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           configuration.
2013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 91


2014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         not fully configurable: sequencer length and each rank
2015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         affectation to a channel are fixed by channel HW number.
2016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
2019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         enabled separately.
2021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
2024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         on group regular.
2026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   One or several values can be selected.
2027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChannels\n
2029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChannels\n
2030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChannels\n
2031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChannels\n
2032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChannels\n
2033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChannels\n
2034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChannels\n
2035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChannels\n
2036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChannels\n
2037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChannels\n
2038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChannels\n
2039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChannels\n
2040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChannels\n
2041:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChannels\n
2042:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChannels\n
2043:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChannels\n
2044:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChannels\n
2045:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChannels\n
2046:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChannels
2047:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
2048:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2049:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2050:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2051:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2052:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2053:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2054:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2055:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2056:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2057:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2059:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2060:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2061:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2062:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2063:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2064:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2065:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2066:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2067:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18         (1)
2068:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (1)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 92


2071:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         
2072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (1) On STM32F0, parameter not available on all devices: all devices except STM32F030x6,
2073:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
2074:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2075:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChannels(ADC_TypeDef *ADCx, uint32_t Channel)
2076:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2077:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2078:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2079:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   WRITE_REG(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
2080:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2081:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2082:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2083:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Add channel to ADC group regular sequence: channel on rank corresponding to
2084:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         channel number.
2085:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   This function performs:
2086:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2087:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2088:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2089:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - Set channels selected by adding them to the current sequencer
2090:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           configuration.
2091:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
2092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         not fully configurable: sequencer length and each rank
2093:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         affectation to a channel are fixed by channel HW number.
2094:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2095:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2096:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
2097:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2098:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         enabled separately.
2099:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
2102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         on group regular.
2104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   One or several values can be selected.
2105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChAdd\n
2107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChAdd\n
2108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChAdd\n
2109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChAdd\n
2110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChAdd\n
2111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChAdd\n
2112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChAdd\n
2113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChAdd\n
2114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChAdd\n
2115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChAdd\n
2116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChAdd\n
2117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChAdd\n
2118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChAdd\n
2119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChAdd\n
2120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChAdd\n
2121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChAdd\n
2122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChAdd\n
2123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChAdd\n
2124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChAdd
2125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
2126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 93


2128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18         (1)
2146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (1)
2149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         
2150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (1) On STM32F0, parameter not available on all devices: all devices except STM32F030x6,
2151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
2152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChAdd(ADC_TypeDef *ADCx, uint32_t Channel)
 306              		.loc 4 2153 22 view .LVU81
 307              	.LBB75:
2154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
 308              		.loc 4 2157 3 view .LVU82
 309 00c2 254C     		ldr	r4, .L3+32
 310 00c4 A36A     		ldr	r3, [r4, #40]
 311 00c6 1D43     		orrs	r5, r3
 312 00c8 A562     		str	r5, [r4, #40]
 313              	.LVL19:
 314              		.loc 4 2157 3 is_stmt 0 view .LVU83
 315              	.LBE75:
 316              	.LBE74:
  80:Src/adc.c     **** 
  81:Src/adc.c     ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
  82:Src/adc.c     ****   */
  83:Src/adc.c     ****   ADC_InitStruct.Clock = LL_ADC_CLOCK_ASYNC;
 317              		.loc 1 83 3 is_stmt 1 view .LVU84
 318              		.loc 1 83 24 is_stmt 0 view .LVU85
 319 00ca 0025     		movs	r5, #0
 320 00cc 0E95     		str	r5, [sp, #56]
  84:Src/adc.c     ****   ADC_InitStruct.Resolution = LL_ADC_RESOLUTION_12B;
 321              		.loc 1 84 3 is_stmt 1 view .LVU86
 322              		.loc 1 84 29 is_stmt 0 view .LVU87
 323 00ce 0F95     		str	r5, [sp, #60]
  85:Src/adc.c     ****   ADC_InitStruct.DataAlignment = LL_ADC_DATA_ALIGN_RIGHT;
 324              		.loc 1 85 3 is_stmt 1 view .LVU88
 325              		.loc 1 85 32 is_stmt 0 view .LVU89
 326 00d0 1095     		str	r5, [sp, #64]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 94


  86:Src/adc.c     ****   ADC_InitStruct.LowPowerMode = LL_ADC_LP_MODE_NONE;
 327              		.loc 1 86 3 is_stmt 1 view .LVU90
 328              		.loc 1 86 31 is_stmt 0 view .LVU91
 329 00d2 1195     		str	r5, [sp, #68]
  87:Src/adc.c     ****   LL_ADC_Init(ADC1, &ADC_InitStruct);
 330              		.loc 1 87 3 is_stmt 1 view .LVU92
 331 00d4 0EA9     		add	r1, sp, #56
 332 00d6 2000     		movs	r0, r4
 333 00d8 FFF7FEFF 		bl	LL_ADC_Init
 334              	.LVL20:
  88:Src/adc.c     ****   ADC_REG_InitStruct.TriggerSource = LL_ADC_REG_TRIG_SOFTWARE;
 335              		.loc 1 88 3 view .LVU93
 336              		.loc 1 88 36 is_stmt 0 view .LVU94
 337 00dc 0995     		str	r5, [sp, #36]
  89:Src/adc.c     ****   ADC_REG_InitStruct.SequencerDiscont = LL_ADC_REG_SEQ_DISCONT_DISABLE;
 338              		.loc 1 89 3 is_stmt 1 view .LVU95
 339              		.loc 1 89 39 is_stmt 0 view .LVU96
 340 00de 0A95     		str	r5, [sp, #40]
  90:Src/adc.c     ****   ADC_REG_InitStruct.ContinuousMode = LL_ADC_REG_CONV_SINGLE;
 341              		.loc 1 90 3 is_stmt 1 view .LVU97
 342              		.loc 1 90 37 is_stmt 0 view .LVU98
 343 00e0 0B95     		str	r5, [sp, #44]
  91:Src/adc.c     ****   ADC_REG_InitStruct.DMATransfer = LL_ADC_REG_DMA_TRANSFER_LIMITED;
 344              		.loc 1 91 3 is_stmt 1 view .LVU99
 345              		.loc 1 91 34 is_stmt 0 view .LVU100
 346 00e2 0C96     		str	r6, [sp, #48]
  92:Src/adc.c     ****   ADC_REG_InitStruct.Overrun = LL_ADC_REG_OVR_DATA_PRESERVED;
 347              		.loc 1 92 3 is_stmt 1 view .LVU101
 348              		.loc 1 92 30 is_stmt 0 view .LVU102
 349 00e4 0D95     		str	r5, [sp, #52]
  93:Src/adc.c     ****   LL_ADC_REG_Init(ADC1, &ADC_REG_InitStruct);
 350              		.loc 1 93 3 is_stmt 1 view .LVU103
 351 00e6 09A9     		add	r1, sp, #36
 352 00e8 2000     		movs	r0, r4
 353 00ea FFF7FEFF 		bl	LL_ADC_REG_Init
 354              	.LVL21:
  94:Src/adc.c     ****   LL_ADC_REG_SetSequencerScanDirection(ADC1, LL_ADC_REG_SEQ_SCAN_DIR_FORWARD);
 355              		.loc 1 94 3 view .LVU104
 356              	.LBB76:
 357              	.LBI76:
1947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
 358              		.loc 4 1947 22 view .LVU105
 359              	.LBB77:
1949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
 360              		.loc 4 1949 3 view .LVU106
 361 00ee E368     		ldr	r3, [r4, #12]
 362 00f0 0422     		movs	r2, #4
 363 00f2 9343     		bics	r3, r2
 364 00f4 E360     		str	r3, [r4, #12]
 365              	.LVL22:
1949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
 366              		.loc 4 1949 3 is_stmt 0 view .LVU107
 367              	.LBE77:
 368              	.LBE76:
  95:Src/adc.c     ****   LL_ADC_SetSamplingTimeCommonChannels(ADC1, LL_ADC_SAMPLINGTIME_1CYCLE_5);
 369              		.loc 1 95 3 is_stmt 1 view .LVU108
 370              	.LBB78:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 95


 371              	.LBI78:
1765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
 372              		.loc 4 1765 22 view .LVU109
 373              	.LBB79:
1767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
 374              		.loc 4 1767 3 view .LVU110
 375 00f6 6369     		ldr	r3, [r4, #20]
 376 00f8 0332     		adds	r2, r2, #3
 377 00fa 9343     		bics	r3, r2
 378 00fc 6361     		str	r3, [r4, #20]
 379              	.LVL23:
1767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
 380              		.loc 4 1767 3 is_stmt 0 view .LVU111
 381              	.LBE79:
 382              	.LBE78:
  96:Src/adc.c     ****   /* USER CODE BEGIN ADC_Init 2 */
  97:Src/adc.c     ****   
  98:Src/adc.c     ****   
  99:Src/adc.c     ****   // LL_ADC_ClearFlag_ADRDY(ADC1);
 100:Src/adc.c     ****   // LL_ADC_ClearFlag_EOC(ADC1);
 101:Src/adc.c     ****   // LL_ADC_EnableIT_EOC(ADC1);
 102:Src/adc.c     ****   LL_ADC_StartCalibration(ADC1);
 383              		.loc 1 102 3 is_stmt 1 view .LVU112
 384              	.LBB80:
 385              	.LBI80:
2158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Remove channel to ADC group regular sequence: channel on rank corresponding to
2162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         channel number.
2163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   This function performs:
2164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - Set channels selected by removing them to the current sequencer
2168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           configuration.
2169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
2170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         not fully configurable: sequencer length and each rank
2171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         affectation to a channel are fixed by channel HW number.
2172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
2175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         enabled separately.
2177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
2180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         on group regular.
2182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   One or several values can be selected.
2183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChRem\n
2185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChRem\n
2186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChRem\n
2187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChRem\n
2188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChRem\n
2189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChRem\n
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 96


2190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChRem\n
2191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChRem\n
2192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChRem\n
2193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChRem\n
2194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChRem\n
2195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChRem\n
2196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChRem\n
2197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChRem\n
2198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChRem\n
2199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChRem\n
2200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChRem\n
2201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChRem\n
2202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChRem
2203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
2204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18         (1)
2224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (1)
2227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         
2228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (1) On STM32F0, parameter not available on all devices: all devices except STM32F030x6,
2229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
2230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChRem(ADC_TypeDef *ADCx, uint32_t Channel)
2232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   CLEAR_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
2236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on rank corresponding to
2240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         channel number.
2241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   This function performs:
2242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - Channels order reading into each rank of scan sequence:
2243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
2246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         not fully configurable: sequencer length and each rank
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 97


2247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         affectation to a channel are fixed by channel HW number.
2248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
2251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         enabled separately.
2253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
2256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         on group regular.
2258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   One or several values can be retrieved.
2259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_GetSequencerChannels\n
2261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_GetSequencerChannels\n
2262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_GetSequencerChannels\n
2263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_GetSequencerChannels\n
2264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_GetSequencerChannels\n
2265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_GetSequencerChannels\n
2266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_GetSequencerChannels\n
2267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_GetSequencerChannels\n
2268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_GetSequencerChannels\n
2269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_GetSequencerChannels\n
2270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_GetSequencerChannels\n
2271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_GetSequencerChannels\n
2272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_GetSequencerChannels\n
2273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_GetSequencerChannels\n
2274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_GetSequencerChannels\n
2275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_GetSequencerChannels\n
2276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_GetSequencerChannels\n
2277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_GetSequencerChannels\n
2278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_GetSequencerChannels
2279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
2280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18         (1)
2300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (1)
2303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 98


2304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (1) On STM32F0, parameter not available on all devices: all devices except STM32F030x6,
2305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerChannels(ADC_TypeDef *ADCx)
2307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   uint32_t ChannelsBitfield = READ_BIT(ADCx->CHSELR, ADC_CHSELR_CHSEL);
2309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   
2310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return (   (((ChannelsBitfield & ADC_CHSELR_CHSEL0) >> ADC_CHSELR_CHSEL0_BITOFFSET_POS) * LL_ADC_
2311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL1) >> ADC_CHSELR_CHSEL1_BITOFFSET_POS) * LL_ADC_
2312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL2) >> ADC_CHSELR_CHSEL2_BITOFFSET_POS) * LL_ADC_
2313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL3) >> ADC_CHSELR_CHSEL3_BITOFFSET_POS) * LL_ADC_
2314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL4) >> ADC_CHSELR_CHSEL4_BITOFFSET_POS) * LL_ADC_
2315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL5) >> ADC_CHSELR_CHSEL5_BITOFFSET_POS) * LL_ADC_
2316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL6) >> ADC_CHSELR_CHSEL6_BITOFFSET_POS) * LL_ADC_
2317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL7) >> ADC_CHSELR_CHSEL7_BITOFFSET_POS) * LL_ADC_
2318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL8) >> ADC_CHSELR_CHSEL8_BITOFFSET_POS) * LL_ADC_
2319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL9) >> ADC_CHSELR_CHSEL9_BITOFFSET_POS) * LL_ADC_
2320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL10) >> ADC_CHSELR_CHSEL10_BITOFFSET_POS) * LL_AD
2321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL11) >> ADC_CHSELR_CHSEL11_BITOFFSET_POS) * LL_AD
2322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL12) >> ADC_CHSELR_CHSEL12_BITOFFSET_POS) * LL_AD
2323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL13) >> ADC_CHSELR_CHSEL13_BITOFFSET_POS) * LL_AD
2324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL14) >> ADC_CHSELR_CHSEL14_BITOFFSET_POS) * LL_AD
2325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL15) >> ADC_CHSELR_CHSEL15_BITOFFSET_POS) * LL_AD
2326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL16) >> ADC_CHSELR_CHSEL16_BITOFFSET_POS) * LL_AD
2327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL17) >> ADC_CHSELR_CHSEL17_BITOFFSET_POS) * LL_AD
2328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #if defined(ADC_CCR_VBATEN)
2329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL18) >> ADC_CHSELR_CHSEL18_BITOFFSET_POS) * LL_AD
2330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** #endif
2331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****          );
2332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
2335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
2336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
2337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
2338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           conversions launched successively automatically.
2339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular 
2340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
2343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         on group regular.
2345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_SetContinuousMode
2346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
2347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
2348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
2349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
2350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
2351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
2353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CONT, Continuous);
2355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
2359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
2360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 99


2361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
2362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           conversions launched successively automatically.
2363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_GetContinuousMode
2364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
2365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
2367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
2368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
2370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CONT));
2372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
2376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
2377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
2378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         mode:
2379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
2380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
2381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           ADC conversions) is reached.
2382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
2383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
2384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
2385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           ADC conversions).
2386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
2387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
2388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         mode non-circular:
2389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
2390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
2391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
2392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
2393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
2394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
2396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         on group regular.
2398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_SetDMATransfer\n
2399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_SetDMATransfer
2400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
2401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
2402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
2403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
2404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
2405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
2406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
2408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG, DMATransfer);
2410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
2414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
2415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
2416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         mode:
2417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 100


2418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
2419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           ADC conversions) is reached.
2420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
2421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
2422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
2423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           ADC conversions).
2424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
2425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
2426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         mode non-circular:
2427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
2428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
2429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
2430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
2431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
2432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_GetDMATransfer\n
2433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_GetDMATransfer
2434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
2435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
2437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
2438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
2439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
2441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG));
2443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
2447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         data preserved or overwritten.
2448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
2449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         other devices without this feature have a behavior
2450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         equivalent to data overwritten.
2451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
2452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
2453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         overrun should be set to data overwritten.
2454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
2456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         on group regular.
2458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_SetOverrun
2459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
2460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
2461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
2462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
2463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
2464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
2466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_OVRMOD, Overrun);
2468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
2472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         data preserved or overwritten.
2473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_GetOverrun
2474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 101


2475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
2477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
2478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
2480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_OVRMOD));
2482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
2486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
2490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
2491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
2495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         a single channel or all channels,
2496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         on ADC group regular.
2497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
2498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         is enabled.
2499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
2500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
2501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
2502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, there is only 1 kind of analog watchdog
2503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         instance:
2504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
2505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
2506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
2507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
2508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             ADC resolution configured).
2509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
2511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         on group regular.
2513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    AWDCH          LL_ADC_SetAnalogWDMonitChannels\n
2514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CFGR1    AWDSGL         LL_ADC_SetAnalogWDMonitChannels\n
2515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CFGR1    AWDEN          LL_ADC_SetAnalogWDMonitChannels
2516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
2517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
2518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
2519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
2520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG 
2521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG 
2522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG 
2523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG 
2524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG 
2525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG 
2526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG 
2527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG 
2528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG 
2529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG 
2530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
2531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 102


2532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
2533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
2534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
2535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
2536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
2537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
2538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (1)
2539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
2540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
2541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (1)
2542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         
2543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (1) On STM32F0, parameter not available on all devices: all devices except STM32F030x6,
2544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
2545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDChannelGroup)
2547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1,
2549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****              (ADC_CFGR1_AWDCH | ADC_CFGR1_AWDSGL | ADC_CFGR1_AWDEN),
2550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****              (AWDChannelGroup & ADC_AWD_CR_ALL_CHANNEL_MASK));
2551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
2555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   Usage of the returned channel number:
2556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
2557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
2558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
2559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
2560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
2562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           as parameter for another function.
2563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - To get the channel number in decimal format:
2564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           process the returned value with the helper macro
2565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
2567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           one channel.
2568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, there is only 1 kind of analog watchdog
2569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         instance:
2570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
2571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
2572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
2573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
2574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             ADC resolution configured).
2575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
2577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         on group regular.
2579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CFGR1    AWDCH          LL_ADC_GetAnalogWDMonitChannels\n
2580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CFGR1    AWDSGL         LL_ADC_GetAnalogWDMonitChannels\n
2581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         CFGR1    AWDEN          LL_ADC_GetAnalogWDMonitChannels
2582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
2583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
2585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
2586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG 
2587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG 
2588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 103


2589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG 
2590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG 
2591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG 
2592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG 
2593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG 
2594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG 
2595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG 
2596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
2597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
2598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
2599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
2600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
2601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
2602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
2603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
2604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
2605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx)
2607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   uint32_t AWDChannelGroup = READ_BIT(ADCx->CFGR1, (ADC_CFGR1_AWDCH | ADC_CFGR1_AWDSGL | ADC_CFGR1_
2609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   
2610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* Note: Set variable according to channel definition including channel ID  */
2611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /*       with bitfield.                                                     */
2612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   uint32_t AWDChannelSingle = ((AWDChannelGroup & ADC_CFGR1_AWDSGL) >> ADC_CFGR1_AWDSGL_BITOFFSET_P
2613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   uint32_t AWDChannelBitField = (ADC_CHANNEL_0_BITFIELD << ((AWDChannelGroup & ADC_CHANNEL_ID_NUMBE
2614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   
2615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return (AWDChannelGroup | (AWDChannelBitField * AWDChannelSingle));
2616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
2620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         high and low.
2621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
2622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
2623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
2624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
2625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
2626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, there is only 1 kind of analog watchdog
2627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         instance:
2628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
2629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
2630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
2631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
2632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             ADC resolution configured).
2633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
2635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         on group regular.
2637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll TR       HT             LL_ADC_ConfigAnalogWDThresholds\n
2638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         TR       LT             LL_ADC_ConfigAnalogWDThresholds
2639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
2640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
2641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
2642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
2643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDThresholdHighVa
2645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 104


2646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   MODIFY_REG(ADCx->TR,
2647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****              ADC_TR_HT | ADC_TR_LT,
2648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR_HT_BITOFFSET_POS) | AWDThresholdLowValue);
2649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
2653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         high or low.
2654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
2655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
2656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
2657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
2658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
2659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, there is only 1 kind of analog watchdog
2660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         instance:
2661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
2662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
2663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
2664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
2665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *             ADC resolution configured).
2666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
2668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         on group regular.
2670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll TR       HT             LL_ADC_SetAnalogWDThresholds\n
2671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         TR       LT             LL_ADC_SetAnalogWDThresholds
2672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
2673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
2674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
2675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
2676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
2677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
2678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDThresholdsHighLow,
2680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* Parameter "AWDThresholdsHighLow" is used with mask "0x00000010"          */
2682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* to be equivalent to "POSITION_VAL(AWDThresholdsHighLow)": if threshold   */
2683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* high is selected, then data is shifted to LSB. Else(threshold low),      */
2684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* data is not shifted.                                                     */
2685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   MODIFY_REG(ADCx->TR,
2686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****              AWDThresholdsHighLow,
2687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow >> ADC_TR_HT_BITOFFSET_POS) & 0x00000010U)
2688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
2692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
2693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         concatenated.
2694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
2695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
2696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         using helper macro:
2697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
2698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
2699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
2700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
2701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
2702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 105


2703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
2704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
2705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
2706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
2707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
2708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
2709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
2710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
2711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
2712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** */
2714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDThresholdsHigh
2715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* Parameter "AWDThresholdsHighLow" is used with mask "0x00000010"          */
2717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* to be equivalent to "POSITION_VAL(AWDThresholdsHighLow)": if threshold   */
2718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* high is selected, then data is shifted to LSB. Else(threshold low or     */
2719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* both thresholds), data is not shifted.                                   */
2720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->TR,
2721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR_LT))
2722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                     >> ((~AWDThresholdsHighLow) & 0x00000010U)
2723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****                    );
2724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
2728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
2731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
2732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
2736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, after ADC enable, a delay for 
2737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
2738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC conversion start.
2739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
2740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
2741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
2742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
2743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
2745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
2746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
2747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
2748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
2749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
2751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
2753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
2754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
2755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
2756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
2757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****              ADC_CR_ADEN);
2758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 106


2760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
2762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
2764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
2765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         on group regular.
2766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
2767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
2768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
2769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
2771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
2773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
2774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
2775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
2776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
2777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****              ADC_CR_ADDIS);
2778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
2782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
2783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
2784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
2785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
2786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
2787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
2788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
2790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN));
2792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
2796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
2797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
2798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
2799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
2801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS));
2803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
2807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, a minimum number of ADC clock cycles
2809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
2810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
2811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   In case of usage of ADC with DMA transfer:
2812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         On this STM32 serie, ADC DMA transfer request should be disabled
2813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         during calibration:
2814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Calibration factor is available in data register
2815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         and also transfered by DMA.
2816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         To not insert ADC calibration factor among ADC conversion data
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 107


2817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         in array variable, DMA transfer must be disabled during
2818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         calibration.
2819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         (DMA transfer setting backup and disable before calibration,
2820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         DMA transfer setting restore after calibration.
2821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         Refer to functions @ref LL_ADC_REG_GetDMATransfer(),
2822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetDMATransfer() ).
2823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
2825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be ADC disabled.
2826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration
2827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
2828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
2829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx)
 386              		.loc 4 2830 22 view .LVU113
 387              	.LBB81:
2831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
2833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
2834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
2835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 388              		.loc 4 2835 3 view .LVU114
 389 00fe A368     		ldr	r3, [r4, #8]
 390 0100 164A     		ldr	r2, .L3+36
 391 0102 1A40     		ands	r2, r3
 392 0104 8023     		movs	r3, #128
 393 0106 1B06     		lsls	r3, r3, #24
 394 0108 1343     		orrs	r3, r2
 395 010a A360     		str	r3, [r4, #8]
 396              	.LVL24:
 397              	.L2:
 398              		.loc 4 2835 3 is_stmt 0 view .LVU115
 399              	.LBE81:
 400              	.LBE80:
 103:Src/adc.c     ****   while(LL_ADC_IsCalibrationOnGoing(ADC1));
 401              		.loc 1 103 43 is_stmt 1 discriminator 1 view .LVU116
 402              		.loc 1 103 8 discriminator 1 view .LVU117
 403              	.LBB82:
 404              	.LBI82:
2836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
2837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****              ADC_CR_ADCAL);
2838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Get ADC calibration state.
2842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
2843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
2844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
2845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
 405              		.loc 4 2846 26 discriminator 1 view .LVU118
 406              	.LBB83:
2847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL));
 407              		.loc 4 2848 3 discriminator 1 view .LVU119
 408              		.loc 4 2848 11 is_stmt 0 discriminator 1 view .LVU120
 409 010c 124B     		ldr	r3, .L3+32
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 108


 410 010e 9B68     		ldr	r3, [r3, #8]
 411              	.LVL25:
 412              		.loc 4 2848 11 discriminator 1 view .LVU121
 413              	.LBE83:
 414              	.LBE82:
 415              		.loc 1 103 8 discriminator 1 view .LVU122
 416 0110 002B     		cmp	r3, #0
 417 0112 FBDB     		blt	.L2
 104:Src/adc.c     ****   LL_DMA_EnableChannel(DMA1,LL_DMA_CHANNEL_1);
 418              		.loc 1 104 3 is_stmt 1 view .LVU123
 419              	.LVL26:
 420              	.LBB84:
 421              	.LBI84:
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 422              		.loc 3 583 22 view .LVU124
 423              	.LBB85:
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 424              		.loc 3 585 3 view .LVU125
 425 0114 094A     		ldr	r2, .L3+4
 426 0116 1368     		ldr	r3, [r2]
 427 0118 0124     		movs	r4, #1
 428 011a 2343     		orrs	r3, r4
 429 011c 1360     		str	r3, [r2]
 430              	.LVL27:
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 431              		.loc 3 585 3 is_stmt 0 view .LVU126
 432              	.LBE85:
 433              	.LBE84:
 105:Src/adc.c     ****   LL_ADC_Enable(ADC1);
 434              		.loc 1 105 3 is_stmt 1 view .LVU127
 435              	.LBB86:
 436              	.LBI86:
2750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
 437              		.loc 4 2750 22 view .LVU128
 438              	.LBB87:
2755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 439              		.loc 4 2755 3 view .LVU129
 440 011e 0E49     		ldr	r1, .L3+32
 441 0120 8A68     		ldr	r2, [r1, #8]
 442 0122 0E48     		ldr	r0, .L3+36
 443 0124 0240     		ands	r2, r0
 444 0126 2243     		orrs	r2, r4
 445 0128 8A60     		str	r2, [r1, #8]
 446              	.LVL28:
2755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 447              		.loc 4 2755 3 is_stmt 0 view .LVU130
 448              	.LBE87:
 449              	.LBE86:
 106:Src/adc.c     ****   LL_ADC_REG_StartConversion(ADC1);
 450              		.loc 1 106 3 is_stmt 1 view .LVU131
 451              	.LBB88:
 452              	.LBI88:
2849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** }
2850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @}
2853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 109


2854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
2856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @{
2857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** 
2859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** /**
2860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
2861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, this function is relevant for both 
2862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
2863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
2864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           starts immediately.
2865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
2866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
2867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *           following the ADC start conversion command.
2868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC state:
2870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
2871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
2872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   *         without ADC disable command on going.
2873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
2874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @param  ADCx ADC instance
2875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   * @retval None
2876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   */
2877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
 453              		.loc 4 2877 22 view .LVU132
 454              	.LBB89:
2878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h **** {
2879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
2880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
2881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
2882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 455              		.loc 4 2882 3 view .LVU133
 456 012a 8B68     		ldr	r3, [r1, #8]
 457 012c 0340     		ands	r3, r0
 458 012e 0422     		movs	r2, #4
 459 0130 1343     		orrs	r3, r2
 460 0132 8B60     		str	r3, [r1, #8]
 461              	.LVL29:
 462              		.loc 4 2882 3 is_stmt 0 view .LVU134
 463              	.LBE89:
 464              	.LBE88:
 107:Src/adc.c     ****   
 108:Src/adc.c     ****   
 109:Src/adc.c     ****   /* USER CODE END ADC_Init 2 */
 110:Src/adc.c     **** 
 111:Src/adc.c     **** }
 465              		.loc 1 111 1 view .LVU135
 466 0134 12B0     		add	sp, sp, #72
 467              		@ sp needed
 468 0136 70BD     		pop	{r4, r5, r6, pc}
 469              	.L4:
 470              		.align	2
 471              	.L3:
 472 0138 00100240 		.word	1073876992
 473 013c 08000240 		.word	1073872904
 474 0140 EFBFFFFF 		.word	-16401
 475 0144 FFCFFFFF 		.word	-12289
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 110


 476 0148 FFFCFFFF 		.word	-769
 477 014c FFF3FFFF 		.word	-3073
 478 0150 00000000 		.word	.LANCHOR0
 479 0154 40240140 		.word	1073816640
 480 0158 00240140 		.word	1073816576
 481 015c E8FFFF7F 		.word	2147483624
 482              		.cfi_endproc
 483              	.LFE1020:
 485              		.global	adcData
 486              		.section	.bss.adcData,"aw",%nobits
 487              		.align	2
 488              		.set	.LANCHOR0,. + 0
 491              	adcData:
 492 0000 00000000 		.space	8
 492      00000000 
 493              		.text
 494              	.Letext0:
 495              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 496              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 497              		.file 7 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 498              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_tim.h"
 499              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h"
 500              		.file 10 "Inc/adc.h"
 501              		.file 11 "<built-in>"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s 			page 111


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s:18     .text.MX_ADC_Init:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s:24     .text.MX_ADC_Init:00000000 MX_ADC_Init
C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s:472    .text.MX_ADC_Init:00000138 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s:491    .bss.adcData:00000000 adcData
C:\Users\ADMINI~1\AppData\Local\Temp\ccrC1gWj.s:487    .bss.adcData:00000000 $d

UNDEFINED SYMBOLS
memset
LL_GPIO_Init
LL_ADC_Init
LL_ADC_REG_Init
