ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._write,"ax",%progbits
  18              		.align	1
  19              		.global	_write
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	_write:
  25              	.LVL0:
  26              	.LFB1023:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * Copyright (c) 2022 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****   * in the root directory of this software component.
  14:Src/main.c    ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   ******************************************************************************
  17:Src/main.c    ****   */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** #include "adc.h"
  22:Src/main.c    **** #include "dma.h"
  23:Src/main.c    **** #include "i2c.h"
  24:Src/main.c    **** #include "tim.h"
  25:Src/main.c    **** #include "usart.h"
  26:Src/main.c    **** #include "gpio.h"
  27:Src/main.c    **** 
  28:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  29:Src/main.c    **** /* USER CODE BEGIN Includes */
  30:Src/main.c    **** #include <stdio.h>
  31:Src/main.c    **** #include "common_inc.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 2


  32:Src/main.c    **** /* USER CODE END Includes */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PTD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE END PTD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PD */
  41:Src/main.c    **** /* USER CODE END PD */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  44:Src/main.c    **** /* USER CODE BEGIN PM */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE END PM */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END PV */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  55:Src/main.c    **** void SystemClock_Config(void);
  56:Src/main.c    **** /* USER CODE BEGIN PFP */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PFP */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  61:Src/main.c    **** /* USER CODE BEGIN 0 */
  62:Src/main.c    **** int _write(int fd, char *ch, int len)
  63:Src/main.c    **** {
  28              		.loc 1 63 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 63 1 is_stmt 0 view .LVU1
  33 0000 30B5     		push	{r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 1000     		movs	r0, r2
  40              	.LVL1:
  64:Src/main.c    ****   int i;
  41              		.loc 1 64 3 is_stmt 1 view .LVU2
  65:Src/main.c    ****   for(i=0;i<len;i++)
  42              		.loc 1 65 3 view .LVU3
  43              		.loc 1 65 8 is_stmt 0 view .LVU4
  44 0004 0023     		movs	r3, #0
  45              		.loc 1 65 3 view .LVU5
  46 0006 03E0     		b	.L2
  47              	.LVL2:
  48              	.L5:
  66:Src/main.c    ****   {
  67:Src/main.c    ****     while(LL_USART_IsActiveFlag_TXE(USART2)==0)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 3


  68:Src/main.c    ****     {}
  69:Src/main.c    ****      LL_USART_TransmitData8(USART2, ch[i]);
  49              		.loc 1 69 6 is_stmt 1 view .LVU6
  50              	.LBB48:
  51              	.LBI48:
  52              		.file 2 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @file    stm32f0xx_ll_usart.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief   Header file of USART LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ******************************************************************************
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #ifndef STM32F0xx_LL_USART_H
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define STM32F0xx_LL_USART_H
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #ifdef __cplusplus
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** extern "C" {
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #include "stm32f0xx.h"
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @addtogroup STM32F0xx_LL_Driver
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined (USART1) || defined (USART2) || defined (USART3) || defined (UART4) || defined (UART5) 
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL USART
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Private constants ---------------------------------------------------------*/
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Private macros ------------------------------------------------------------*/
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_Private_Macros USART Private Macros
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 4


  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Exported types ------------------------------------------------------------*/
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_ES_INIT USART Exported Init structures
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief LL USART Init Structure definition
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** typedef struct
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t BaudRate;                  /*!< This field defines expected Usart communication baud rat
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            function @ref LL_USART_SetBaudRate().*/
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t DataWidth;                 /*!< Specifies the number of data bits transmitted or receive
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DATAWI
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            function @ref LL_USART_SetDataWidth().*/
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t StopBits;                  /*!< Specifies the number of stop bits transmitted.
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_STOPBI
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            function @ref LL_USART_SetStopBitsLength().*/
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t Parity;                    /*!< Specifies the parity mode.
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PARITY
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            function @ref LL_USART_SetParity().*/
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t TransferDirection;         /*!< Specifies whether the Receive and/or Transmit mode is en
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DIRECT
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            function @ref LL_USART_SetTransferDirection().*/
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t HardwareFlowControl;       /*!< Specifies whether the hardware flow control mode is enab
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_HWCONT
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            function @ref LL_USART_SetHWFlowCtrl().*/
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t OverSampling;              /*!< Specifies whether USART oversampling mode is 16 or 8.
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_OVERSA
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            function @ref LL_USART_SetOverSampling().*/
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** } LL_USART_InitTypeDef;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 5


 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief LL USART Clock Init Structure definition
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** typedef struct
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t ClockOutput;               /*!< Specifies whether the USART clock is enabled or disabled
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_CLOCK.
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            @ref LL_USART_EnableSCLKOutput() or @ref LL_USART_Disabl
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t ClockPolarity;             /*!< Specifies the steady state of the serial clock.
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_POLARI
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            functions @ref LL_USART_SetClockPolarity().
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t ClockPhase;                /*!< Specifies the clock transition on which the bit capture 
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PHASE.
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            functions @ref LL_USART_SetClockPhase().
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t LastBitClockPulse;         /*!< Specifies whether the clock pulse corresponding to the l
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            data bit (MSB) has to be output on the SCLK pin in synch
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_LASTCL
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            functions @ref LL_USART_SetLastClkPulseOutput().
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** } LL_USART_ClockInitTypeDef;
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USE_FULL_LL_DRIVER */
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Exported constants --------------------------------------------------------*/
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Constants USART Exported Constants
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLEAR_FLAG Clear Flags Defines
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_WriteReg function
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_PECF                       USART_ICR_PECF                /*!< Parity error cle
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_FECF                       USART_ICR_FECF                /*!< Framing error cl
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_NCF                        USART_ICR_NCF                 /*!< Noise error dete
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_ORECF                      USART_ICR_ORECF               /*!< Overrun error cl
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_IDLECF                     USART_ICR_IDLECF              /*!< Idle line detect
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_TCCF                       USART_ICR_TCCF                /*!< Transmission com
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 6


 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined USART_LIN_SUPPORT
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_LBDCF                      USART_ICR_LBDCF               /*!< LIN break detect
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_LIN_SUPPORT */
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_CTSCF                      USART_ICR_CTSCF               /*!< CTS clear flag *
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_RTOCF                      USART_ICR_RTOCF               /*!< Receiver timeout
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined USART_SMARTCARD_SUPPORT
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_EOBCF                      USART_ICR_EOBCF               /*!< End of block cle
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_CMCF                       USART_ICR_CMCF                /*!< Character match 
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR1_UESM)
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR3_WUFIE)
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_WUCF                       USART_ICR_WUCF                /*!< Wakeup from Stop
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR3_WUFIE */
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR1_UESM */
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_GET_FLAG Get Flags Defines
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_ReadReg function
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_PE                         USART_ISR_PE                  /*!< Parity error fla
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_FE                         USART_ISR_FE                  /*!< Framing error fl
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_NE                         USART_ISR_NE                  /*!< Noise detected f
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_ORE                        USART_ISR_ORE                 /*!< Overrun error fl
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_IDLE                       USART_ISR_IDLE                /*!< Idle line detect
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_RXNE                       USART_ISR_RXNE                /*!< Read data regist
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_TC                         USART_ISR_TC                  /*!< Transmission com
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_TXE                        USART_ISR_TXE                 /*!< Transmit data re
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined USART_LIN_SUPPORT
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_LBDF                       USART_ISR_LBDF                /*!< LIN break detect
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_LIN_SUPPORT */
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_CTSIF                      USART_ISR_CTSIF               /*!< CTS interrupt fl
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_CTS                        USART_ISR_CTS                 /*!< CTS flag */
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_RTOF                       USART_ISR_RTOF                /*!< Receiver timeout
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined USART_SMARTCARD_SUPPORT
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_EOBF                       USART_ISR_EOBF                /*!< End of block fla
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_ABRE                       USART_ISR_ABRE                /*!< Auto baud rate e
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_ABRF                       USART_ISR_ABRF                /*!< Auto baud rate f
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_BUSY                       USART_ISR_BUSY                /*!< Busy flag */
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_CMF                        USART_ISR_CMF                 /*!< Character match 
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_SBKF                       USART_ISR_SBKF                /*!< Send break flag 
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_RWU                        USART_ISR_RWU                 /*!< Receiver wakeup 
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR1_UESM)
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR3_WUFIE)
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_WUF                        USART_ISR_WUF                 /*!< Wakeup from Stop
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR3_WUFIE */
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR1_UESM */
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_TEACK                      USART_ISR_TEACK               /*!< Transmit enable 
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_REACK                      USART_ISR_REACK               /*!< Receive enable a
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_IT IT Defines
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 7


 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief    IT defines which can be used with LL_USART_ReadReg and  LL_USART_WriteReg functions
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_IDLEIE                     USART_CR1_IDLEIE              /*!< IDLE interrupt e
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_RXNEIE                     USART_CR1_RXNEIE              /*!< Read data regist
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_TCIE                       USART_CR1_TCIE                /*!< Transmission com
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_TXEIE                      USART_CR1_TXEIE               /*!< Transmit data re
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_PEIE                       USART_CR1_PEIE                /*!< Parity error */
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_CMIE                       USART_CR1_CMIE                /*!< Character match 
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_RTOIE                      USART_CR1_RTOIE               /*!< Receiver timeout
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_EOBIE                      USART_CR1_EOBIE               /*!< End of Block int
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR2_LBDIE                      USART_CR2_LBDIE               /*!< LIN break detect
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_LIN_SUPPORT */
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR3_EIE                        USART_CR3_EIE                 /*!< Error interrupt 
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR3_CTSIE                      USART_CR3_CTSIE               /*!< CTS interrupt en
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR1_UESM)
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR3_WUFIE)
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR3_WUFIE                      USART_CR3_WUFIE               /*!< Wakeup from Stop
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR3_WUFIE */
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR1_UESM */
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DIRECTION Communication Direction
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DIRECTION_NONE                 0x00000000U                        /*!< Transmitter
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DIRECTION_RX                   USART_CR1_RE                       /*!< Transmitter
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DIRECTION_TX                   USART_CR1_TE                       /*!< Transmitter
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DIRECTION_TX_RX                (USART_CR1_TE |USART_CR1_RE)       /*!< Transmitter
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_PARITY Parity Control
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_PARITY_NONE                    0x00000000U                          /*!< Parity co
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_PARITY_EVEN                    USART_CR1_PCE                        /*!< Parity co
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_PARITY_ODD                     (USART_CR1_PCE | USART_CR1_PS)       /*!< Parity co
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP Wakeup
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WAKEUP_IDLELINE                0x00000000U           /*!<  USART wake up from Mute
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WAKEUP_ADDRESSMARK             USART_CR1_WAKE        /*!<  USART wake up from Mute
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 8


 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DATAWIDTH Datawidth
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_7BITS_SUPPORT)
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_7B                   USART_CR1_M1            /*!< 7 bits word length : S
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_8B                   0x00000000U             /*!< 8 bits word length : S
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_9B                   USART_CR1_M0            /*!< 9 bits word length : S
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_8B                   0x00000000U             /*!< 8 bits word length : S
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_9B                   USART_CR1_M             /*!< 9 bits word length : S
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif/* USART_7BITS_SUPPORT */
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_OVERSAMPLING Oversampling
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_16                0x00000000U            /*!< Oversampling by 16 */
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_8                 USART_CR1_OVER8        /*!< Oversampling by 8 */
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLOCK Clock Signal
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CLOCK_DISABLE                  0x00000000U            /*!< Clock signal not provid
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CLOCK_ENABLE                   USART_CR2_CLKEN        /*!< Clock signal provided *
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_LASTCLKPULSE Last Clock Pulse
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_NO_OUTPUT         0x00000000U           /*!< The clock pulse of the l
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_OUTPUT            USART_CR2_LBCL        /*!< The clock pulse of the l
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_PHASE Clock Phase
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_PHASE_1EDGE                    0x00000000U           /*!< The first clock transiti
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_PHASE_2EDGE                    USART_CR2_CPHA        /*!< The second clock transit
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_POLARITY Clock Polarity
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 9


 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_POLARITY_LOW                   0x00000000U           /*!< Steady low value on SCLK
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_POLARITY_HIGH                  USART_CR2_CPOL        /*!< Steady high value on SCL
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_STOPBITS Stop Bits
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_STOPBITS_0_5                   USART_CR2_STOP_0                           /*!< 0.5
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_STOPBITS_1                     0x00000000U                                /*!< 1 s
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_STOPBITS_1_5                   (USART_CR2_STOP_0 | USART_CR2_STOP_1)      /*!< 1.5
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_STOPBITS_2                     USART_CR2_STOP_1                           /*!< 2 s
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXRX TX RX Pins Swap
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_TXRX_STANDARD                  0x00000000U           /*!< TX/RX pins are used as d
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_TXRX_SWAPPED                   (USART_CR2_SWAP)      /*!< TX and RX pins functions
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_RXPIN_LEVEL RX Pin Active Level Inversion
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_STANDARD           0x00000000U           /*!< RX pin signal works usin
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_INVERTED           (USART_CR2_RXINV)     /*!< RX pin signal values are
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXPIN_LEVEL TX Pin Active Level Inversion
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_STANDARD           0x00000000U           /*!< TX pin signal works usin
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_INVERTED           (USART_CR2_TXINV)     /*!< TX pin signal values are
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_BINARY_LOGIC Binary Data Inversion
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_POSITIVE          0x00000000U           /*!< Logical data from the da
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_NEGATIVE          USART_CR2_DATAINV     /*!< Logical data from the da
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 10


 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_BITORDER Bit Order
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_BITORDER_LSBFIRST              0x00000000U           /*!< data is transmitted/rece
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_BITORDER_MSBFIRST              USART_CR2_MSBFIRST    /*!< data is transmitted/rece
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_AUTOBAUD_DETECT_ON Autobaud Detection
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_STARTBIT    0x00000000U                                 /*!< Me
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE USART_CR2_ABRMODE_0                         /*!< Fa
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_FABR_SUPPORT)
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME    USART_CR2_ABRMODE_1                         /*!< 0x
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_55_FRAME    (USART_CR2_ABRMODE_1 | USART_CR2_ABRMODE_0) /*!< 0x
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_FABR_SUPPORT */
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_ADDRESS_DETECT Address Length Detection
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_4B              0x00000000U           /*!< 4-bit address detection 
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_7B              USART_CR2_ADDM7       /*!< 7-bit address detection 
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_HWCONTROL Hardware Control
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_HWCONTROL_NONE                 0x00000000U                          /*!< CTS and R
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS                  USART_CR3_RTSE                       /*!< RTS outpu
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_HWCONTROL_CTS                  USART_CR3_CTSE                       /*!< CTS mode 
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS_CTS              (USART_CR3_RTSE | USART_CR3_CTSE)    /*!< CTS and R
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR1_UESM)
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR3_WUS)
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP_ON Wakeup Activation
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_ADDRESS              0x00000000U                             /*!< Wake u
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_STARTBIT             USART_CR3_WUS_1                         /*!< Wake u
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_RXNE                 (USART_CR3_WUS_0 | USART_CR3_WUS_1)     /*!< Wake u
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR3_WUS */
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR1_UESM */
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 11


 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_IRDA_POWER IrDA Power
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_IRDA_POWER_NORMAL              0x00000000U           /*!< IrDA normal power mode *
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_IRDA_POWER_LOW                 USART_CR3_IRLP        /*!< IrDA low power mode */
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_IRDA_SUPPORT */
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_LINBREAK_DETECT LIN Break Detection Length
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_10B            0x00000000U           /*!< 10-bit break detection m
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_11B            USART_CR2_LBDL        /*!< 11-bit break detection m
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_LIN_SUPPORT */
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DE_POLARITY Driver Enable Polarity
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DE_POLARITY_HIGH               0x00000000U           /*!< DE signal is active high
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DE_POLARITY_LOW                USART_CR3_DEP         /*!< DE signal is active low 
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DMA_REG_DATA DMA Register Data
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_TRANSMIT          0x00000000U          /*!< Get address of data regis
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_RECEIVE           0x00000001U          /*!< Get address of data regis
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Exported macro ------------------------------------------------------------*/
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Macros USART Exported Macros
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EM_WRITE_READ Common Write and read registers Macros
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Write a value in USART register
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __REG__ Register to be written
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __VALUE__ Value to be written in the register
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 12


 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VAL
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Read a value in USART register
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __REG__ Register to be read
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Register value
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EM_Exported_Macros_Helper Exported_Macros_Helper
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         expected Baud Rate in 8 bits sampling mode (32 bits value of USARTDIV is returned)
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_8 case
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8(__PERIPHCLK__, __BAUDRATE__) ((((__PERIPHCLK__)*2U)\
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                                                 + ((__BAUDRATE__)/2U))/(__BAUDRATE_
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         expected Baud Rate in 16 bits sampling mode (32 bits value of USARTDIV is returned)
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_16 case
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16(__PERIPHCLK__, __BAUDRATE__) (((__PERIPHCLK__) + ((__BAUDRATE__)/
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Exported functions --------------------------------------------------------*/
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Functions USART Exported Functions
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration Configuration functions
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 13


 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  USART Enable
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Enable
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Enable(USART_TypeDef *USARTx)
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UE);
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  USART Disable (all USART prescalers and outputs are disabled)
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   When USART is disabled, USART prescalers and outputs are stopped immediately,
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         and current operations are discarded. The configuration of the USART is kept, but all t
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         flags, in the USARTx_ISR are set to their default values.
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Disable
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Disable(USART_TypeDef *USARTx)
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UE);
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if USART is enabled
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_IsEnabled
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabled(USART_TypeDef *USARTx)
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_UE) == (USART_CR1_UE)) ? 1UL : 0UL);
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR1_UESM)
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  USART enabled in STOP Mode.
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   When this function is enabled, USART is able to wake up the MCU from Stop mode, provide
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         USART clock selection is HSI or LSE in RCC.
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_EnableInStopMode
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableInStopMode(USART_TypeDef *USARTx)
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_UESM);
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  USART disabled in STOP Mode.
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   When this function is disabled, USART is not able to wake up the MCU from Stop mode
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_DisableInStopMode
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 14


 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableInStopMode(USART_TypeDef *USARTx)
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_UESM);
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if USART is enabled in STOP Mode (able to wake up MCU from Stop mode or not)
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_IsEnabledInStopMode
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledInStopMode(USART_TypeDef *USARTx)
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_UESM) == (USART_CR1_UESM)) ? 1UL : 0UL);
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR1_UESM*/
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Receiver Enable (Receiver is enabled and begins searching for a start bit)
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_EnableDirectionRx
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionRx(USART_TypeDef *USARTx)
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RE);
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Receiver Disable
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_DisableDirectionRx
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionRx(USART_TypeDef *USARTx)
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_RE);
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Transmitter Enable
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_EnableDirectionTx
 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionTx(USART_TypeDef *USARTx)
 673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_TE);
 675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Transmitter Disable
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 15


 679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_DisableDirectionTx
 680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionTx(USART_TypeDef *USARTx)
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_TE);
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure simultaneously enabled/disabled states
 690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         of Transmitter and Receiver
 691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_SetTransferDirection\n
 692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          TE            LL_USART_SetTransferDirection
 693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  TransferDirection This parameter can be one of the following values:
 695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferDirection(USART_TypeDef *USARTx, uint32_t TransferDirectio
 702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_MODIFY_REG(USARTx->CR1, USART_CR1_RE | USART_CR1_TE, TransferDirection);
 704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return enabled/disabled states of Transmitter and Receiver
 708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_GetTransferDirection\n
 709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          TE            LL_USART_GetTransferDirection
 710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferDirection(USART_TypeDef *USARTx)
 718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_RE | USART_CR1_TE));
 720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure Parity (enabled/disabled and parity mode if enabled).
 724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   This function selects if hardware parity control (generation and detection) is enabled 
 725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         When the parity control is enabled (Odd or Even), computed parity bit is inserted at th
 726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (9th or 8th bit depending on data width) and parity is checked on the received data.
 727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_SetParity\n
 728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          PCE           LL_USART_SetParity
 729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 16


 736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetParity(USART_TypeDef *USARTx, uint32_t Parity)
 737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE, Parity);
 739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Parity configuration (enabled/disabled and parity mode if enabled)
 743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_GetParity\n
 744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          PCE           LL_USART_GetParity
 745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetParity(USART_TypeDef *USARTx)
 752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE));
 754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Receiver Wake Up method from Mute mode.
 758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_SetWakeUpMethod
 759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Method This parameter can be one of the following values:
 761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWakeUpMethod(USART_TypeDef *USARTx, uint32_t Method)
 766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_WAKE, Method);
 768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Receiver Wake Up method from Mute mode
 772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_GetWakeUpMethod
 773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWakeUpMethod(USART_TypeDef *USARTx)
 779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_WAKE));
 781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Word length (i.e. nb of data bits, excluding start and stop bits)
 785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_SetDataWidth\n
 786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          M1            LL_USART_SetDataWidth
 787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
 789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B (*)
 790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 17


 793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDataWidth(USART_TypeDef *USARTx, uint32_t DataWidth)
 797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_M, DataWidth);
 799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Word length (i.e. nb of data bits, excluding start and stop bits)
 803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_GetDataWidth\n
 804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          M1            LL_USART_GetDataWidth
 805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B (*)
 808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
 811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
 812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDataWidth(USART_TypeDef *USARTx)
 814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_M));
 816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Allow switch between Mute Mode and Active mode
 820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_EnableMuteMode
 821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableMuteMode(USART_TypeDef *USARTx)
 825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_MME);
 827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Prevent Mute Mode use. Set Receiver in active mode permanently.
 831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_DisableMuteMode
 832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableMuteMode(USART_TypeDef *USARTx)
 836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_MME);
 838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if switch between Mute Mode and Active mode is allowed
 842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_IsEnabledMuteMode
 843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledMuteMode(USART_TypeDef *USARTx)
 847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_MME) == (USART_CR1_MME)) ? 1UL : 0UL);
 849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 18


 850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Oversampling to 8-bit or 16-bit mode
 853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_SetOverSampling
 854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
 856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetOverSampling(USART_TypeDef *USARTx, uint32_t OverSampling)
 861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_OVER8, OverSampling);
 863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Oversampling mode
 867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_GetOverSampling
 868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetOverSampling(USART_TypeDef *USARTx)
 874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_OVER8));
 876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure if Clock pulse of the last data bit is output to the SCLK pin or not
 880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
 881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_SetLastClkPulseOutput
 883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  LastBitClockPulse This parameter can be one of the following values:
 885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLastClkPulseOutput(USART_TypeDef *USARTx, uint32_t LastBitClockPul
 890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBCL, LastBitClockPulse);
 892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve Clock pulse of the last data bit output configuration
 896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (Last bit Clock pulse output to the SCLK pin or not)
 897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
 898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_GetLastClkPulseOutput
 900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLastClkPulseOutput(USART_TypeDef *USARTx)
 906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 19


 907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBCL));
 908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Select the phase of the clock output on the SCLK pin in synchronous mode
 912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
 913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_SetClockPhase
 915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  ClockPhase This parameter can be one of the following values:
 917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPhase(USART_TypeDef *USARTx, uint32_t ClockPhase)
 922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA, ClockPhase);
 924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return phase of the clock output on the SCLK pin in synchronous mode
 928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
 929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_GetClockPhase
 931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPhase(USART_TypeDef *USARTx)
 937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPHA));
 939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Select the polarity of the clock output on the SCLK pin in synchronous mode
 943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
 944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_SetClockPolarity
 946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  ClockPolarity This parameter can be one of the following values:
 948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPolarity(USART_TypeDef *USARTx, uint32_t ClockPolarity)
 953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPOL, ClockPolarity);
 955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return polarity of the clock output on the SCLK pin in synchronous mode
 959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
 960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_GetClockPolarity
 962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 20


 964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPolarity(USART_TypeDef *USARTx)
 968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPOL));
 970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure Clock signal format (Phase Polarity and choice about output of last bit clock
 974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
 975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
 977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clock Phase configuration using @ref LL_USART_SetClockPhase() function
 978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clock Polarity configuration using @ref LL_USART_SetClockPolarity() function
 979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Output of Last bit Clock pulse configuration using @ref LL_USART_SetLastClkPulseOutpu
 980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_ConfigClock\n
 981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          CPOL          LL_USART_ConfigClock\n
 982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          LBCL          LL_USART_ConfigClock
 983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Phase This parameter can be one of the following values:
 985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
 988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  LBCPOutput This parameter can be one of the following values:
 991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigClock(USART_TypeDef *USARTx, uint32_t Phase, uint32_t Polarity,
 996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL, Phase | Polarity | LBCP
 998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Clock output on SCLK pin
1002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_EnableSCLKOutput
1005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSCLKOutput(USART_TypeDef *USARTx)
1009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
1011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Clock output on SCLK pin
1015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_DisableSCLKOutput
1018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 21


1021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSCLKOutput(USART_TypeDef *USARTx)
1022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
1024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Clock output on SCLK pin is enabled
1028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_IsEnabledSCLKOutput
1031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSCLKOutput(USART_TypeDef *USARTx)
1035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_CLKEN) == (USART_CR2_CLKEN)) ? 1UL : 0UL);
1037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set the length of the stop bits
1041:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_SetStopBitsLength
1042:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1043:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1044:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5 (*)
1045:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1046:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5 (*)
1047:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1048:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
1049:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
1050:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1051:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1052:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetStopBitsLength(USART_TypeDef *USARTx, uint32_t StopBits)
1053:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1054:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
1055:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1056:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1057:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve the length of the stop bits
1059:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_GetStopBitsLength
1060:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1061:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1062:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5 (*)
1063:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1064:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5 (*)
1065:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1066:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
1067:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
1068:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetStopBitsLength(USART_TypeDef *USARTx)
1070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1071:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_STOP));
1072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1073:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1074:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1075:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure Character frame format (Datawidth, Parity control, Stop Bits)
1076:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1077:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Data Width configuration using @ref LL_USART_SetDataWidth() function
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 22


1078:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Parity Control and mode configuration using @ref LL_USART_SetParity() function
1079:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Stop bits configuration using @ref LL_USART_SetStopBitsLength() function
1080:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_ConfigCharacter\n
1081:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          PCE           LL_USART_ConfigCharacter\n
1082:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          M0            LL_USART_ConfigCharacter\n
1083:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          M1            LL_USART_ConfigCharacter\n
1084:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigCharacter
1085:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1086:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
1087:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B (*)
1088:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
1089:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
1090:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
1091:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
1092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
1093:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
1094:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1095:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5 (*)
1096:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1097:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5 (*)
1098:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1099:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
1100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
1101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigCharacter(USART_TypeDef *USARTx, uint32_t DataWidth, uint32_t P
1104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                               uint32_t StopBits)
1105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE | USART_CR1_M, Parity | DataWidth);
1107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
1108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure TX/RX pins swapping setting.
1112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_SetTXRXSwap
1113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  SwapConfig This parameter can be one of the following values:
1115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
1116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXRXSwap(USART_TypeDef *USARTx, uint32_t SwapConfig)
1120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_SWAP, SwapConfig);
1122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve TX/RX pins swapping configuration.
1126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_GetTXRXSwap
1127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
1130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXRXSwap(USART_TypeDef *USARTx)
1133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_SWAP));
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 23


1135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure RX pin active level logic
1139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_SetRXPinLevel
1140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
1143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_RXINV, PinInvMethod);
1149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve RX pin active level logic configuration
1153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_GetRXPinLevel
1154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
1157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRXPinLevel(USART_TypeDef *USARTx)
1160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_RXINV));
1162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure TX pin active level logic
1166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_SetTXPinLevel
1167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
1170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
1171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_TXINV, PinInvMethod);
1176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve TX pin active level logic configuration
1180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_GetTXPinLevel
1181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
1184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
1185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXPinLevel(USART_TypeDef *USARTx)
1187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_TXINV));
1189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 24


1192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure Binary data logic.
1193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Allow to define how Logical data from the data register are send/received :
1194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         either in positive/direct logic (1=H, 0=L) or in negative/inverse logic (1=L, 0=H)
1195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_SetBinaryDataLogic
1196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  DataLogic This parameter can be one of the following values:
1198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
1200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBinaryDataLogic(USART_TypeDef *USARTx, uint32_t DataLogic)
1203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_DATAINV, DataLogic);
1205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve Binary data configuration
1209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_GetBinaryDataLogic
1210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
1214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBinaryDataLogic(USART_TypeDef *USARTx)
1216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_DATAINV));
1218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure transfer bit order (either Less or Most Significant Bit First)
1222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_SetTransferBitOrder
1225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  BitOrder This parameter can be one of the following values:
1227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
1228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferBitOrder(USART_TypeDef *USARTx, uint32_t BitOrder)
1232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_MSBFIRST, BitOrder);
1234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return transfer bit order (either Less or Most Significant Bit First)
1238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_GetTransferBitOrder
1241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
1244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferBitOrder(USART_TypeDef *USARTx)
1247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_MSBFIRST));
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 25


1249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Auto Baud-Rate Detection
1253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_EnableAutoBaudRate
1256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableAutoBaudRate(USART_TypeDef *USARTx)
1260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_ABREN);
1262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Auto Baud-Rate Detection
1266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_DisableAutoBaudRate
1269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableAutoBaudRate(USART_TypeDef *USARTx)
1273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_ABREN);
1275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Auto Baud-Rate Detection mechanism is enabled
1279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_IsEnabledAutoBaud
1282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledAutoBaud(USART_TypeDef *USARTx)
1286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_ABREN) == (USART_CR2_ABREN)) ? 1UL : 0UL);
1288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Auto Baud-Rate mode bits
1292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_SetAutoBaudRateMode
1295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  AutoBaudRateMode This parameter can be one of the following values:
1297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
1298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME (*)
1300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME (*)
1301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
1302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
1303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetAutoBaudRateMode(USART_TypeDef *USARTx, uint32_t AutoBaudRateMode)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 26


1306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ABRMODE, AutoBaudRateMode);
1308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Auto Baud-Rate mode
1312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_GetAutoBaudRateMode
1315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
1318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME (*)
1320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME (*)
1321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
1322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
1323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetAutoBaudRateMode(USART_TypeDef *USARTx)
1325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ABRMODE));
1327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Receiver Timeout
1331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_EnableRxTimeout
1332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRxTimeout(USART_TypeDef *USARTx)
1336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_RTOEN);
1338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Receiver Timeout
1342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_DisableRxTimeout
1343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRxTimeout(USART_TypeDef *USARTx)
1347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_RTOEN);
1349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Receiver Timeout feature is enabled
1353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_IsEnabledRxTimeout
1354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledRxTimeout(USART_TypeDef *USARTx)
1358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_RTOEN) == (USART_CR2_RTOEN)) ? 1UL : 0UL);
1360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 27


1363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Address of the USART node.
1364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   This is used in multiprocessor communication during Mute mode or Stop mode,
1365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         for wake up with address mark detection.
1366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   4bits address node is used when 4-bit Address Detection is selected in ADDM7.
1367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (b7-b4 should be set to 0)
1368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         8bits address node is used when 7-bit Address Detection is selected in ADDM7.
1369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (This is used in multiprocessor communication during Mute mode or Stop mode,
1370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         for wake up with 7-bit address mark detection.
1371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         The MSB of the character sent by the transmitter should be equal to 1.
1372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         It may also be used for character detection during normal reception,
1373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Mute mode inactive (for example, end of block detection in ModBus protocol).
1374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         In this case, the whole received character (8-bit) is compared to the ADD[7:0]
1375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         value and CMF flag is set on match)
1376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_ConfigNodeAddress\n
1377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          ADDM7         LL_USART_ConfigNodeAddress
1378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  AddressLen This parameter can be one of the following values:
1380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  NodeAddress 4 or 7 bit Address of the USART node.
1383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigNodeAddress(USART_TypeDef *USARTx, uint32_t AddressLen, uint32_
1386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ADD | USART_CR2_ADDM7,
1388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****              (uint32_t)(AddressLen | (NodeAddress << USART_CR2_ADD_Pos)));
1389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return 8 bit Address of the USART node as set in ADD field of CR2.
1393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   If 4-bit Address Detection is selected in ADDM7,
1394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         only 4bits (b3-b0) of returned value are relevant (b31-b4 are not relevant)
1395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         If 7-bit Address Detection is selected in ADDM7,
1396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         only 8bits (b7-b0) of returned value are relevant (b31-b8 are not relevant)
1397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_GetNodeAddress
1398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Address of the USART node (Value between Min_Data=0 and Max_Data=255)
1400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddress(USART_TypeDef *USARTx)
1402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADD) >> USART_CR2_ADD_Pos);
1404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Length of Node Address used in Address Detection mode (7-bit or 4-bit)
1408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ADDM7         LL_USART_GetNodeAddressLen
1409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddressLen(USART_TypeDef *USARTx)
1415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADDM7));
1417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 28


1420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable RTS HW Flow Control
1421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_EnableRTSHWFlowCtrl
1424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRTSHWFlowCtrl(USART_TypeDef *USARTx)
1428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_RTSE);
1430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable RTS HW Flow Control
1434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_DisableRTSHWFlowCtrl
1437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRTSHWFlowCtrl(USART_TypeDef *USARTx)
1441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_RTSE);
1443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable CTS HW Flow Control
1447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_EnableCTSHWFlowCtrl
1450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableCTSHWFlowCtrl(USART_TypeDef *USARTx)
1454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_CTSE);
1456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable CTS HW Flow Control
1460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_DisableCTSHWFlowCtrl
1463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableCTSHWFlowCtrl(USART_TypeDef *USARTx)
1467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_CTSE);
1469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure HW Flow Control mode (both CTS and RTS)
1473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_SetHWFlowCtrl\n
1476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_SetHWFlowCtrl
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 29


1477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  HardwareFlowControl This parameter can be one of the following values:
1479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetHWFlowCtrl(USART_TypeDef *USARTx, uint32_t HardwareFlowControl)
1486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE, HardwareFlowControl);
1488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return HW Flow Control configuration (both CTS and RTS)
1492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_GetHWFlowCtrl\n
1495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_GetHWFlowCtrl
1496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetHWFlowCtrl(USART_TypeDef *USARTx)
1504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE));
1506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable One bit sampling method
1510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_EnableOneBitSamp
1511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOneBitSamp(USART_TypeDef *USARTx)
1515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable One bit sampling method
1521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_DisableOneBitSamp
1522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOneBitSamp(USART_TypeDef *USARTx)
1526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if One bit sampling method is enabled
1532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_IsEnabledOneBitSamp
1533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 30


1534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOneBitSamp(USART_TypeDef *USARTx)
1537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_ONEBIT) == (USART_CR3_ONEBIT)) ? 1UL : 0UL);
1539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Overrun detection
1543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_EnableOverrunDetect
1544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOverrunDetect(USART_TypeDef *USARTx)
1548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_OVRDIS);
1550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Overrun detection
1554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_DisableOverrunDetect
1555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOverrunDetect(USART_TypeDef *USARTx)
1559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_OVRDIS);
1561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Overrun detection is enabled
1565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_IsEnabledOverrunDetect
1566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOverrunDetect(USART_TypeDef *USARTx)
1570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_OVRDIS) != USART_CR3_OVRDIS) ? 1UL : 0UL);
1572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR1_UESM)
1575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR3_WUS)
1576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Select event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
1579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_SetWKUPType
1581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Type This parameter can be one of the following values:
1583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWKUPType(USART_TypeDef *USARTx, uint32_t Type)
1589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_WUS, Type);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 31


1591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
1596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_GetWKUPType
1598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWKUPType(USART_TypeDef *USARTx)
1605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_WUS));
1607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR3_WUS */
1610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR1_UESM */
1611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure USART BRR register for achieving expected Baud Rate value.
1613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Compute and set USARTDIV value in BRR Register (full BRR content)
1614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         according to used Peripheral Clock, Oversampling mode, and expected Baud Rate values
1615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Peripheral clock and Baud rate values provided as function parameters should be valid
1616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (Baud rate value != 0)
1617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In case of oversampling by 16 and 8, BRR content must be greater than or equal to 16d.
1618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_SetBaudRate
1619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  BaudRate Baud Rate
1625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t OverS
1628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                           uint32_t BaudRate)
1629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t usartdiv;
1631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t brrtemp;
1632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
1634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   {
1635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     usartdiv = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, BaudRate));
1636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     brrtemp = usartdiv & 0xFFF0U;
1637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
1638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     USARTx->BRR = brrtemp;
1639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   }
1640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   else
1641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   {
1642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, BaudRate));
1643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   }
1644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return current Baud Rate value, according to USARTDIV present in BRR register
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 32


1648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (full BRR content), and to used Peripheral Clock and Oversampling mode values
1649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In case of non-initialized or invalid value stored in BRR register, value 0 will be ret
1650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In case of oversampling by 16 and 8, BRR content must be greater than or equal to 16d.
1651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_GetBaudRate
1652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Baud Rate
1658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t O
1660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t usartdiv;
1662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t brrresult = 0x0U;
1663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   usartdiv = USARTx->BRR;
1665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   if (usartdiv == 0U)
1667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   {
1668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     /* Do not perform a division by 0 */
1669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   }
1670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   else if (OverSampling == LL_USART_OVERSAMPLING_8)
1671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   {
1672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     usartdiv = (uint16_t)((usartdiv & 0xFFF0U) | ((usartdiv & 0x0007U) << 1U)) ;
1673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     if (usartdiv != 0U)
1674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     {
1675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****       brrresult = (PeriphClk * 2U) / usartdiv;
1676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     }
1677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   }
1678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   else
1679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   {
1680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     if ((usartdiv & 0xFFFFU) != 0U)
1681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     {
1682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****       brrresult = PeriphClk / usartdiv;
1683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     }
1684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   }
1685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (brrresult);
1686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Receiver Time Out Value (expressed in nb of bits duration)
1690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll RTOR         RTO           LL_USART_SetRxTimeout
1691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Timeout Value between Min_Data=0x00 and Max_Data=0x00FFFFFF
1693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRxTimeout(USART_TypeDef *USARTx, uint32_t Timeout)
1696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->RTOR, USART_RTOR_RTO, Timeout);
1698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Get Receiver Time Out Value (expressed in nb of bits duration)
1702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll RTOR         RTO           LL_USART_GetRxTimeout
1703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x00FFFFFF
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 33


1705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRxTimeout(USART_TypeDef *USARTx)
1707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->RTOR, USART_RTOR_RTO));
1709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
1712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Block Length value in reception
1714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll RTOR         BLEN          LL_USART_SetBlockLength
1715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  BlockLength Value between Min_Data=0x00 and Max_Data=0xFF
1717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBlockLength(USART_TypeDef *USARTx, uint32_t BlockLength)
1720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->RTOR, USART_RTOR_BLEN, BlockLength << USART_RTOR_BLEN_Pos);
1722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Get Block Length value in reception
1726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll RTOR         BLEN          LL_USART_GetBlockLength
1727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
1729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBlockLength(USART_TypeDef *USARTx)
1731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->RTOR, USART_RTOR_BLEN) >> USART_RTOR_BLEN_Pos);
1733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
1735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
1738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
1741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_IRDA Configuration functions related to Irda feature
1742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
1743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable IrDA mode
1747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_EnableIrda
1750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIrda(USART_TypeDef *USARTx)
1754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
1756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable IrDA mode
1760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 34


1762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_DisableIrda
1763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIrda(USART_TypeDef *USARTx)
1767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_IREN);
1769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if IrDA mode is enabled
1773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_IsEnabledIrda
1776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIrda(USART_TypeDef *USARTx)
1780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_IREN) == (USART_CR3_IREN)) ? 1UL : 0UL);
1782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure IrDA Power Mode (Normal or Low Power)
1786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_SetIrdaPowerMode
1789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  PowerMode This parameter can be one of the following values:
1791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
1792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_LOW
1793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPowerMode(USART_TypeDef *USARTx, uint32_t PowerMode)
1796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_IRLP, PowerMode);
1798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve IrDA Power Mode configuration (Normal or Low Power)
1802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_GetIrdaPowerMode
1805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
1808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPowerMode(USART_TypeDef *USARTx)
1811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_IRLP));
1813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Irda prescaler value, used for dividing the USART clock source
1817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
1818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 35


1819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetIrdaPrescaler
1821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0x00 and Max_Data=0xFF
1823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, (uint16_t)USART_GTPR_PSC, (uint16_t)PrescalerValue);
1828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Irda prescaler value, used for dividing the USART clock source
1832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
1833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetIrdaPrescaler
1836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Irda prescaler value (Value between Min_Data=0x00 and Max_Data=0xFF)
1838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPrescaler(USART_TypeDef *USARTx)
1840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
1842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
1846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_IRDA_SUPPORT */
1848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
1850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_Smartcard Configuration functions related to Smartcard feat
1851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
1852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Smartcard NACK transmission
1856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_EnableSmartcardNACK
1859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcardNACK(USART_TypeDef *USARTx)
1863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_NACK);
1865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Smartcard NACK transmission
1869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_DisableSmartcardNACK
1872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcardNACK(USART_TypeDef *USARTx)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 36


1876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_NACK);
1878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Smartcard NACK transmission is enabled
1882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_IsEnabledSmartcardNACK
1885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcardNACK(USART_TypeDef *USARTx)
1889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_NACK) == (USART_CR3_NACK)) ? 1UL : 0UL);
1891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Smartcard mode
1895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_EnableSmartcard
1898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcard(USART_TypeDef *USARTx)
1902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
1904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Smartcard mode
1908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_DisableSmartcard
1911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcard(USART_TypeDef *USARTx)
1915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_SCEN);
1917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Smartcard mode is enabled
1921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_IsEnabledSmartcard
1924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcard(USART_TypeDef *USARTx)
1928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_SCEN) == (USART_CR3_SCEN)) ? 1UL : 0UL);
1930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 37


1933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Smartcard Auto-Retry Count value (SCARCNT[2:0] bits)
1934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   This bit-field specifies the number of retries in transmit and receive, in Smartcard mo
1937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         In transmission mode, it specifies the number of automatic retransmission retries, befo
1938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         generating a transmission error (FE bit set).
1939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         In reception mode, it specifies the number or erroneous reception trials, before genera
1940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         reception error (RXNE and PE bits set)
1941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          SCARCNT       LL_USART_SetSmartcardAutoRetryCount
1942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  AutoRetryCount Value between Min_Data=0 and Max_Data=7
1944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardAutoRetryCount(USART_TypeDef *USARTx, uint32_t AutoRetryC
1947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_SCARCNT, AutoRetryCount << USART_CR3_SCARCNT_Pos);
1949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Smartcard Auto-Retry Count value (SCARCNT[2:0] bits)
1953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          SCARCNT       LL_USART_GetSmartcardAutoRetryCount
1956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Smartcard Auto-Retry Count value (Value between Min_Data=0 and Max_Data=7)
1958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardAutoRetryCount(USART_TypeDef *USARTx)
1960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_SCARCNT) >> USART_CR3_SCARCNT_Pos);
1962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Smartcard prescaler value, used for dividing the USART clock
1966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
1967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetSmartcardPrescaler
1970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0 and Max_Data=31
1972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, (uint16_t)USART_GTPR_PSC, (uint16_t)PrescalerValue);
1977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Smartcard prescaler value, used for dividing the USART clock
1981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
1982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetSmartcardPrescaler
1985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Smartcard prescaler value (Value between Min_Data=0 and Max_Data=31)
1987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardPrescaler(USART_TypeDef *USARTx)
1989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 38


1990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
1991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Smartcard Guard time value, expressed in nb of baud clocks periods
1995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
1996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_SetSmartcardGuardTime
1999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  GuardTime Value between Min_Data=0x00 and Max_Data=0xFF
2001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardGuardTime(USART_TypeDef *USARTx, uint32_t GuardTime)
2004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, (uint16_t)USART_GTPR_GT, (uint16_t)(GuardTime << USART_GTPR_GT_Pos));
2006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Smartcard Guard time value, expressed in nb of baud clocks periods
2010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
2011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_GetSmartcardGuardTime
2014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Smartcard Guard time value (Value between Min_Data=0x00 and Max_Data=0xFF)
2016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardGuardTime(USART_TypeDef *USARTx)
2018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_GT) >> USART_GTPR_GT_Pos);
2020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
2024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
2026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_HalfDuplex Configuration functions related to Half Duplex f
2028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
2029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Single Wire Half-Duplex mode
2033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_EnableHalfDuplex
2036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableHalfDuplex(USART_TypeDef *USARTx)
2040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2041:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
2042:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2043:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2044:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2045:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Single Wire Half-Duplex mode
2046:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 39


2047:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2048:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_DisableHalfDuplex
2049:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2050:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2051:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2052:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableHalfDuplex(USART_TypeDef *USARTx)
2053:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2054:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_HDSEL);
2055:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2056:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2057:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Single Wire Half-Duplex mode is enabled
2059:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2060:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2061:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_IsEnabledHalfDuplex
2062:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2063:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2064:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2065:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledHalfDuplex(USART_TypeDef *USARTx)
2066:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2067:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_HDSEL) == (USART_CR3_HDSEL)) ? 1UL : 0UL);
2068:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2071:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
2072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2073:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2074:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
2075:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_LIN Configuration functions related to LIN feature
2076:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
2077:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2078:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2079:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2080:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set LIN Break Detection Length
2081:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2082:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2083:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_SetLINBrkDetectionLen
2084:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2085:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  LINBDLength This parameter can be one of the following values:
2086:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
2087:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
2088:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2089:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2090:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLINBrkDetectionLen(USART_TypeDef *USARTx, uint32_t LINBDLength)
2091:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBDL, LINBDLength);
2093:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2094:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2095:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2096:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return LIN Break Detection Length
2097:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2098:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2099:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_GetLINBrkDetectionLen
2100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
2102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
2103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 40


2104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLINBrkDetectionLen(USART_TypeDef *USARTx)
2106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBDL));
2108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable LIN mode
2112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_EnableLIN
2115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableLIN(USART_TypeDef *USARTx)
2119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
2121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable LIN mode
2125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_DisableLIN
2128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableLIN(USART_TypeDef *USARTx)
2132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_LINEN);
2134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if LIN mode is enabled
2138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_IsEnabledLIN
2141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledLIN(USART_TypeDef *USARTx)
2145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_LINEN) == (USART_CR2_LINEN)) ? 1UL : 0UL);
2147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
2151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_LIN_SUPPORT */
2153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_DE Configuration functions related to Driver Enable feature
2155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
2156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set DEDT (Driver Enable De-Assertion Time), Time value expressed on 5 bits ([4:0] bits)
2160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 41


2161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          DEDT          LL_USART_SetDEDeassertionTime
2163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Time Value between Min_Data=0 and Max_Data=31
2165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDEDeassertionTime(USART_TypeDef *USARTx, uint32_t Time)
2168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_DEDT, Time << USART_CR1_DEDT_Pos);
2170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return DEDT (Driver Enable De-Assertion Time)
2174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          DEDT          LL_USART_GetDEDeassertionTime
2177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Time value expressed on 5 bits ([4:0] bits) : Value between Min_Data=0 and Max_Data=31
2179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDEDeassertionTime(USART_TypeDef *USARTx)
2181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_DEDT) >> USART_CR1_DEDT_Pos);
2183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set DEAT (Driver Enable Assertion Time), Time value expressed on 5 bits ([4:0] bits).
2187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          DEAT          LL_USART_SetDEAssertionTime
2190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Time Value between Min_Data=0 and Max_Data=31
2192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDEAssertionTime(USART_TypeDef *USARTx, uint32_t Time)
2195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_DEAT, Time << USART_CR1_DEAT_Pos);
2197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return DEAT (Driver Enable Assertion Time)
2201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          DEAT          LL_USART_GetDEAssertionTime
2204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Time value expressed on 5 bits ([4:0] bits) : Value between Min_Data=0 and Max_Data=31
2206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDEAssertionTime(USART_TypeDef *USARTx)
2208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_DEAT) >> USART_CR1_DEAT_Pos);
2210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Driver Enable (DE) Mode
2214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_EnableDEMode
2217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 42


2218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDEMode(USART_TypeDef *USARTx)
2221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_DEM);
2223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Driver Enable (DE) Mode
2227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_DisableDEMode
2230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDEMode(USART_TypeDef *USARTx)
2234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_DEM);
2236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Driver Enable (DE) Mode is enabled
2240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_IsEnabledDEMode
2243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledDEMode(USART_TypeDef *USARTx)
2247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_DEM) == (USART_CR3_DEM)) ? 1UL : 0UL);
2249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Select Driver Enable Polarity
2253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DEP           LL_USART_SetDESignalPolarity
2256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
2258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_HIGH
2259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_LOW
2260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDESignalPolarity(USART_TypeDef *USARTx, uint32_t Polarity)
2263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_DEP, Polarity);
2265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Driver Enable Polarity
2269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DEP           LL_USART_GetDESignalPolarity
2272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
2274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_HIGH
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 43


2275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_LOW
2276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDESignalPolarity(USART_TypeDef *USARTx)
2278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_DEP));
2280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
2284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_AdvancedConfiguration Advanced Configurations services
2287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
2288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Asynchronous Mode (UART)
2292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In UART mode, the following bits must be kept cleared:
2293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register (if LIN feature is supported),
2294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
2295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register (if Smartcard feature is supported),
2296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register (if Irda feature is supported),
2297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function (if LIN feature is suppo
2300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function (if Smartcard featu
2302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function (if Irda feature is supp
2303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Other remaining configurations items related to Asynchronous Mode
2305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
2306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         dedicated functions
2307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigAsyncMode\n
2308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigAsyncMode\n
2309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigAsyncMode\n
2310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigAsyncMode\n
2311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigAsyncMode
2312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigAsyncMode(USART_TypeDef *USARTx)
2316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* In Asynchronous mode, the following bits must be kept cleared:
2318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - LINEN (if LIN feature is supported), CLKEN bits in the USART_CR2 register,
2319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - SCEN (if Smartcard feature is supported), IREN (if Irda feature is supported) and HDSEL bits in
2320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
2322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
2323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
2325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_LIN_SUPPORT */
2326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
2327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
2329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
2331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_IRDA_SUPPORT */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 44


2332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_HDSEL));
2335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_HDSEL);
2337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_IRDA_SUPPORT */
2338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
2339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Synchronous Mode
2343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In Synchronous mode, the following bits must be kept cleared:
2344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register (if LIN feature is supported),
2345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register (if Smartcard feature is supported),
2346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register (if Irda feature is supported),
2347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         This function also sets the USART in Synchronous mode.
2349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
2350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
2351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function (if LIN feature is suppo
2353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function (if Irda feature is supp
2354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function (if Smartcard featu
2355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
2357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Other remaining configurations items related to Synchronous Mode
2358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, Clock Polarity, ...) should be set using
2359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         dedicated functions
2360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSyncMode\n
2361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSyncMode\n
2362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSyncMode\n
2363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigSyncMode\n
2364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSyncMode
2365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSyncMode(USART_TypeDef *USARTx)
2369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* In Synchronous mode, the following bits must be kept cleared:
2371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - LINEN (if LIN feature is supported) bit in the USART_CR2 register,
2372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - SCEN (if Smartcard feature is supported), IREN (if Irda feature is supported) and HDSEL bits in
2373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
2375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
2376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_LIN_SUPPORT */
2377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
2378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
2380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
2382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_IRDA_SUPPORT */
2383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_HDSEL));
2386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_HDSEL);
2388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_IRDA_SUPPORT */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 45


2389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
2390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* set the UART/USART in Synchronous mode */
2391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
2392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
2395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in LIN Mode
2397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In LIN mode, the following bits must be kept cleared:
2398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
2399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register (if Smartcard feature is supported),
2400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register (if Irda feature is supported),
2401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         This function also set the UART/USART in LIN mode.
2403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
2408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function (if Smartcard featu
2409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function (if Irda feature is supp
2410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Set LINEN in CR2 using @ref LL_USART_EnableLIN() function
2412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Other remaining configurations items related to LIN Mode
2413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (as Baud Rate, Word length, LIN Break Detection Length, ...) should be set using
2414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         dedicated functions
2415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_ConfigLINMode\n
2416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigLINMode\n
2417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          LINEN         LL_USART_ConfigLINMode\n
2418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigLINMode\n
2419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigLINMode\n
2420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigLINMode
2421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigLINMode(USART_TypeDef *USARTx)
2425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* In LIN mode, the following bits must be kept cleared:
2427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - STOP and CLKEN bits in the USART_CR2 register,
2428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - IREN (if Irda feature is supported) , SCEN (if Smartcard feature is supported)and HDSEL bits in
2429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_CLKEN | USART_CR2_STOP));
2431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
2432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_SCEN | USART_CR3_HDSEL));
2434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
2436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_IRDA_SUPPORT */
2437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_HDSEL));
2440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_HDSEL);
2442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_IRDA_SUPPORT */
2443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
2444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* Set the UART/USART in LIN mode */
2445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 46


2446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_LIN_SUPPORT */
2448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Half Duplex Mode
2451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In Half Duplex mode, the following bits must be kept cleared:
2452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register (if LIN feature is supported),
2453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
2454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register (if Smartcard feature is supported),
2455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register (if Irda feature is supported),
2456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         This function also sets the UART/USART in Half Duplex mode.
2457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function (if LIN feature is suppo
2461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function (if Smartcard featu
2463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function (if Irda feature is supp
2464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Set HDSEL in CR3 using @ref LL_USART_EnableHalfDuplex() function
2465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Other remaining configurations items related to Half Duplex Mode
2466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
2467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         dedicated functions
2468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigHalfDuplexMode\n
2469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigHalfDuplexMode\n
2470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigHalfDuplexMode\n
2471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigHalfDuplexMode\n
2472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigHalfDuplexMode
2473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigHalfDuplexMode(USART_TypeDef *USARTx)
2477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* In Half Duplex mode, the following bits must be kept cleared:
2479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - LINEN (if LIN feature is supported) and CLKEN bits in the USART_CR2 register,
2480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - SCEN (if Smartcard feature is supported) and IREN (if Irda feature is supported) bits in the US
2481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
2483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
2484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
2486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_LIN_SUPPORT */
2487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
2488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN));
2490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN));
2492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_IRDA_SUPPORT */
2493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN));
2496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_IRDA_SUPPORT */
2497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
2498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* set the UART/USART in Half Duplex mode */
2499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
2500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 47


2503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Smartcard Mode
2505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In Smartcard mode, the following bits must be kept cleared:
2506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register (if LIN feature is supported),
2507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register (if Irda feature is supported),
2508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         This function also configures Stop bits to 1.5 bits and
2510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         sets the USART in Smartcard mode (SCEN bit).
2511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Clock Output is also enabled (CLKEN).
2512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function (if LIN feature is suppo
2516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function (if Irda feature is supp
2517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
2519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
2520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Set SCEN in CR3 using @ref LL_USART_EnableSmartcard() function
2521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Other remaining configurations items related to Smartcard Mode
2522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
2523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         dedicated functions
2524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSmartcardMode\n
2525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigSmartcardMode\n
2526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSmartcardMode\n
2527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSmartcardMode\n
2528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSmartcardMode
2529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSmartcardMode(USART_TypeDef *USARTx)
2533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* In Smartcard mode, the following bits must be kept cleared:
2535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - LINEN (if LIN feature is supported) bit in the USART_CR2 register,
2536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - IREN (if Irda feature is supported) and HDSEL bits in the USART_CR3 register.
2537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
2539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
2540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_LIN_SUPPORT */
2541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_HDSEL));
2543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_HDSEL));
2545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_IRDA_SUPPORT */
2546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* Configure Stop bits to 1.5 bits */
2547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* Synchronous mode is activated by default */
2548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, (USART_CR2_STOP_0 | USART_CR2_STOP_1 | USART_CR2_CLKEN));
2549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* set the UART/USART in Smartcard mode */
2550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
2551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
2553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Irda Mode
2557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In IRDA mode, the following bits must be kept cleared:
2558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register (if LIN feature is supported),
2559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 48


2560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register (if Smartcard feature is supported),
2561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         This function also sets the UART/USART in IRDA mode (IREN bit).
2563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function (if LIN feature is suppo
2567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function (if Smartcard featu
2569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
2571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Set IREN in CR3 using @ref LL_USART_EnableIrda() function
2572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Other remaining configurations items related to Irda Mode
2573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (as Baud Rate, Word length, Power mode, ...) should be set using
2574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         dedicated functions
2575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigIrdaMode\n
2576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigIrdaMode\n
2577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigIrdaMode\n
2578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigIrdaMode\n
2579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigIrdaMode\n
2580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigIrdaMode
2581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigIrdaMode(USART_TypeDef *USARTx)
2585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* In IRDA mode, the following bits must be kept cleared:
2587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - LINEN (if LIN feature is supported), STOP and CLKEN bits in the USART_CR2 register,
2588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - SCEN (if Smartcard feature is supported) and HDSEL bits in the USART_CR3 register.
2589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
2591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN | USART_CR2_STOP));
2592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_CLKEN | USART_CR2_STOP));
2594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_LIN_SUPPORT */
2595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
2596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
2597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_HDSEL));
2599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
2600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* set the UART/USART in IRDA mode */
2601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
2602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_IRDA_SUPPORT */
2604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Multi processor Mode
2607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (several USARTs connected in a network, one of the USARTs can be the master,
2608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         its TX output connected to the RX inputs of the other slaves USARTs).
2609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In MultiProcessor mode, the following bits must be kept cleared:
2610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register (if LIN feature is supported),
2611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
2612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register (if Smartcard feature is supported),
2613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register (if Irda feature is supported),
2614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function (if LIN feature is suppo
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 49


2617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function (if Smartcard featu
2619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function (if Irda feature is supp
2620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Other remaining configurations items related to Multi processor Mode
2622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (as Baud Rate, Wake Up Method, Node address, ...) should be set using
2623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         dedicated functions
2624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigMultiProcessMode\n
2625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigMultiProcessMode\n
2626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigMultiProcessMode\n
2627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigMultiProcessMode\n
2628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigMultiProcessMode
2629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigMultiProcessMode(USART_TypeDef *USARTx)
2633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* In Multi Processor mode, the following bits must be kept cleared:
2635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - LINEN (if LIN feature is supported) and CLKEN bits in the USART_CR2 register,
2636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - IREN (if Irda feature is supported), SCEN (if Smartcard feature is supported) and HDSEL bits in
2637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
2639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
2640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
2642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_LIN_SUPPORT */
2643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
2644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
2646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
2648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_IRDA_SUPPORT */
2649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
2652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_HDSEL));
2654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_IRDA_SUPPORT */
2655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT*/
2656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
2660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_FLAG_Management FLAG_Management
2663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
2664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Parity Error Flag is set or not
2668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          PE            LL_USART_IsActiveFlag_PE
2669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_PE(USART_TypeDef *USARTx)
2673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 50


2674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_PE) == (USART_ISR_PE)) ? 1UL : 0UL);
2675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Framing Error Flag is set or not
2679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          FE            LL_USART_IsActiveFlag_FE
2680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_FE(USART_TypeDef *USARTx)
2684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_FE) == (USART_ISR_FE)) ? 1UL : 0UL);
2686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Noise error detected Flag is set or not
2690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          NE            LL_USART_IsActiveFlag_NE
2691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_NE(USART_TypeDef *USARTx)
2695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_NE) == (USART_ISR_NE)) ? 1UL : 0UL);
2697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART OverRun Error Flag is set or not
2701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          ORE           LL_USART_IsActiveFlag_ORE
2702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ORE(USART_TypeDef *USARTx)
2706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_ORE) == (USART_ISR_ORE)) ? 1UL : 0UL);
2708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART IDLE line detected Flag is set or not
2712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          IDLE          LL_USART_IsActiveFlag_IDLE
2713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_IDLE(USART_TypeDef *USARTx)
2717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_IDLE) == (USART_ISR_IDLE)) ? 1UL : 0UL);
2719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Read Data Register Not Empty Flag is set or not
2723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          RXNE          LL_USART_IsActiveFlag_RXNE
2724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RXNE(USART_TypeDef *USARTx)
2728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_RXNE) == (USART_ISR_RXNE)) ? 1UL : 0UL);
2730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 51


2731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Transmission Complete Flag is set or not
2734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          TC            LL_USART_IsActiveFlag_TC
2735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TC(USART_TypeDef *USARTx)
2739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TC) == (USART_ISR_TC)) ? 1UL : 0UL);
2741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Transmit Data Register Empty Flag is set or not
2745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          TXE           LL_USART_IsActiveFlag_TXE
2746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TXE(USART_TypeDef *USARTx)
2750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TXE) == (USART_ISR_TXE)) ? 1UL : 0UL);
2752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
2755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART LIN Break Detection Flag is set or not
2757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          LBDF          LL_USART_IsActiveFlag_LBD
2760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_LBD(USART_TypeDef *USARTx)
2764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_LBDF) == (USART_ISR_LBDF)) ? 1UL : 0UL);
2766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_LIN_SUPPORT */
2768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART CTS interrupt Flag is set or not
2771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
2772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
2773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          CTSIF         LL_USART_IsActiveFlag_nCTS
2774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_nCTS(USART_TypeDef *USARTx)
2778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_CTSIF) == (USART_ISR_CTSIF)) ? 1UL : 0UL);
2780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART CTS Flag is set or not
2784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
2785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
2786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          CTS           LL_USART_IsActiveFlag_CTS
2787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 52


2788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_CTS(USART_TypeDef *USARTx)
2791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_CTS) == (USART_ISR_CTS)) ? 1UL : 0UL);
2793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Receiver Time Out Flag is set or not
2797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          RTOF          LL_USART_IsActiveFlag_RTO
2798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RTO(USART_TypeDef *USARTx)
2802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_RTOF) == (USART_ISR_RTOF)) ? 1UL : 0UL);
2804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
2807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART End Of Block Flag is set or not
2809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          EOBF          LL_USART_IsActiveFlag_EOB
2812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_EOB(USART_TypeDef *USARTx)
2816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_EOBF) == (USART_ISR_EOBF)) ? 1UL : 0UL);
2818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
2820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Auto-Baud Rate Error Flag is set or not
2823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
2824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
2825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          ABRE          LL_USART_IsActiveFlag_ABRE
2826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ABRE(USART_TypeDef *USARTx)
2830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_ABRE) == (USART_ISR_ABRE)) ? 1UL : 0UL);
2832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Auto-Baud Rate Flag is set or not
2836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
2837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
2838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          ABRF          LL_USART_IsActiveFlag_ABR
2839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ABR(USART_TypeDef *USARTx)
2843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_ABRF) == (USART_ISR_ABRF)) ? 1UL : 0UL);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 53


2845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Busy Flag is set or not
2849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          BUSY          LL_USART_IsActiveFlag_BUSY
2850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_BUSY(USART_TypeDef *USARTx)
2854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_BUSY) == (USART_ISR_BUSY)) ? 1UL : 0UL);
2856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Character Match Flag is set or not
2860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          CMF           LL_USART_IsActiveFlag_CM
2861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_CM(USART_TypeDef *USARTx)
2865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_CMF) == (USART_ISR_CMF)) ? 1UL : 0UL);
2867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Send Break Flag is set or not
2871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          SBKF          LL_USART_IsActiveFlag_SBK
2872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_SBK(USART_TypeDef *USARTx)
2876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_SBKF) == (USART_ISR_SBKF)) ? 1UL : 0UL);
2878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Receive Wake Up from mute mode Flag is set or not
2882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          RWU           LL_USART_IsActiveFlag_RWU
2883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RWU(USART_TypeDef *USARTx)
2887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_RWU) == (USART_ISR_RWU)) ? 1UL : 0UL);
2889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR1_UESM)
2892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR3_WUFIE)
2893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Wake Up from stop mode Flag is set or not
2895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
2896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
2897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          WUF           LL_USART_IsActiveFlag_WKUP
2898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_WKUP(USART_TypeDef *USARTx)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 54


2902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_WUF) == (USART_ISR_WUF)) ? 1UL : 0UL);
2904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR3_WUFIE */
2907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR1_UESM */
2908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Transmit Enable Acknowledge Flag is set or not
2910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          TEACK         LL_USART_IsActiveFlag_TEACK
2911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TEACK(USART_TypeDef *USARTx)
2915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TEACK) == (USART_ISR_TEACK)) ? 1UL : 0UL);
2917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Receive Enable Acknowledge Flag is set or not
2921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          REACK         LL_USART_IsActiveFlag_REACK
2922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_REACK(USART_TypeDef *USARTx)
2926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_REACK) == (USART_ISR_REACK)) ? 1UL : 0UL);
2928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear Parity Error Flag
2932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          PECF          LL_USART_ClearFlag_PE
2933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_PE(USART_TypeDef *USARTx)
2937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_PECF);
2939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear Framing Error Flag
2943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          FECF          LL_USART_ClearFlag_FE
2944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_FE(USART_TypeDef *USARTx)
2948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_FECF);
2950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear Noise Error detected Flag
2954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          NCF           LL_USART_ClearFlag_NE
2955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_NE(USART_TypeDef *USARTx)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 55


2959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_NCF);
2961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear OverRun Error Flag
2965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          ORECF         LL_USART_ClearFlag_ORE
2966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_ORE(USART_TypeDef *USARTx)
2970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_ORECF);
2972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear IDLE line detected Flag
2976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          IDLECF        LL_USART_ClearFlag_IDLE
2977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_IDLE(USART_TypeDef *USARTx)
2981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_IDLECF);
2983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear Transmission Complete Flag
2987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          TCCF          LL_USART_ClearFlag_TC
2988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_TC(USART_TypeDef *USARTx)
2992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_TCCF);
2994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
2998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear LIN Break Detection Flag
3000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
3001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
3002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          LBDCF         LL_USART_ClearFlag_LBD
3003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_LBD(USART_TypeDef *USARTx)
3007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_LBDCF);
3009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_LIN_SUPPORT */
3011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear CTS Interrupt Flag
3014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
3015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 56


3016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          CTSCF         LL_USART_ClearFlag_nCTS
3017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_nCTS(USART_TypeDef *USARTx)
3021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_CTSCF);
3023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear Receiver Time Out Flag
3027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          RTOCF         LL_USART_ClearFlag_RTO
3028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_RTO(USART_TypeDef *USARTx)
3032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_RTOCF);
3034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
3037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear End Of Block Flag
3039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
3040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
3041:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          EOBCF         LL_USART_ClearFlag_EOB
3042:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3043:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3044:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3045:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_EOB(USART_TypeDef *USARTx)
3046:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3047:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_EOBCF);
3048:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3049:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
3050:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3051:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3052:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear Character Match Flag
3053:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          CMCF          LL_USART_ClearFlag_CM
3054:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3055:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3056:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3057:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_CM(USART_TypeDef *USARTx)
3058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3059:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_CMCF);
3060:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3061:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3062:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR1_UESM)
3063:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR3_WUFIE)
3064:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3065:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear Wake Up from stop mode Flag
3066:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
3067:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
3068:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          WUCF          LL_USART_ClearFlag_WKUP
3069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3071:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_WKUP(USART_TypeDef *USARTx)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 57


3073:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3074:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_WUCF);
3075:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3076:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3077:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR3_WUFIE */
3078:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR1_UESM */
3079:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3080:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
3081:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3082:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3083:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_IT_Management IT_Management
3084:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
3085:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3086:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3087:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3088:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable IDLE Interrupt
3089:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          IDLEIE        LL_USART_EnableIT_IDLE
3090:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3091:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3093:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_IDLE(USART_TypeDef *USARTx)
3094:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3095:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_IDLEIE);
3096:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3097:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3098:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3099:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable RX Not Empty Interrupt
3100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RXNEIE        LL_USART_EnableIT_RXNE
3101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_RXNE(USART_TypeDef *USARTx)
3105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RXNEIE);
3107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Transmission Complete Interrupt
3111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          TCIE          LL_USART_EnableIT_TC
3112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_TC(USART_TypeDef *USARTx)
3116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_TCIE);
3118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable TX Empty Interrupt
3122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          TXEIE         LL_USART_EnableIT_TXE
3123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_TXE(USART_TypeDef *USARTx)
3127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_TXEIE);
3129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 58


3130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Parity Error Interrupt
3133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          PEIE          LL_USART_EnableIT_PE
3134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_PE(USART_TypeDef *USARTx)
3138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_PEIE);
3140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Character Match Interrupt
3144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          CMIE          LL_USART_EnableIT_CM
3145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_CM(USART_TypeDef *USARTx)
3149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_CMIE);
3151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Receiver Timeout Interrupt
3155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RTOIE         LL_USART_EnableIT_RTO
3156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_RTO(USART_TypeDef *USARTx)
3160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RTOIE);
3162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
3165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable End Of Block Interrupt
3167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
3168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
3169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          EOBIE         LL_USART_EnableIT_EOB
3170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_EOB(USART_TypeDef *USARTx)
3174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_EOBIE);
3176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
3178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
3180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable LIN Break Detection Interrupt
3182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
3183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
3184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LBDIE         LL_USART_EnableIT_LBD
3185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 59


3187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_LBD(USART_TypeDef *USARTx)
3189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LBDIE);
3191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif/* USART_LIN_SUPPORT */
3194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Error Interrupt
3196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   When set, Error Interrupt Enable Bit is enabling interrupt generation in case of a fram
3197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         error, overrun error or noise flag (FE=1 or ORE=1 or NF=1 in the USARTx_ISR register).
3198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           0: Interrupt is inhibited
3199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           1: An interrupt is generated when FE=1 or ORE=1 or NF=1 in the USARTx_ISR register.
3200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          EIE           LL_USART_EnableIT_ERROR
3201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_ERROR(USART_TypeDef *USARTx)
3205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_EIE);
3207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable CTS Interrupt
3211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
3212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
3213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          CTSIE         LL_USART_EnableIT_CTS
3214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_CTS(USART_TypeDef *USARTx)
3218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_CTSIE);
3220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR1_UESM)
3223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR3_WUFIE)
3224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Wake Up from Stop Mode Interrupt
3226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
3227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
3228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          WUFIE         LL_USART_EnableIT_WKUP
3229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_WKUP(USART_TypeDef *USARTx)
3233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_WUFIE);
3235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR3_WUFIE */
3238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR1_UESM */
3239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable IDLE Interrupt
3242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          IDLEIE        LL_USART_DisableIT_IDLE
3243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 60


3244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_IDLE(USART_TypeDef *USARTx)
3247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_IDLEIE);
3249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable RX Not Empty Interrupt
3253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RXNEIE        LL_USART_DisableIT_RXNE
3254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_RXNE(USART_TypeDef *USARTx)
3258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_RXNEIE);
3260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Transmission Complete Interrupt
3264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          TCIE          LL_USART_DisableIT_TC
3265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_TC(USART_TypeDef *USARTx)
3269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_TCIE);
3271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable TX Empty Interrupt
3275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          TXEIE         LL_USART_DisableIT_TXE
3276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_TXE(USART_TypeDef *USARTx)
3280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_TXEIE);
3282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Parity Error Interrupt
3286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          PEIE          LL_USART_DisableIT_PE
3287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_PE(USART_TypeDef *USARTx)
3291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_PEIE);
3293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Character Match Interrupt
3297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          CMIE          LL_USART_DisableIT_CM
3298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 61


3301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_CM(USART_TypeDef *USARTx)
3302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_CMIE);
3304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Receiver Timeout Interrupt
3308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RTOIE         LL_USART_DisableIT_RTO
3309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_RTO(USART_TypeDef *USARTx)
3313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_RTOIE);
3315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
3318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable End Of Block Interrupt
3320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
3321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
3322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          EOBIE         LL_USART_DisableIT_EOB
3323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_EOB(USART_TypeDef *USARTx)
3327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_EOBIE);
3329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
3331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
3333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable LIN Break Detection Interrupt
3335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
3336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
3337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LBDIE         LL_USART_DisableIT_LBD
3338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_LBD(USART_TypeDef *USARTx)
3342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_LBDIE);
3344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_LIN_SUPPORT */
3346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Error Interrupt
3349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   When set, Error Interrupt Enable Bit is enabling interrupt generation in case of a fram
3350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         error, overrun error or noise flag (FE=1 or ORE=1 or NF=1 in the USARTx_ISR register).
3351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           0: Interrupt is inhibited
3352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           1: An interrupt is generated when FE=1 or ORE=1 or NF=1 in the USARTx_ISR register.
3353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          EIE           LL_USART_DisableIT_ERROR
3354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_ERROR(USART_TypeDef *USARTx)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 62


3358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_EIE);
3360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable CTS Interrupt
3364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
3365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
3366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          CTSIE         LL_USART_DisableIT_CTS
3367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_CTS(USART_TypeDef *USARTx)
3371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_CTSIE);
3373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR1_UESM)
3376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR3_WUFIE)
3377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Wake Up from Stop Mode Interrupt
3379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
3380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
3381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          WUFIE         LL_USART_DisableIT_WKUP
3382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_WKUP(USART_TypeDef *USARTx)
3386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_WUFIE);
3388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR3_WUFIE */
3391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR1_UESM */
3392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART IDLE Interrupt  source is enabled or disabled.
3395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          IDLEIE        LL_USART_IsEnabledIT_IDLE
3396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_IDLE(USART_TypeDef *USARTx)
3400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_IDLEIE) == (USART_CR1_IDLEIE)) ? 1UL : 0UL);
3402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART RX Not Empty Interrupt is enabled or disabled.
3406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RXNEIE        LL_USART_IsEnabledIT_RXNE
3407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_RXNE(USART_TypeDef *USARTx)
3411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_RXNEIE) == (USART_CR1_RXNEIE)) ? 1U : 0U);
3413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 63


3415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Transmission Complete Interrupt is enabled or disabled.
3417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          TCIE          LL_USART_IsEnabledIT_TC
3418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_TC(USART_TypeDef *USARTx)
3422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_TCIE) == (USART_CR1_TCIE)) ? 1UL : 0UL);
3424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART TX Empty Interrupt is enabled or disabled.
3428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          TXEIE         LL_USART_IsEnabledIT_TXE
3429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_TXE(USART_TypeDef *USARTx)
3433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_TXEIE) == (USART_CR1_TXEIE)) ? 1U : 0U);
3435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Parity Error Interrupt is enabled or disabled.
3439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          PEIE          LL_USART_IsEnabledIT_PE
3440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_PE(USART_TypeDef *USARTx)
3444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_PEIE) == (USART_CR1_PEIE)) ? 1UL : 0UL);
3446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Character Match Interrupt is enabled or disabled.
3450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          CMIE          LL_USART_IsEnabledIT_CM
3451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_CM(USART_TypeDef *USARTx)
3455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_CMIE) == (USART_CR1_CMIE)) ? 1UL : 0UL);
3457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Receiver Timeout Interrupt is enabled or disabled.
3461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RTOIE         LL_USART_IsEnabledIT_RTO
3462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_RTO(USART_TypeDef *USARTx)
3466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_RTOIE) == (USART_CR1_RTOIE)) ? 1UL : 0UL);
3468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
3471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 64


3472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART End Of Block Interrupt is enabled or disabled.
3473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
3474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
3475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          EOBIE         LL_USART_IsEnabledIT_EOB
3476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_EOB(USART_TypeDef *USARTx)
3480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_EOBIE) == (USART_CR1_EOBIE)) ? 1UL : 0UL);
3482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_SMARTCARD_SUPPORT */
3485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
3486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART LIN Break Detection Interrupt is enabled or disabled.
3488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
3489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
3490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LBDIE         LL_USART_IsEnabledIT_LBD
3491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_LBD(USART_TypeDef *USARTx)
3495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_LBDIE) == (USART_CR2_LBDIE)) ? 1UL : 0UL);
3497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_LIN_SUPPORT */
3499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Error Interrupt is enabled or disabled.
3502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          EIE           LL_USART_IsEnabledIT_ERROR
3503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_ERROR(USART_TypeDef *USARTx)
3507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_EIE) == (USART_CR3_EIE)) ? 1UL : 0UL);
3509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART CTS Interrupt is enabled or disabled.
3513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
3514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
3515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          CTSIE         LL_USART_IsEnabledIT_CTS
3516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_CTS(USART_TypeDef *USARTx)
3520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_CTSIE) == (USART_CR3_CTSIE)) ? 1UL : 0UL);
3522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR1_UESM)
3525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_CR3_WUFIE)
3526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Wake Up from Stop Mode Interrupt is enabled or disabled.
3528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 65


3529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
3530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          WUFIE         LL_USART_IsEnabledIT_WKUP
3531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_WKUP(USART_TypeDef *USARTx)
3535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_WUFIE) == (USART_CR3_WUFIE)) ? 1UL : 0UL);
3537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR3_WUFIE */
3540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USART_CR1_UESM */
3541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
3544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_DMA_Management DMA_Management
3547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
3548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable DMA Mode for reception
3552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DMAR          LL_USART_EnableDMAReq_RX
3553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDMAReq_RX(USART_TypeDef *USARTx)
3557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_DMAR);
3559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable DMA Mode for reception
3563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DMAR          LL_USART_DisableDMAReq_RX
3564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDMAReq_RX(USART_TypeDef *USARTx)
3568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_DMAR);
3570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if DMA Mode is enabled for reception
3574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DMAR          LL_USART_IsEnabledDMAReq_RX
3575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledDMAReq_RX(USART_TypeDef *USARTx)
3579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_DMAR) == (USART_CR3_DMAR)) ? 1UL : 0UL);
3581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable DMA Mode for transmission
3585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DMAT          LL_USART_EnableDMAReq_TX
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 66


3586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDMAReq_TX(USART_TypeDef *USARTx)
3590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_DMAT);
3592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable DMA Mode for transmission
3596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DMAT          LL_USART_DisableDMAReq_TX
3597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDMAReq_TX(USART_TypeDef *USARTx)
3601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_DMAT);
3603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if DMA Mode is enabled for transmission
3607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DMAT          LL_USART_IsEnabledDMAReq_TX
3608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledDMAReq_TX(USART_TypeDef *USARTx)
3612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_DMAT) == (USART_CR3_DMAT)) ? 1UL : 0UL);
3614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable DMA Disabling on Reception Error
3618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DDRE          LL_USART_EnableDMADeactOnRxErr
3619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDMADeactOnRxErr(USART_TypeDef *USARTx)
3623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_DDRE);
3625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable DMA Disabling on Reception Error
3629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DDRE          LL_USART_DisableDMADeactOnRxErr
3630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDMADeactOnRxErr(USART_TypeDef *USARTx)
3634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_DDRE);
3636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if DMA Disabling on Reception Error is disabled
3640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DDRE          LL_USART_IsEnabledDMADeactOnRxErr
3641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 67


3643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledDMADeactOnRxErr(USART_TypeDef *USARTx)
3645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_DDRE) == (USART_CR3_DDRE)) ? 1UL : 0UL);
3647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Get the data register address used for DMA transfer
3651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll RDR          RDR           LL_USART_DMA_GetRegAddr\n
3652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll TDR          TDR           LL_USART_DMA_GetRegAddr
3653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Direction This parameter can be one of the following values:
3655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DMA_REG_DATA_TRANSMIT
3656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DMA_REG_DATA_RECEIVE
3657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Address of data register
3658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_DMA_GetRegAddr(USART_TypeDef *USARTx, uint32_t Direction)
3660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t data_reg_addr;
3662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   if (Direction == LL_USART_DMA_REG_DATA_TRANSMIT)
3664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   {
3665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     /* return address of TDR register */
3666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     data_reg_addr = (uint32_t) &(USARTx->TDR);
3667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   }
3668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   else
3669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   {
3670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     /* return address of RDR register */
3671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     data_reg_addr = (uint32_t) &(USARTx->RDR);
3672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   }
3673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return data_reg_addr;
3675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
3679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Data_Management Data_Management
3682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
3683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Read Receiver Data register (Receive Data value, 8 bits)
3687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll RDR          RDR           LL_USART_ReceiveData8
3688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
3690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint8_t LL_USART_ReceiveData8(USART_TypeDef *USARTx)
3692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint8_t)(READ_BIT(USARTx->RDR, USART_RDR_RDR) & 0xFFU);
3694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Read Receiver Data register (Receive Data value, 9 bits)
3698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll RDR          RDR           LL_USART_ReceiveData9
3699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 68


3700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x1FF
3701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint16_t LL_USART_ReceiveData9(USART_TypeDef *USARTx)
3703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint16_t)(READ_BIT(USARTx->RDR, USART_RDR_RDR));
3705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Write in Transmitter Data Register (Transmit Data value, 8 bits)
3709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll TDR          TDR           LL_USART_TransmitData8
3710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Value between Min_Data=0x00 and Max_Data=0xFF
3712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_TransmitData8(USART_TypeDef *USARTx, uint8_t Value)
  53              		.loc 2 3714 22 view .LVU7
  54              	.LBB49:
3715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   USARTx->TDR = Value;
  55              		.loc 2 3716 3 view .LVU8
  56              		.loc 2 3716 15 is_stmt 0 view .LVU9
  57 0008 CD5C     		ldrb	r5, [r1, r3]
  58              	.LVL3:
  59              		.loc 2 3716 15 view .LVU10
  60 000a 054C     		ldr	r4, .L6
  61 000c 2585     		strh	r5, [r4, #40]
  62              	.LVL4:
  63              		.loc 2 3716 15 view .LVU11
  64              	.LBE49:
  65              	.LBE48:
  65:Src/main.c    ****   {
  66              		.loc 1 65 17 is_stmt 1 view .LVU12
  65:Src/main.c    ****   {
  67              		.loc 1 65 18 is_stmt 0 view .LVU13
  68 000e 0133     		adds	r3, r3, #1
  69              	.LVL5:
  70              	.L2:
  65:Src/main.c    ****   {
  71              		.loc 1 65 11 is_stmt 1 discriminator 1 view .LVU14
  65:Src/main.c    ****   {
  72              		.loc 1 65 3 is_stmt 0 discriminator 1 view .LVU15
  73 0010 8342     		cmp	r3, r0
  74 0012 04DA     		bge	.L4
  75              	.L3:
  68:Src/main.c    ****      LL_USART_TransmitData8(USART2, ch[i]);
  76              		.loc 1 68 6 is_stmt 1 discriminator 1 view .LVU16
  67:Src/main.c    ****     {}
  77              		.loc 1 67 10 discriminator 1 view .LVU17
  78              	.LVL6:
  79              	.LBB50:
  80              	.LBI50:
2749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
  81              		.loc 2 2749 26 discriminator 1 view .LVU18
  82              	.LBB51:
2751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
  83              		.loc 2 2751 3 discriminator 1 view .LVU19
2751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 69


  84              		.loc 2 2751 12 is_stmt 0 discriminator 1 view .LVU20
  85 0014 024C     		ldr	r4, .L6
  86 0016 E469     		ldr	r4, [r4, #28]
2751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
  87              		.loc 2 2751 75 discriminator 1 view .LVU21
  88 0018 2206     		lsls	r2, r4, #24
  89 001a FBD5     		bpl	.L3
  90 001c F4E7     		b	.L5
  91              	.LVL7:
  92              	.L4:
2751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
  93              		.loc 2 2751 75 discriminator 1 view .LVU22
  94              	.LBE51:
  95              	.LBE50:
  70:Src/main.c    ****      //while(!LL_USART_IsActiveFlag_TC(USART1));
  71:Src/main.c    ****   }
  72:Src/main.c    ****   // HAL_UART_Transmit(&huart1, (uint8_t*)ch, len, 0xFFFF);
  73:Src/main.c    ****   
  74:Src/main.c    ****   return len;
  96              		.loc 1 74 3 is_stmt 1 view .LVU23
  75:Src/main.c    **** }
  97              		.loc 1 75 1 is_stmt 0 view .LVU24
  98              		@ sp needed
  99 001e 30BD     		pop	{r4, r5, pc}
 100              	.L7:
 101              		.align	2
 102              	.L6:
 103 0020 00440040 		.word	1073759232
 104              		.cfi_endproc
 105              	.LFE1023:
 107              		.section	.text.SystemClock_Config,"ax",%progbits
 108              		.align	1
 109              		.global	SystemClock_Config
 110              		.syntax unified
 111              		.code	16
 112              		.thumb_func
 114              	SystemClock_Config:
 115              	.LFB1025:
  76:Src/main.c    **** /* USER CODE END 0 */
  77:Src/main.c    **** 
  78:Src/main.c    **** /**
  79:Src/main.c    ****   * @brief  The application entry point.
  80:Src/main.c    ****   * @retval int
  81:Src/main.c    ****   */
  82:Src/main.c    **** int main(void)
  83:Src/main.c    **** {
  84:Src/main.c    ****   /* USER CODE BEGIN 1 */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE END 1 */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  91:Src/main.c    ****   LL_APB1_GRP2_EnableClock(LL_APB1_GRP2_PERIPH_SYSCFG);
  92:Src/main.c    ****   LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_PWR);
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 70


  95:Src/main.c    ****   NVIC_SetPriority(SysTick_IRQn, 3);
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* USER CODE BEGIN Init */
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* USER CODE END Init */
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* Configure the system clock */
 102:Src/main.c    ****   SystemClock_Config();
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* USER CODE END SysInit */
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* Initialize all configured peripherals */
 109:Src/main.c    ****   MX_GPIO_Init();
 110:Src/main.c    ****   MX_USART2_UART_Init();
 111:Src/main.c    ****   MX_DMA_Init();
 112:Src/main.c    ****   MX_ADC_Init();
 113:Src/main.c    ****   MX_TIM14_Init();
 114:Src/main.c    ****   MX_TIM3_Init();  
 115:Src/main.c    ****   
 116:Src/main.c    ****   /* USER CODE BEGIN 2 */
 117:Src/main.c    ****   // printf("hello ServoDrive coming...\r\n");
 118:Src/main.c    ****   /* USER CODE END 2 */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* Infinite loop */
 121:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 122:Src/main.c    ****   Main();
 123:Src/main.c    ****   while (1)
 124:Src/main.c    ****   {
 125:Src/main.c    ****     /* USER CODE END WHILE */
 126:Src/main.c    **** 
 127:Src/main.c    ****     /* USER CODE BEGIN 3 */
 128:Src/main.c    ****   }
 129:Src/main.c    ****   /* USER CODE END 3 */
 130:Src/main.c    **** }
 131:Src/main.c    **** 
 132:Src/main.c    **** /**
 133:Src/main.c    ****   * @brief System Clock Configuration
 134:Src/main.c    ****   * @retval None
 135:Src/main.c    ****   */
 136:Src/main.c    **** void SystemClock_Config(void)
 137:Src/main.c    **** {
 116              		.loc 1 137 1 is_stmt 1 view -0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120 0000 10B5     		push	{r4, lr}
 121              	.LCFI1:
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 4, -8
 124              		.cfi_offset 14, -4
 138:Src/main.c    ****   LL_FLASH_SetLatency(LL_FLASH_LATENCY_1);
 125              		.loc 1 138 3 view .LVU26
 126              	.LVL8:
 127              	.LBB52:
 128              	.LBI52:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 71


 129              		.file 3 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @file    stm32f0xx_ll_system.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief   Header file of SYSTEM LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   @verbatim
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   ==============================================================================
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****                      ##### How to use this driver #####
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   ==============================================================================
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****     [..]
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****     The LL SYSTEM driver contains a set of generic APIs that can be
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****     used by user:
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****       (+) Some of the FLASH features need to be handled in the SYSTEM file.
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****       (+) Access to DBGCMU registers
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****       (+) Access to SYSCFG registers
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   @endverbatim
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   ******************************************************************************
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @attention
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * All rights reserved.</center></h2>
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * the "License"; You may not use this file except in compliance with the
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * License. You may obtain a copy of the License at:
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *                        opensource.org/licenses/BSD-3-Clause
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   ******************************************************************************
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #ifndef __STM32F0xx_LL_SYSTEM_H
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define __STM32F0xx_LL_SYSTEM_H
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #ifdef __cplusplus
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** extern "C" {
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /* Includes ------------------------------------------------------------------*/
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #include "stm32f0xx.h"
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @addtogroup STM32F0xx_LL_Driver
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (FLASH) || defined (SYSCFG) || defined (DBGMCU)
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL SYSTEM
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /* Private types -------------------------------------------------------------*/
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /* Private variables ---------------------------------------------------------*/
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /* Private constants ---------------------------------------------------------*/
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 72


  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_Private_Constants SYSTEM Private Constants
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /* Private macros ------------------------------------------------------------*/
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /* Exported types ------------------------------------------------------------*/
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /* Exported constants --------------------------------------------------------*/
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_Exported_Constants SYSTEM Exported Constants
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_REMAP SYSCFG Remap
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** * @{
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** */
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_REMAP_FLASH              (uint32_t)0x00000000U                               /*!<
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_REMAP_SYSTEMFLASH        SYSCFG_CFGR1_MEM_MODE_0                             /*!<
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_REMAP_SRAM               (SYSCFG_CFGR1_MEM_MODE_1 | SYSCFG_CFGR1_MEM_MODE_0) /*!<
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_IR_MOD)
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_IR_MOD SYSCFG IR Modulation
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_IR_MOD_TIM16       (SYSCFG_CFGR1_IR_MOD_0 & SYSCFG_CFGR1_IR_MOD_1)    /*!< Timer1
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_IR_MOD_USART1      (SYSCFG_CFGR1_IR_MOD_0)                            /*!< USART1
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_IR_MOD_USART4      (SYSCFG_CFGR1_IR_MOD_1)                            /*!< USART4
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_IR_MOD */
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_USART1TX_DMA_RMP) || defined(SYSCFG_CFGR1_USART1RX_DMA_RMP) || defined(SYS
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_USART1TX_RMP SYSCFG USART DMA Remap
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_USART1TX_DMA_RMP)
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_USART1TX_RMP_DMA1CH2     ((SYSCFG_CFGR1_USART1TX_DMA_RMP >> 8U) | (uint32_t)0x000
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_USART1TX_RMP_DMA1CH4     ((SYSCFG_CFGR1_USART1TX_DMA_RMP >> 8U) | SYSCFG_CFGR1_US
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_USART1TX_DMA_RMP*/
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_USART1RX_DMA_RMP)
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_USART1RX_RMP_DMA1CH3     ((SYSCFG_CFGR1_USART1RX_DMA_RMP >> 8U) | (uint32_t)0x000
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_USART1RX_RMP_DMA1CH5     ((SYSCFG_CFGR1_USART1RX_DMA_RMP >> 8U) | SYSCFG_CFGR1_US
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_USART1RX_DMA_RMP*/
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_USART2_DMA_RMP)
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_USART2_RMP_DMA1CH54      ((SYSCFG_CFGR1_USART2_DMA_RMP >> 8U) | (uint32_t)0x00000
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_USART2_RMP_DMA1CH67      ((SYSCFG_CFGR1_USART2_DMA_RMP >> 8U) | SYSCFG_CFGR1_USAR
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_USART2_DMA_RMP*/
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_USART3_DMA_RMP)
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_USART3_RMP_DMA1CH67      ((SYSCFG_CFGR1_USART3_DMA_RMP >> 8U) | (uint32_t)0x00000
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 73


 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_USART3_RMP_DMA1CH32      ((SYSCFG_CFGR1_USART3_DMA_RMP >> 8U) | SYSCFG_CFGR1_USAR
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_USART3_DMA_RMP */
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_USART1TX_DMA_RMP || SYSCFG_CFGR1_USART1RX_DMA_RMP || SYSCFG_CFGR1_USART2_DMA
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_SPI2_DMA_RMP)
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_SPI2_RMP_DMA1 SYSCFG SPI2 DMA Remap
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_SPI2_RMP_DMA1_CH45       (uint32_t)0x00000000U      /*!< SPI2_RX and SPI2_TX DMA 
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_SPI2_RMP_DMA1_CH67       SYSCFG_CFGR1_SPI2_DMA_RMP  /*!< SPI2_RX and SPI2_TX DMA 
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_SPI2_DMA_RMP*/
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_I2C1_DMA_RMP)
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_I2C1_RMP_DMA1 SYSCFG I2C1 DMA Remap
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_I2C1_RMP_DMA1_CH32       (uint32_t)0x00000000U      /*!< I2C1_RX and I2C1_TX DMA 
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_I2C1_RMP_DMA1_CH76       SYSCFG_CFGR1_I2C1_DMA_RMP  /*!< I2C1_RX and I2C1_TX DMA 
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_I2C1_DMA_RMP*/
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_ADC_DMA_RMP)
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_ADC1_RMP_DMA1 SYSCFG ADC1 DMA Remap
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_ADC1_RMP_DMA1_CH1        (uint32_t)0x00000000U     /*!< ADC DMA request mapped on
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_ADC1_RMP_DMA1_CH2        SYSCFG_CFGR1_ADC_DMA_RMP  /*!< ADC DMA request mapped on
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_ADC_DMA_RMP */
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_TIM16_DMA_RMP) || defined(SYSCFG_CFGR1_TIM17_DMA_RMP) || defined(SYSCFG_CF
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_TIM16_RMP_DMA1 SYSCFG TIM DMA Remap
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_TIM16_DMA_RMP)
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_TIM16_DMA_RMP2)
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM16_RMP_DMA1_CH3       (((SYSCFG_CFGR1_TIM16_DMA_RMP | SYSCFG_CFGR1_TIM16_DMA_R
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM16_RMP_DMA1_CH4       (((SYSCFG_CFGR1_TIM16_DMA_RMP | SYSCFG_CFGR1_TIM16_DMA_R
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM16_RMP_DMA1_CH6       ((SYSCFG_CFGR1_TIM16_DMA_RMP2 >> 8U) | SYSCFG_CFGR1_TIM1
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #else
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM16_RMP_DMA1_CH3       ((SYSCFG_CFGR1_TIM16_DMA_RMP >> 8U) | (uint32_t)0x000000
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM16_RMP_DMA1_CH4       ((SYSCFG_CFGR1_TIM16_DMA_RMP >> 8U) | SYSCFG_CFGR1_TIM16
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_TIM16_DMA_RMP2 */
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_TIM16_DMA_RMP */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 74


 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_TIM17_DMA_RMP)
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_TIM17_DMA_RMP2)
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM17_RMP_DMA1_CH1       (((SYSCFG_CFGR1_TIM17_DMA_RMP | SYSCFG_CFGR1_TIM17_DMA_R
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM17_RMP_DMA1_CH2       (((SYSCFG_CFGR1_TIM17_DMA_RMP | SYSCFG_CFGR1_TIM17_DMA_R
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM17_RMP_DMA1_CH7       ((SYSCFG_CFGR1_TIM17_DMA_RMP2 >> 8U) | SYSCFG_CFGR1_TIM1
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #else
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM17_RMP_DMA1_CH1       ((SYSCFG_CFGR1_TIM17_DMA_RMP >> 8U) | (uint32_t)0x000000
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM17_RMP_DMA1_CH2       ((SYSCFG_CFGR1_TIM17_DMA_RMP >> 8U) | SYSCFG_CFGR1_TIM17
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_TIM17_DMA_RMP2 */
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_TIM17_DMA_RMP */
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_TIM1_DMA_RMP)
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM1_RMP_DMA1_CH234      ((SYSCFG_CFGR1_TIM1_DMA_RMP >> 8U) | (uint32_t)0x0000000
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM1_RMP_DMA1_CH6        ((SYSCFG_CFGR1_TIM1_DMA_RMP >> 8U) | SYSCFG_CFGR1_TIM1_D
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_TIM1_DMA_RMP*/
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_TIM2_DMA_RMP)
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM2_RMP_DMA1_CH34       ((SYSCFG_CFGR1_TIM2_DMA_RMP >> 8U) | (uint32_t)0x0000000
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM2_RMP_DMA1_CH7        ((SYSCFG_CFGR1_TIM2_DMA_RMP >> 8U) | SYSCFG_CFGR1_TIM2_D
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_TIM2_DMA_RMP*/
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_TIM3_DMA_RMP)
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM3_RMP_DMA1_CH4        ((SYSCFG_CFGR1_TIM3_DMA_RMP >> 8U) | (uint32_t)0x0000000
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM3_RMP_DMA1_CH6        ((SYSCFG_CFGR1_TIM3_DMA_RMP >> 8U) | SYSCFG_CFGR1_TIM3_D
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_TIM3_DMA_RMP*/
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_TIM16_DMA_RMP || SYSCFG_CFGR1_TIM17_DMA_RMP || SYSCFG_CFGR1_TIM1_DMA_RMP || 
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_I2C_FASTMODEPLUS SYSCFG I2C FASTMODEPLUS
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB6     SYSCFG_CFGR1_I2C_FMP_PB6  /*!< I2C PB6 Fast mode plus */
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB7     SYSCFG_CFGR1_I2C_FMP_PB7  /*!< I2C PB7 Fast mode plus */
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB8     SYSCFG_CFGR1_I2C_FMP_PB8  /*!< I2C PB8 Fast mode plus */
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB9     SYSCFG_CFGR1_I2C_FMP_PB9  /*!< I2C PB9 Fast mode plus */
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_I2C_FMP_I2C1)
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C1    SYSCFG_CFGR1_I2C_FMP_I2C1 /*!< Enable Fast Mode Plus on 
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_I2C_FMP_I2C1*/
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_I2C_FMP_I2C2)
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C2    SYSCFG_CFGR1_I2C_FMP_I2C2 /*!< Enable I2C2 Fast mode plu
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_I2C_FMP_I2C2*/
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_I2C_FMP_PA9)
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PA9     SYSCFG_CFGR1_I2C_FMP_PA9 /*!< Enable Fast Mode Plus on P
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_I2C_FMP_PA9*/
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_I2C_FMP_PA10)
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PA10    SYSCFG_CFGR1_I2C_FMP_PA10 /*!< Enable Fast Mode Plus on 
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_I2C_FMP_PA10*/
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_EXTI_PORT SYSCFG EXTI PORT
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTA               (uint32_t)0U               /*!< EXTI PORT A */
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTB               (uint32_t)1U               /*!< EXTI PORT B */
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTC               (uint32_t)2U               /*!< EXTI PORT C */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 75


 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(GPIOD_BASE)
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTD               (uint32_t)3U               /*!< EXTI PORT D */
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*GPIOD_BASE*/
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(GPIOE_BASE)
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTE               (uint32_t)4U               /*!< EXTI PORT E */
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*GPIOE_BASE*/
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTF               (uint32_t)5U               /*!< EXTI PORT F */
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_EXTI_LINE SYSCFG EXTI LINE
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE0               (uint32_t)(0U << 16U | 0U)  /*!< EXTI_POSITION_0  | EXTI
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE1               (uint32_t)(4U << 16U | 0U)  /*!< EXTI_POSITION_4  | EXTI
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE2               (uint32_t)(8U << 16U | 0U)  /*!< EXTI_POSITION_8  | EXTI
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE3               (uint32_t)(12U << 16U | 0U) /*!< EXTI_POSITION_12 | EXTI
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE4               (uint32_t)(0U << 16U | 1U)  /*!< EXTI_POSITION_0  | EXTI
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE5               (uint32_t)(4U << 16U | 1U)  /*!< EXTI_POSITION_4  | EXTI
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE6               (uint32_t)(8U << 16U | 1U)  /*!< EXTI_POSITION_8  | EXTI
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE7               (uint32_t)(12U << 16U | 1U) /*!< EXTI_POSITION_12 | EXTI
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE8               (uint32_t)(0U << 16U | 2U)  /*!< EXTI_POSITION_0  | EXTI
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE9               (uint32_t)(4U << 16U | 2U)  /*!< EXTI_POSITION_4  | EXTI
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE10              (uint32_t)(8U << 16U | 2U)  /*!< EXTI_POSITION_8  | EXTI
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE11              (uint32_t)(12U << 16U | 2U) /*!< EXTI_POSITION_12 | EXTI
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE12              (uint32_t)(0U << 16U | 3U)  /*!< EXTI_POSITION_0  | EXTI
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE13              (uint32_t)(4U << 16U | 3U)  /*!< EXTI_POSITION_4  | EXTI
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE14              (uint32_t)(8U << 16U | 3U)  /*!< EXTI_POSITION_8  | EXTI
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE15              (uint32_t)(12U << 16U | 3U) /*!< EXTI_POSITION_12 | EXTI
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_TIMBREAK SYSCFG TIMER BREAK
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR2_PVD_LOCK)
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIMBREAK_PVD             SYSCFG_CFGR2_PVD_LOCK  /*!< Enables and locks the PVD co
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****                                                                        with TIM1/15/16U/17 Break In
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****                                                                        the PVDE and PLS bits of the
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR2_PVD_LOCK*/
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIMBREAK_SRAM_PARITY     SYSCFG_CFGR2_SRAM_PARITY_LOCK   /*!< Enables and locks t
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****                                                                                 with Break Input of
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIMBREAK_LOCKUP          SYSCFG_CFGR2_LOCKUP_LOCK   /*!< Enables and locks the LO
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****                                                                            CortexM0 with Break Inpu
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB1_GRP1_STOP_IP  DBGMCU APB1 GRP1 STOP IP
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(DBGMCU_APB1_FZ_DBG_TIM2_STOP)
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM2_STOP      DBGMCU_APB1_FZ_DBG_TIM2_STOP        /*!< TIM2 counter st
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*DBGMCU_APB1_FZ_DBG_TIM2_STOP*/
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM3_STOP      DBGMCU_APB1_FZ_DBG_TIM3_STOP        /*!< TIM3 counter st
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 76


 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(DBGMCU_APB1_FZ_DBG_TIM6_STOP)
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM6_STOP      DBGMCU_APB1_FZ_DBG_TIM6_STOP        /*!< TIM6 counter st
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*DBGMCU_APB1_FZ_DBG_TIM6_STOP*/
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(DBGMCU_APB1_FZ_DBG_TIM7_STOP)
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM7_STOP      DBGMCU_APB1_FZ_DBG_TIM7_STOP        /*!< TIM7 counter st
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*DBGMCU_APB1_FZ_DBG_TIM7_STOP*/
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM14_STOP     DBGMCU_APB1_FZ_DBG_TIM14_STOP       /*!< TIM14 counter s
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_RTC_STOP       DBGMCU_APB1_FZ_DBG_RTC_STOP         /*!< RTC Calendar fr
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_WWDG_STOP      DBGMCU_APB1_FZ_DBG_WWDG_STOP        /*!< Debug Window Wa
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_IWDG_STOP      DBGMCU_APB1_FZ_DBG_IWDG_STOP        /*!< Debug Independe
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C1_STOP      DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT /*!< I2C1 SMBUS ti
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(DBGMCU_APB1_FZ_DBG_CAN_STOP)
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_CAN_STOP       DBGMCU_APB1_FZ_DBG_CAN_STOP         /*!< CAN debug stopp
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*DBGMCU_APB1_FZ_DBG_CAN_STOP*/
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB1 GRP2_STOP_IP DBGMCU APB1 GRP2 STOP IP
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP2_TIM1_STOP      DBGMCU_APB2_FZ_DBG_TIM1_STOP        /*!< TIM1 counter st
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(DBGMCU_APB2_FZ_DBG_TIM15_STOP)
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP2_TIM15_STOP     DBGMCU_APB2_FZ_DBG_TIM15_STOP       /*!< TIM15 counter s
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*DBGMCU_APB2_FZ_DBG_TIM15_STOP*/
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP2_TIM16_STOP     DBGMCU_APB2_FZ_DBG_TIM16_STOP       /*!< TIM16 counter s
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP2_TIM17_STOP     DBGMCU_APB2_FZ_DBG_TIM17_STOP       /*!< TIM17 counter s
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_LATENCY FLASH LATENCY
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_FLASH_LATENCY_0                 0x00000000U             /*!< FLASH Zero Latency cycle */
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_FLASH_LATENCY_1                 FLASH_ACR_LATENCY       /*!< FLASH One Latency cycle */
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /* Exported macro ------------------------------------------------------------*/
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /* Exported functions --------------------------------------------------------*/
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_Exported_Functions SYSTEM Exported Functions
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_SYSCFG SYSCFG
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Set memory mapping at address 0x00000000
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 77


 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 MEM_MODE      LL_SYSCFG_SetRemapMemory
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Memory This parameter can be one of the following values:
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_FLASH
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SYSTEMFLASH
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SRAM
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetRemapMemory(uint32_t Memory)
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR1, SYSCFG_CFGR1_MEM_MODE, Memory);
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Get memory mapping at address 0x00000000
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 MEM_MODE      LL_SYSCFG_GetRemapMemory
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_FLASH
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SYSTEMFLASH
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SRAM
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetRemapMemory(void)
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_MEM_MODE));
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_IR_MOD)
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Set IR Modulation Envelope signal source.
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 IR_MOD  LL_SYSCFG_SetIRModEnvelopeSignal
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Source This parameter can be one of the following values:
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_IR_MOD_TIM16
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_IR_MOD_USART1
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_IR_MOD_USART4
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetIRModEnvelopeSignal(uint32_t Source)
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR1, SYSCFG_CFGR1_IR_MOD, Source);
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Get IR Modulation Envelope signal source.
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 IR_MOD  LL_SYSCFG_GetIRModEnvelopeSignal
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_IR_MOD_TIM16
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_IR_MOD_USART1
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_IR_MOD_USART4
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetIRModEnvelopeSignal(void)
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_IR_MOD));
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_IR_MOD */
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_USART1TX_DMA_RMP) || defined(SYSCFG_CFGR1_USART1RX_DMA_RMP) || defined(SYS
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Set DMA request remapping bits for USART
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 78


 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 USART1TX_DMA_RMP  LL_SYSCFG_SetRemapDMA_USART\n
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 USART1RX_DMA_RMP  LL_SYSCFG_SetRemapDMA_USART\n
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 USART2_DMA_RMP  LL_SYSCFG_SetRemapDMA_USART\n
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 USART3_DMA_RMP  LL_SYSCFG_SetRemapDMA_USART
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Remap This parameter can be one of the following values:
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_USART1TX_RMP_DMA1CH2 (*)
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_USART1TX_RMP_DMA1CH4 (*)
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_USART1RX_RMP_DMA1CH3 (*)
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_USART1RX_RMP_DMA1CH5 (*)
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_USART2_RMP_DMA1CH54 (*)
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_USART2_RMP_DMA1CH67 (*)
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_USART3_RMP_DMA1CH67 (*)
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_USART3_RMP_DMA1CH32 (*)
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices.
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetRemapDMA_USART(uint32_t Remap)
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR1, (Remap & 0x00FF00FFU) << 8U, (Remap & 0xFF00FF00U));
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_USART1TX_DMA_RMP || SYSCFG_CFGR1_USART1RX_DMA_RMP || SYSCFG_CFGR1_USART2_DMA
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_SPI2_DMA_RMP)
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Set DMA request remapping bits for SPI
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 SPI2_DMA_RMP  LL_SYSCFG_SetRemapDMA_SPI
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Remap This parameter can be one of the following values:
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_SPI2_RMP_DMA1_CH45
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_SPI2_RMP_DMA1_CH67
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetRemapDMA_SPI(uint32_t Remap)
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR1, SYSCFG_CFGR1_SPI2_DMA_RMP, Remap);
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_SPI2_DMA_RMP */
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_I2C1_DMA_RMP)
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Set DMA request remapping bits for I2C
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 I2C1_DMA_RMP  LL_SYSCFG_SetRemapDMA_I2C
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Remap This parameter can be one of the following values:
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C1_RMP_DMA1_CH32
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C1_RMP_DMA1_CH76
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetRemapDMA_I2C(uint32_t Remap)
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR1, SYSCFG_CFGR1_I2C1_DMA_RMP, Remap);
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_I2C1_DMA_RMP */
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_ADC_DMA_RMP)
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Set DMA request remapping bits for ADC
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 ADC_DMA_RMP   LL_SYSCFG_SetRemapDMA_ADC
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 79


 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Remap This parameter can be one of the following values:
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_ADC1_RMP_DMA1_CH1
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_ADC1_RMP_DMA1_CH2
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetRemapDMA_ADC(uint32_t Remap)
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR1, SYSCFG_CFGR1_ADC_DMA_RMP, Remap);
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_ADC_DMA_RMP */
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_TIM16_DMA_RMP) || defined(SYSCFG_CFGR1_TIM17_DMA_RMP) || defined(SYSCFG_CF
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Set DMA request remapping bits for TIM
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 TIM16_DMA_RMP  LL_SYSCFG_SetRemapDMA_TIM\n
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 TIM17_DMA_RMP  LL_SYSCFG_SetRemapDMA_TIM\n
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 TIM16_DMA_RMP2 LL_SYSCFG_SetRemapDMA_TIM\n
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 TIM17_DMA_RMP2 LL_SYSCFG_SetRemapDMA_TIM\n
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 TIM1_DMA_RMP   LL_SYSCFG_SetRemapDMA_TIM\n
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 TIM2_DMA_RMP   LL_SYSCFG_SetRemapDMA_TIM\n
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 TIM3_DMA_RMP   LL_SYSCFG_SetRemapDMA_TIM
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Remap This parameter can be one of the following values:
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM16_RMP_DMA1_CH3 (*)
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM16_RMP_DMA1_CH4 (*)
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM16_RMP_DMA1_CH6 (*)
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM17_RMP_DMA1_CH1 (*)
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM17_RMP_DMA1_CH2 (*)
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM17_RMP_DMA1_CH7 (*)
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM1_RMP_DMA1_CH234 (*)
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM1_RMP_DMA1_CH6 (*)
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM2_RMP_DMA1_CH34 (*)
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM2_RMP_DMA1_CH7 (*)
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM3_RMP_DMA1_CH4 (*)
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM3_RMP_DMA1_CH6 (*)
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices.
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetRemapDMA_TIM(uint32_t Remap)
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR1, (Remap & 0x00FF00FFU) << 8U, (Remap & 0xFF00FF00U));
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_TIM16_DMA_RMP || SYSCFG_CFGR1_TIM17_DMA_RMP || SYSCFG_CFGR1_TIM1_DMA_RMP || 
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_PA11_PA12_RMP)
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Enable PIN pair PA11/12 mapped instead of PA9/10 (control the mapping of either
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * PA9/10 or PA11/12 pin pair on small pin-count packages)
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 PA11_PA12_RMP  LL_SYSCFG_EnablePinRemap
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnablePinRemap(void)
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_PA11_PA12_RMP);
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 80


 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Disable PIN pair PA11/12 mapped instead of PA9/10 (control the mapping of either
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * PA9/10 or PA11/12 pin pair on small pin-count packages)
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 PA11_PA12_RMP  LL_SYSCFG_DisablePinRemap
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisablePinRemap(void)
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_PA11_PA12_RMP);
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_PA11_PA12_RMP */
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Enable the I2C fast mode plus driving capability.
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 I2C_FMP_PB6   LL_SYSCFG_EnableFastModePlus\n
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_PB7   LL_SYSCFG_EnableFastModePlus\n
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_PB8   LL_SYSCFG_EnableFastModePlus\n
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_PB9   LL_SYSCFG_EnableFastModePlus\n
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_I2C1  LL_SYSCFG_EnableFastModePlus\n
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_I2C2  LL_SYSCFG_EnableFastModePlus\n
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_PA9   LL_SYSCFG_EnableFastModePlus\n
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_PA10  LL_SYSCFG_EnableFastModePlus
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  ConfigFastModePlus This parameter can be a combination of the following values:
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB6
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB7
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB8
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB9
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C1 (*)
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C2 (*)
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PA9 (*)
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PA10 (*)
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableFastModePlus(uint32_t ConfigFastModePlus)
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR1, ConfigFastModePlus);
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Disable the I2C fast mode plus driving capability.
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 I2C_FMP_PB6   LL_SYSCFG_DisableFastModePlus\n
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_PB7   LL_SYSCFG_DisableFastModePlus\n
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_PB8   LL_SYSCFG_DisableFastModePlus\n
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_PB9   LL_SYSCFG_DisableFastModePlus\n
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_I2C1  LL_SYSCFG_DisableFastModePlus\n
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_I2C2  LL_SYSCFG_DisableFastModePlus\n
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_PA9   LL_SYSCFG_DisableFastModePlus\n
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_PA10  LL_SYSCFG_DisableFastModePlus
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  ConfigFastModePlus This parameter can be a combination of the following values:
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB6
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB7
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB8
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB9
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C1 (*)
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C2 (*)
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PA9 (*)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 81


 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PA10 (*)
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableFastModePlus(uint32_t ConfigFastModePlus)
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR1, ConfigFastModePlus);
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Configure source input for the EXTI external interrupt.
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_EXTICR1 EXTI0         LL_SYSCFG_SetEXTISource\n
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI1         LL_SYSCFG_SetEXTISource\n
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI2         LL_SYSCFG_SetEXTISource\n
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI3         LL_SYSCFG_SetEXTISource\n
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI4         LL_SYSCFG_SetEXTISource\n
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI5         LL_SYSCFG_SetEXTISource\n
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI6         LL_SYSCFG_SetEXTISource\n
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI7         LL_SYSCFG_SetEXTISource\n
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI8         LL_SYSCFG_SetEXTISource\n
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI9         LL_SYSCFG_SetEXTISource\n
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI10        LL_SYSCFG_SetEXTISource\n
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI11        LL_SYSCFG_SetEXTISource\n
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI12        LL_SYSCFG_SetEXTISource\n
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI13        LL_SYSCFG_SetEXTISource\n
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI14        LL_SYSCFG_SetEXTISource\n
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI15        LL_SYSCFG_SetEXTISource
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Port This parameter can be one of the following values:
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTA
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTB
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTC
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTD (*)
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTE (*)
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTF
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Line This parameter can be one of the following values:
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE0
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE1
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE2
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE3
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE4
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE5
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE6
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE7
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE8
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE9
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE10
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE11
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE12
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE13
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE14
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE15
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetEXTISource(uint32_t Port, uint32_t Line)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 82


 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(SYSCFG->EXTICR[Line & 0xFF], SYSCFG_EXTICR1_EXTI0 << (Line >> 16), Port << (Line >> 16
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Get the configured defined for specific EXTI Line
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_EXTICR1 EXTI0         LL_SYSCFG_SetEXTISource\n
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI1         LL_SYSCFG_SetEXTISource\n
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI2         LL_SYSCFG_SetEXTISource\n
 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI3         LL_SYSCFG_SetEXTISource\n
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI4         LL_SYSCFG_SetEXTISource\n
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI5         LL_SYSCFG_SetEXTISource\n
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI6         LL_SYSCFG_SetEXTISource\n
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI7         LL_SYSCFG_SetEXTISource\n
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI8         LL_SYSCFG_SetEXTISource\n
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI9         LL_SYSCFG_SetEXTISource\n
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI10        LL_SYSCFG_SetEXTISource\n
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI11        LL_SYSCFG_SetEXTISource\n
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI12        LL_SYSCFG_SetEXTISource\n
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI13        LL_SYSCFG_SetEXTISource\n
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI14        LL_SYSCFG_SetEXTISource\n
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI15        LL_SYSCFG_SetEXTISource
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Line This parameter can be one of the following values:
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE0
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE1
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE2
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE3
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE4
 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE5
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE6
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE7
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE8
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE9
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE10
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE11
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE12
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE13
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE14
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE15
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTA
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTB
 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTC
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTD (*)
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTE (*)
 672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTF
 673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
 674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices
 675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetEXTISource(uint32_t Line)
 677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->EXTICR[Line & 0xFF], (SYSCFG_EXTICR1_EXTI0 << (Line >> 16))) >
 679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE0_SR_EWDG)
 682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Window watchdog interrupt occurred or not.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 83


 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE0 SR_EWDG       LL_SYSCFG_IsActiveFlag_WWDG
 685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_WWDG(void)
 688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[0], SYSCFG_ITLINE0_SR_EWDG) == (SYSCFG_ITLINE0_SR_EWDG));
 690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE0_SR_EWDG */
 692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE1_SR_PVDOUT)
 694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if PVD supply monitoring interrupt occurred or not (EXTI line 16).
 696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE1 SR_PVDOUT     LL_SYSCFG_IsActiveFlag_PVDOUT
 697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_PVDOUT(void)
 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[1], SYSCFG_ITLINE1_SR_PVDOUT) == (SYSCFG_ITLINE1_SR_PVDOUT));
 702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE1_SR_PVDOUT */
 704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE1_SR_VDDIO2)
 706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if VDDIO2 supply monitoring interrupt occurred or not (EXTI line 31).
 708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE1 SR_VDDIO2     LL_SYSCFG_IsActiveFlag_VDDIO2
 709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_VDDIO2(void)
 712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[1], SYSCFG_ITLINE1_SR_VDDIO2) == (SYSCFG_ITLINE1_SR_VDDIO2));
 714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE1_SR_VDDIO2 */
 716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE2_SR_RTC_WAKEUP)
 718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if RTC Wake Up interrupt occurred or not (EXTI line 20).
 720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE2 SR_RTC_WAKEUP  LL_SYSCFG_IsActiveFlag_RTC_WAKEUP
 721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_RTC_WAKEUP(void)
 724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[2], SYSCFG_ITLINE2_SR_RTC_WAKEUP) == (SYSCFG_ITLINE2_SR_RTC_W
 726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE2_SR_RTC_WAKEUP */
 728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE2_SR_RTC_TSTAMP)
 730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if RTC Tamper and TimeStamp interrupt occurred or not (EXTI line 19).
 732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE2 SR_RTC_TSTAMP  LL_SYSCFG_IsActiveFlag_RTC_TSTAMP
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_RTC_TSTAMP(void)
 736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[2], SYSCFG_ITLINE2_SR_RTC_TSTAMP) == (SYSCFG_ITLINE2_SR_RTC_T
 738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE2_SR_RTC_TSTAMP */
 740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 84


 741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE2_SR_RTC_ALRA)
 742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if RTC Alarm interrupt occurred or not (EXTI line 17).
 744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE2 SR_RTC_ALRA   LL_SYSCFG_IsActiveFlag_RTC_ALRA
 745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_RTC_ALRA(void)
 748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[2], SYSCFG_ITLINE2_SR_RTC_ALRA) == (SYSCFG_ITLINE2_SR_RTC_ALR
 750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE2_SR_RTC_ALRA */
 752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE3_SR_FLASH_ITF)
 754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Flash interface interrupt occurred or not.
 756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE3 SR_FLASH_ITF  LL_SYSCFG_IsActiveFlag_FLASH_ITF
 757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_FLASH_ITF(void)
 760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[3], SYSCFG_ITLINE3_SR_FLASH_ITF) == (SYSCFG_ITLINE3_SR_FLASH_
 762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE3_SR_FLASH_ITF */
 764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE4_SR_CRS)
 766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Clock recovery system interrupt occurred or not.
 768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE4 SR_CRS        LL_SYSCFG_IsActiveFlag_CRS
 769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_CRS(void)
 772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[4], SYSCFG_ITLINE4_SR_CRS) == (SYSCFG_ITLINE4_SR_CRS));
 774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE4_SR_CRS */
 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE4_SR_CLK_CTRL)
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Reset and clock control interrupt occurred or not.
 780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE4 SR_CLK_CTRL   LL_SYSCFG_IsActiveFlag_CLK_CTRL
 781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_CLK_CTRL(void)
 784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[4], SYSCFG_ITLINE4_SR_CLK_CTRL) == (SYSCFG_ITLINE4_SR_CLK_CTR
 786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE4_SR_CLK_CTRL */
 788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE5_SR_EXTI0)
 790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 0 interrupt occurred or not.
 792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE5 SR_EXTI0      LL_SYSCFG_IsActiveFlag_EXTI0
 793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI0(void)
 796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[5], SYSCFG_ITLINE5_SR_EXTI0) == (SYSCFG_ITLINE5_SR_EXTI0));
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 85


 798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE5_SR_EXTI0 */
 800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE5_SR_EXTI1)
 802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 1 interrupt occurred or not.
 804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE5 SR_EXTI1      LL_SYSCFG_IsActiveFlag_EXTI1
 805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI1(void)
 808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[5], SYSCFG_ITLINE5_SR_EXTI1) == (SYSCFG_ITLINE5_SR_EXTI1));
 810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE5_SR_EXTI1 */
 812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE6_SR_EXTI2)
 814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 2 interrupt occurred or not.
 816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE6 SR_EXTI2      LL_SYSCFG_IsActiveFlag_EXTI2
 817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI2(void)
 820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[6], SYSCFG_ITLINE6_SR_EXTI2) == (SYSCFG_ITLINE6_SR_EXTI2));
 822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE6_SR_EXTI2 */
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE6_SR_EXTI3)
 826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 3 interrupt occurred or not.
 828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE6 SR_EXTI3      LL_SYSCFG_IsActiveFlag_EXTI3
 829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI3(void)
 832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[6], SYSCFG_ITLINE6_SR_EXTI3) == (SYSCFG_ITLINE6_SR_EXTI3));
 834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE6_SR_EXTI3 */
 836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI4)
 838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 4 interrupt occurred or not.
 840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI4      LL_SYSCFG_IsActiveFlag_EXTI4
 841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI4(void)
 844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI4) == (SYSCFG_ITLINE7_SR_EXTI4));
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI4 */
 848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI5)
 850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 5 interrupt occurred or not.
 852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI5      LL_SYSCFG_IsActiveFlag_EXTI5
 853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 86


 855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI5(void)
 856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI5) == (SYSCFG_ITLINE7_SR_EXTI5));
 858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI5 */
 860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI6)
 862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 6 interrupt occurred or not.
 864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI6      LL_SYSCFG_IsActiveFlag_EXTI6
 865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI6(void)
 868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI6) == (SYSCFG_ITLINE7_SR_EXTI6));
 870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI6 */
 872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI7)
 874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 7 interrupt occurred or not.
 876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI7      LL_SYSCFG_IsActiveFlag_EXTI7
 877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI7(void)
 880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI7) == (SYSCFG_ITLINE7_SR_EXTI7));
 882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI7 */
 884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI8)
 886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 8 interrupt occurred or not.
 888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI8      LL_SYSCFG_IsActiveFlag_EXTI8
 889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI8(void)
 892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI8) == (SYSCFG_ITLINE7_SR_EXTI8));
 894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI8 */
 896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI9)
 898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 9 interrupt occurred or not.
 900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI9      LL_SYSCFG_IsActiveFlag_EXTI9
 901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI9(void)
 904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI9) == (SYSCFG_ITLINE7_SR_EXTI9));
 906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI9 */
 908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI10)
 910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 10 interrupt occurred or not.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 87


 912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI10     LL_SYSCFG_IsActiveFlag_EXTI10
 913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI10(void)
 916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI10) == (SYSCFG_ITLINE7_SR_EXTI10));
 918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI10 */
 920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI11)
 922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 11 interrupt occurred or not.
 924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI11     LL_SYSCFG_IsActiveFlag_EXTI11
 925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI11(void)
 928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI11) == (SYSCFG_ITLINE7_SR_EXTI11));
 930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI11 */
 932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI12)
 934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 12 interrupt occurred or not.
 936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI12     LL_SYSCFG_IsActiveFlag_EXTI12
 937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI12(void)
 940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI12) == (SYSCFG_ITLINE7_SR_EXTI12));
 942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI12 */
 944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI13)
 946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 13 interrupt occurred or not.
 948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI13     LL_SYSCFG_IsActiveFlag_EXTI13
 949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI13(void)
 952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI13) == (SYSCFG_ITLINE7_SR_EXTI13));
 954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI13 */
 956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI14)
 958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 14 interrupt occurred or not.
 960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI14     LL_SYSCFG_IsActiveFlag_EXTI14
 961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI14(void)
 964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI14) == (SYSCFG_ITLINE7_SR_EXTI14));
 966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI14 */
 968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 88


 969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI15)
 970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 15 interrupt occurred or not.
 972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI15     LL_SYSCFG_IsActiveFlag_EXTI15
 973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI15(void)
 976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI15) == (SYSCFG_ITLINE7_SR_EXTI15));
 978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI15 */
 980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE8_SR_TSC_EOA)
 982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Touch sensing controller end of acquisition interrupt occurred or not.
 984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE8 SR_TSC_EOA    LL_SYSCFG_IsActiveFlag_TSC_EOA
 985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TSC_EOA(void)
 988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[8], SYSCFG_ITLINE8_SR_TSC_EOA) == (SYSCFG_ITLINE8_SR_TSC_EOA)
 990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE8_SR_TSC_EOA */
 992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE8_SR_TSC_MCE)
 994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Touch sensing controller max counterror interrupt occurred or not.
 996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE8 SR_TSC_MCE    LL_SYSCFG_IsActiveFlag_TSC_MCE
 997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TSC_MCE(void)
1000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[8], SYSCFG_ITLINE8_SR_TSC_MCE) == (SYSCFG_ITLINE8_SR_TSC_MCE)
1002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE8_SR_TSC_MCE */
1004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE9_SR_DMA1_CH1)
1006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA1 channel 1 interrupt occurred or not.
1008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE9 SR_DMA1_CH1   LL_SYSCFG_IsActiveFlag_DMA1_CH1
1009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA1_CH1(void)
1012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[9], SYSCFG_ITLINE9_SR_DMA1_CH1) == (SYSCFG_ITLINE9_SR_DMA1_CH
1014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE9_SR_DMA1_CH1 */
1016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE10_SR_DMA1_CH2)
1018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA1 channel 2 interrupt occurred or not.
1020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE10 SR_DMA1_CH2   LL_SYSCFG_IsActiveFlag_DMA1_CH2
1021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA1_CH2(void)
1024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[10], SYSCFG_ITLINE10_SR_DMA1_CH2) == (SYSCFG_ITLINE10_SR_DMA1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 89


1026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE10_SR_DMA1_CH2 */
1028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE10_SR_DMA1_CH3)
1030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA1 channel 3 interrupt occurred or not.
1032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE10 SR_DMA1_CH3   LL_SYSCFG_IsActiveFlag_DMA1_CH3
1033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA1_CH3(void)
1036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[10], SYSCFG_ITLINE10_SR_DMA1_CH3) == (SYSCFG_ITLINE10_SR_DMA1
1038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE10_SR_DMA1_CH3 */
1040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1041:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE10_SR_DMA2_CH1)
1042:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1043:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA2 channel 1 interrupt occurred or not.
1044:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE10 SR_DMA2_CH1   LL_SYSCFG_IsActiveFlag_DMA2_CH1
1045:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1046:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1047:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA2_CH1(void)
1048:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1049:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[10], SYSCFG_ITLINE10_SR_DMA2_CH1) == (SYSCFG_ITLINE10_SR_DMA2
1050:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1051:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE10_SR_DMA2_CH1 */
1052:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1053:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE10_SR_DMA2_CH2)
1054:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1055:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA2 channel 2 interrupt occurred or not.
1056:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE10 SR_DMA2_CH2   LL_SYSCFG_IsActiveFlag_DMA2_CH2
1057:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1059:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA2_CH2(void)
1060:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1061:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[10], SYSCFG_ITLINE10_SR_DMA2_CH2) == (SYSCFG_ITLINE10_SR_DMA2
1062:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1063:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE10_SR_DMA2_CH2 */
1064:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1065:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE11_SR_DMA1_CH4)
1066:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1067:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA1 channel 4 interrupt occurred or not.
1068:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE11 SR_DMA1_CH4   LL_SYSCFG_IsActiveFlag_DMA1_CH4
1069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1071:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA1_CH4(void)
1072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1073:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[11], SYSCFG_ITLINE11_SR_DMA1_CH4) == (SYSCFG_ITLINE11_SR_DMA1
1074:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1075:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE11_SR_DMA1_CH4 */
1076:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1077:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE11_SR_DMA1_CH5)
1078:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1079:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA1 channel 5 interrupt occurred or not.
1080:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE11 SR_DMA1_CH5   LL_SYSCFG_IsActiveFlag_DMA1_CH5
1081:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1082:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 90


1083:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA1_CH5(void)
1084:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1085:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[11], SYSCFG_ITLINE11_SR_DMA1_CH5) == (SYSCFG_ITLINE11_SR_DMA1
1086:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1087:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE11_SR_DMA1_CH5 */
1088:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1089:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE11_SR_DMA1_CH6)
1090:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1091:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA1 channel 6 interrupt occurred or not.
1092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE11 SR_DMA1_CH6   LL_SYSCFG_IsActiveFlag_DMA1_CH6
1093:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1094:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1095:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA1_CH6(void)
1096:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1097:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[11], SYSCFG_ITLINE11_SR_DMA1_CH6) == (SYSCFG_ITLINE11_SR_DMA1
1098:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1099:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE11_SR_DMA1_CH6 */
1100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE11_SR_DMA1_CH7)
1102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA1 channel 7 interrupt occurred or not.
1104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE11 SR_DMA1_CH7   LL_SYSCFG_IsActiveFlag_DMA1_CH7
1105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA1_CH7(void)
1108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[11], SYSCFG_ITLINE11_SR_DMA1_CH7) == (SYSCFG_ITLINE11_SR_DMA1
1110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE11_SR_DMA1_CH7 */
1112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE11_SR_DMA2_CH3)
1114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA2 channel 3 interrupt occurred or not.
1116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE11 SR_DMA2_CH3   LL_SYSCFG_IsActiveFlag_DMA2_CH3
1117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA2_CH3(void)
1120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[11], SYSCFG_ITLINE11_SR_DMA2_CH3) == (SYSCFG_ITLINE11_SR_DMA2
1122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE11_SR_DMA2_CH3 */
1124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE11_SR_DMA2_CH4)
1126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA2 channel 4 interrupt occurred or not.
1128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE11 SR_DMA2_CH4   LL_SYSCFG_IsActiveFlag_DMA2_CH4
1129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA2_CH4(void)
1132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[11], SYSCFG_ITLINE11_SR_DMA2_CH4) == (SYSCFG_ITLINE11_SR_DMA2
1134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE11_SR_DMA2_CH4 */
1136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE11_SR_DMA2_CH5)
1138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA2 channel 5 interrupt occurred or not.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 91


1140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE11 SR_DMA2_CH5   LL_SYSCFG_IsActiveFlag_DMA2_CH5
1141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA2_CH5(void)
1144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[11], SYSCFG_ITLINE11_SR_DMA2_CH5) == (SYSCFG_ITLINE11_SR_DMA2
1146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE11_SR_DMA2_CH5 */
1148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE12_SR_ADC)
1150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if ADC interrupt occurred or not.
1152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE12 SR_ADC        LL_SYSCFG_IsActiveFlag_ADC
1153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_ADC(void)
1156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[12], SYSCFG_ITLINE12_SR_ADC) == (SYSCFG_ITLINE12_SR_ADC));
1158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE12_SR_ADC */
1160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE12_SR_COMP1)
1162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Comparator 1 interrupt occurred or not (EXTI line 21).
1164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE12 SR_COMP1      LL_SYSCFG_IsActiveFlag_COMP1
1165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_COMP1(void)
1168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[12], SYSCFG_ITLINE12_SR_COMP1) == (SYSCFG_ITLINE12_SR_COMP1))
1170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE12_SR_COMP1 */
1172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE12_SR_COMP2)
1174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Comparator 2 interrupt occurred or not (EXTI line 22).
1176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE12 SR_COMP2      LL_SYSCFG_IsActiveFlag_COMP2
1177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_COMP2(void)
1180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[12], SYSCFG_ITLINE12_SR_COMP2) == (SYSCFG_ITLINE12_SR_COMP2))
1182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE12_SR_COMP2 */
1184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE13_SR_TIM1_BRK)
1186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 1 break interrupt occurred or not.
1188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE13 SR_TIM1_BRK   LL_SYSCFG_IsActiveFlag_TIM1_BRK
1189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM1_BRK(void)
1192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[13], SYSCFG_ITLINE13_SR_TIM1_BRK) == (SYSCFG_ITLINE13_SR_TIM1
1194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE13_SR_TIM1_BRK */
1196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 92


1197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE13_SR_TIM1_UPD)
1198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 1 update interrupt occurred or not.
1200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE13 SR_TIM1_UPD   LL_SYSCFG_IsActiveFlag_TIM1_UPD
1201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM1_UPD(void)
1204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[13], SYSCFG_ITLINE13_SR_TIM1_UPD) == (SYSCFG_ITLINE13_SR_TIM1
1206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE13_SR_TIM1_UPD */
1208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE13_SR_TIM1_TRG)
1210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 1 trigger interrupt occurred or not.
1212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE13 SR_TIM1_TRG   LL_SYSCFG_IsActiveFlag_TIM1_TRG
1213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM1_TRG(void)
1216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[13], SYSCFG_ITLINE13_SR_TIM1_TRG) == (SYSCFG_ITLINE13_SR_TIM1
1218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE13_SR_TIM1_TRG */
1220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE13_SR_TIM1_CCU)
1222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 1 commutation interrupt occurred or not.
1224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE13 SR_TIM1_CCU   LL_SYSCFG_IsActiveFlag_TIM1_CCU
1225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM1_CCU(void)
1228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[13], SYSCFG_ITLINE13_SR_TIM1_CCU) == (SYSCFG_ITLINE13_SR_TIM1
1230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE13_SR_TIM1_CCU */
1232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE14_SR_TIM1_CC)
1234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 1 capture compare interrupt occurred or not.
1236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE14 SR_TIM1_CC    LL_SYSCFG_IsActiveFlag_TIM1_CC
1237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM1_CC(void)
1240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[14], SYSCFG_ITLINE14_SR_TIM1_CC) == (SYSCFG_ITLINE14_SR_TIM1_
1242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE14_SR_TIM1_CC */
1244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE15_SR_TIM2_GLB)
1246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 2 interrupt occurred or not.
1248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE15 SR_TIM2_GLB   LL_SYSCFG_IsActiveFlag_TIM2
1249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM2(void)
1252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[15], SYSCFG_ITLINE15_SR_TIM2_GLB) == (SYSCFG_ITLINE15_SR_TIM2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 93


1254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE15_SR_TIM2_GLB */
1256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE16_SR_TIM3_GLB)
1258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 3 interrupt occurred or not.
1260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE16 SR_TIM3_GLB   LL_SYSCFG_IsActiveFlag_TIM3
1261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM3(void)
1264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[16], SYSCFG_ITLINE16_SR_TIM3_GLB) == (SYSCFG_ITLINE16_SR_TIM3
1266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE16_SR_TIM3_GLB */
1268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE17_SR_DAC)
1270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DAC underrun interrupt occurred or not.
1272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE17 SR_DAC        LL_SYSCFG_IsActiveFlag_DAC
1273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DAC(void)
1276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[17], SYSCFG_ITLINE17_SR_DAC) == (SYSCFG_ITLINE17_SR_DAC));
1278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE17_SR_DAC */
1280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE17_SR_TIM6_GLB)
1282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 6 interrupt occurred or not.
1284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE17 SR_TIM6_GLB   LL_SYSCFG_IsActiveFlag_TIM6
1285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM6(void)
1288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[17], SYSCFG_ITLINE17_SR_TIM6_GLB) == (SYSCFG_ITLINE17_SR_TIM6
1290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE17_SR_TIM6_GLB */
1292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE18_SR_TIM7_GLB)
1294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 7 interrupt occurred or not.
1296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE18 SR_TIM7_GLB   LL_SYSCFG_IsActiveFlag_TIM7
1297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM7(void)
1300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[18], SYSCFG_ITLINE18_SR_TIM7_GLB) == (SYSCFG_ITLINE18_SR_TIM7
1302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE18_SR_TIM7_GLB */
1304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE19_SR_TIM14_GLB)
1306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 14 interrupt occurred or not.
1308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE19 SR_TIM14_GLB  LL_SYSCFG_IsActiveFlag_TIM14
1309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 94


1311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM14(void)
1312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[19], SYSCFG_ITLINE19_SR_TIM14_GLB) == (SYSCFG_ITLINE19_SR_TIM
1314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE19_SR_TIM14_GLB */
1316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE20_SR_TIM15_GLB)
1318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 15 interrupt occurred or not.
1320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE20 SR_TIM15_GLB  LL_SYSCFG_IsActiveFlag_TIM15
1321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM15(void)
1324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[20], SYSCFG_ITLINE20_SR_TIM15_GLB) == (SYSCFG_ITLINE20_SR_TIM
1326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE20_SR_TIM15_GLB */
1328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE21_SR_TIM16_GLB)
1330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 16 interrupt occurred or not.
1332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE21 SR_TIM16_GLB  LL_SYSCFG_IsActiveFlag_TIM16
1333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM16(void)
1336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[21], SYSCFG_ITLINE21_SR_TIM16_GLB) == (SYSCFG_ITLINE21_SR_TIM
1338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE21_SR_TIM16_GLB */
1340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE22_SR_TIM17_GLB)
1342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 17 interrupt occurred or not.
1344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE22 SR_TIM17_GLB  LL_SYSCFG_IsActiveFlag_TIM17
1345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM17(void)
1348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[22], SYSCFG_ITLINE22_SR_TIM17_GLB) == (SYSCFG_ITLINE22_SR_TIM
1350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE22_SR_TIM17_GLB */
1352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE23_SR_I2C1_GLB)
1354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if I2C1 interrupt occurred or not, combined with EXTI line 23.
1356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE23 SR_I2C1_GLB   LL_SYSCFG_IsActiveFlag_I2C1
1357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_I2C1(void)
1360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[23], SYSCFG_ITLINE23_SR_I2C1_GLB) == (SYSCFG_ITLINE23_SR_I2C1
1362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE23_SR_I2C1_GLB */
1364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE24_SR_I2C2_GLB)
1366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if I2C2 interrupt occurred or not.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 95


1368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE24 SR_I2C2_GLB   LL_SYSCFG_IsActiveFlag_I2C2
1369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_I2C2(void)
1372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[24], SYSCFG_ITLINE24_SR_I2C2_GLB) == (SYSCFG_ITLINE24_SR_I2C2
1374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE24_SR_I2C2_GLB */
1376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE25_SR_SPI1)
1378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if SPI1 interrupt occurred or not.
1380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE25 SR_SPI1       LL_SYSCFG_IsActiveFlag_SPI1
1381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_SPI1(void)
1384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[25], SYSCFG_ITLINE25_SR_SPI1) == (SYSCFG_ITLINE25_SR_SPI1));
1386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE25_SR_SPI1 */
1388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE26_SR_SPI2)
1390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if SPI2 interrupt occurred or not.
1392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE26 SR_SPI2       LL_SYSCFG_IsActiveFlag_SPI2
1393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_SPI2(void)
1396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[26], SYSCFG_ITLINE26_SR_SPI2) == (SYSCFG_ITLINE26_SR_SPI2));
1398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE26_SR_SPI2 */
1400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE27_SR_USART1_GLB)
1402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if USART1 interrupt occurred or not, combined with EXTI line 25.
1404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE27 SR_USART1_GLB  LL_SYSCFG_IsActiveFlag_USART1
1405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_USART1(void)
1408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[27], SYSCFG_ITLINE27_SR_USART1_GLB) == (SYSCFG_ITLINE27_SR_US
1410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE27_SR_USART1_GLB */
1412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE28_SR_USART2_GLB)
1414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if USART2 interrupt occurred or not, combined with EXTI line 26.
1416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE28 SR_USART2_GLB  LL_SYSCFG_IsActiveFlag_USART2
1417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_USART2(void)
1420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[28], SYSCFG_ITLINE28_SR_USART2_GLB) == (SYSCFG_ITLINE28_SR_US
1422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE28_SR_USART2_GLB */
1424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 96


1425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE29_SR_USART3_GLB)
1426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if USART3 interrupt occurred or not, combined with EXTI line 28.
1428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE29 SR_USART3_GLB  LL_SYSCFG_IsActiveFlag_USART3
1429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_USART3(void)
1432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[29], SYSCFG_ITLINE29_SR_USART3_GLB) == (SYSCFG_ITLINE29_SR_US
1434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE29_SR_USART3_GLB */
1436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE29_SR_USART4_GLB)
1438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if USART4 interrupt occurred or not.
1440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE29 SR_USART4_GLB  LL_SYSCFG_IsActiveFlag_USART4
1441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_USART4(void)
1444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[29], SYSCFG_ITLINE29_SR_USART4_GLB) == (SYSCFG_ITLINE29_SR_US
1446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE29_SR_USART4_GLB */
1448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE29_SR_USART5_GLB)
1450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if USART5 interrupt occurred or not.
1452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE29 SR_USART5_GLB  LL_SYSCFG_IsActiveFlag_USART5
1453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_USART5(void)
1456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[29], SYSCFG_ITLINE29_SR_USART5_GLB) == (SYSCFG_ITLINE29_SR_US
1458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE29_SR_USART5_GLB */
1460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE29_SR_USART6_GLB)
1462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if USART6 interrupt occurred or not.
1464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE29 SR_USART6_GLB  LL_SYSCFG_IsActiveFlag_USART6
1465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_USART6(void)
1468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[29], SYSCFG_ITLINE29_SR_USART6_GLB) == (SYSCFG_ITLINE29_SR_US
1470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE29_SR_USART6_GLB */
1472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE29_SR_USART7_GLB)
1474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if USART7 interrupt occurred or not.
1476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE29 SR_USART7_GLB  LL_SYSCFG_IsActiveFlag_USART7
1477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_USART7(void)
1480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[29], SYSCFG_ITLINE29_SR_USART7_GLB) == (SYSCFG_ITLINE29_SR_US
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 97


1482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE29_SR_USART7_GLB */
1484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE29_SR_USART8_GLB)
1486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if USART8 interrupt occurred or not.
1488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE29 SR_USART8_GLB  LL_SYSCFG_IsActiveFlag_USART8
1489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_USART8(void)
1492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[29], SYSCFG_ITLINE29_SR_USART8_GLB) == (SYSCFG_ITLINE29_SR_US
1494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE29_SR_USART8_GLB */
1496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE30_SR_CAN)
1498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if CAN interrupt occurred or not.
1500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE30 SR_CAN        LL_SYSCFG_IsActiveFlag_CAN
1501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_CAN(void)
1504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[30], SYSCFG_ITLINE30_SR_CAN) == (SYSCFG_ITLINE30_SR_CAN));
1506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE30_SR_CAN */
1508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE30_SR_CEC)
1510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if CEC interrupt occurred or not, combined with EXTI line 27.
1512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE30 SR_CEC        LL_SYSCFG_IsActiveFlag_CEC
1513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_CEC(void)
1516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[30], SYSCFG_ITLINE30_SR_CEC) == (SYSCFG_ITLINE30_SR_CEC));
1518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE30_SR_CEC */
1520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Set connections to TIMx Break inputs
1523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 LOCKUP_LOCK   LL_SYSCFG_SetTIMBreakInputs\n
1524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR2 SRAM_PARITY_LOCK  LL_SYSCFG_SetTIMBreakInputs\n
1525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR2 PVD_LOCK      LL_SYSCFG_SetTIMBreakInputs
1526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Break This parameter can be a combination of the following values:
1527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_PVD (*)
1528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_SRAM_PARITY
1529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_LOCKUP
1530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
1531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices
1532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetTIMBreakInputs(uint32_t Break)
1535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR2_PVD_LOCK)
1537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR2, SYSCFG_CFGR2_LOCKUP_LOCK | SYSCFG_CFGR2_SRAM_PARITY_LOCK | SYSCFG_CFGR2
1538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #else
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 98


1539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR2, SYSCFG_CFGR2_LOCKUP_LOCK | SYSCFG_CFGR2_SRAM_PARITY_LOCK, Break);
1540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR2_PVD_LOCK*/
1541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Get connections to TIMx Break inputs
1545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 LOCKUP_LOCK   LL_SYSCFG_GetTIMBreakInputs\n
1546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR2 SRAM_PARITY_LOCK  LL_SYSCFG_GetTIMBreakInputs\n
1547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR2 PVD_LOCK      LL_SYSCFG_GetTIMBreakInputs
1548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval Returned value can be can be a combination of the following values:
1549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_PVD (*)
1550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_SRAM_PARITY
1551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_LOCKUP
1552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
1553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices
1554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetTIMBreakInputs(void)
1556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR2_PVD_LOCK)
1558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->CFGR2,
1559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****                              SYSCFG_CFGR2_LOCKUP_LOCK | SYSCFG_CFGR2_SRAM_PARITY_LOCK | SYSCFG_CFGR
1560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #else
1561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->CFGR2, SYSCFG_CFGR2_LOCKUP_LOCK | SYSCFG_CFGR2_SRAM_PARITY_LOC
1562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR2_PVD_LOCK*/
1563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if SRAM parity error detected
1567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 SRAM_PEF      LL_SYSCFG_IsActiveFlag_SP
1568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_SP(void)
1571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->CFGR2, SYSCFG_CFGR2_SRAM_PEF) == (SYSCFG_CFGR2_SRAM_PEF));
1573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Clear SRAM parity error flag
1577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 SRAM_PEF      LL_SYSCFG_ClearFlag_SP
1578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_ClearFlag_SP(void)
1581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR2, SYSCFG_CFGR2_SRAM_PEF);
1583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
1587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_DBGMCU DBGMCU
1590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
1591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Return the device identifier
1595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @note For STM32F03x devices, the device ID is 0x444
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 99


1596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @note For STM32F04x devices, the device ID is 0x445.
1597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @note For STM32F05x devices, the device ID is 0x440
1598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @note For STM32F07x devices, the device ID is 0x448
1599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @note For STM32F09x devices, the device ID is 0x442
1600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll DBGMCU_IDCODE DEV_ID        LL_DBGMCU_GetDeviceID
1601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval Values between Min_Data=0x00 and Max_Data=0xFFF
1602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetDeviceID(void)
1604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->IDCODE, DBGMCU_IDCODE_DEV_ID));
1606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Return the device revision identifier
1610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @note This field indicates the revision of the device.
1611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****           For example, it is read as 0x1000 for Revision 1.0.
1612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll DBGMCU_IDCODE REV_ID        LL_DBGMCU_GetRevisionID
1613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval Values between Min_Data=0x00 and Max_Data=0xFFFF
1614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetRevisionID(void)
1616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->IDCODE, DBGMCU_IDCODE_REV_ID) >> DBGMCU_IDCODE_REV_ID_Pos);
1618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Enable the Debug Module during STOP mode
1622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STOP      LL_DBGMCU_EnableDBGStopMode
1623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGStopMode(void)
1626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
1628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Disable the Debug Module during STOP mode
1632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STOP      LL_DBGMCU_DisableDBGStopMode
1633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGStopMode(void)
1636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
1638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Enable the Debug Module during STANDBY mode
1642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STANDBY   LL_DBGMCU_EnableDBGStandbyMode
1643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGStandbyMode(void)
1646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
1648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Disable the Debug Module during STANDBY mode
1652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STANDBY   LL_DBGMCU_DisableDBGStandbyMode
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 100


1653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGStandbyMode(void)
1656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
1658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Freeze APB1 peripherals (group1 peripherals)
1662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll DBGMCU_APB1FZ DBG_TIM2_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
1663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_TIM3_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
1664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_TIM6_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
1665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_TIM7_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
1666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_TIM14_STOP          LL_DBGMCU_APB1_GRP1_FreezePeriph\n
1667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_RTC_STOP            LL_DBGMCU_APB1_GRP1_FreezePeriph\n
1668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_WWDG_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
1669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_IWDG_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
1670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_I2C1_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_FreezePeriph\n
1671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_CAN_STOP  LL_DBGMCU_APB1_GRP1_FreezePeriph
1672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
1673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM2_STOP (*)
1674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM3_STOP
1675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM6_STOP (*)
1676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM7_STOP (*)
1677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM14_STOP
1678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_RTC_STOP
1679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_WWDG_STOP
1680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_IWDG_STOP
1681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C1_STOP
1682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN_STOP (*)
1683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
1684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices
1685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP1_FreezePeriph(uint32_t Periphs)
1688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   SET_BIT(DBGMCU->APB1FZ, Periphs);
1690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Unfreeze APB1 peripherals (group1 peripherals)
1694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll DBGMCU_APB1FZ DBG_TIM2_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
1695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_TIM3_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
1696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_TIM6_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
1697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_TIM7_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
1698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_TIM14_STOP          LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
1699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_RTC_STOP            LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
1700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_WWDG_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
1701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_IWDG_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
1702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_I2C1_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
1703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_CAN_STOP            LL_DBGMCU_APB1_GRP1_UnFreezePeriph
1704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
1705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM2_STOP (*)
1706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM3_STOP
1707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM6_STOP (*)
1708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM7_STOP (*)
1709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM14_STOP
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 101


1710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_RTC_STOP
1711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_WWDG_STOP
1712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_IWDG_STOP
1713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C1_STOP
1714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN_STOP (*)
1715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
1716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices
1717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP1_UnFreezePeriph(uint32_t Periphs)
1720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   CLEAR_BIT(DBGMCU->APB1FZ, Periphs);
1722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Freeze APB1 peripherals (group2 peripherals)
1726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll DBGMCU_APB2FZ DBG_TIM1_STOP   LL_DBGMCU_APB1_GRP2_FreezePeriph\n
1727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB2FZ DBG_TIM15_STOP  LL_DBGMCU_APB1_GRP2_FreezePeriph\n
1728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB2FZ DBG_TIM16_STOP  LL_DBGMCU_APB1_GRP2_FreezePeriph\n
1729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB2FZ DBG_TIM17_STOP  LL_DBGMCU_APB1_GRP2_FreezePeriph
1730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
1731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP2_TIM1_STOP
1732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP2_TIM15_STOP (*)
1733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP2_TIM16_STOP
1734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP2_TIM17_STOP
1735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
1736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices
1737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP2_FreezePeriph(uint32_t Periphs)
1740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   SET_BIT(DBGMCU->APB2FZ, Periphs);
1742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Unfreeze APB1 peripherals (group2 peripherals)
1746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll DBGMCU_APB2FZ DBG_TIM1_STOP   LL_DBGMCU_APB1_GRP2_UnFreezePeriph\n
1747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB2FZ DBG_TIM15_STOP  LL_DBGMCU_APB1_GRP2_UnFreezePeriph\n
1748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB2FZ DBG_TIM16_STOP  LL_DBGMCU_APB1_GRP2_UnFreezePeriph\n
1749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB2FZ DBG_TIM17_STOP  LL_DBGMCU_APB1_GRP2_UnFreezePeriph
1750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
1751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP2_TIM1_STOP
1752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP2_TIM15_STOP (*)
1753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP2_TIM16_STOP
1754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP2_TIM17_STOP
1755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
1756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices
1757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP2_UnFreezePeriph(uint32_t Periphs)
1760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   CLEAR_BIT(DBGMCU->APB2FZ, Periphs);
1762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
1765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 102


1767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_FLASH FLASH
1768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
1769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Set FLASH Latency
1773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll FLASH_ACR    LATENCY       LL_FLASH_SetLatency
1774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Latency This parameter can be one of the following values:
1775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_0
1776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_1
1777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_FLASH_SetLatency(uint32_t Latency)
 130              		.loc 3 1779 22 view .LVU27
 131              	.LBB53:
1780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, Latency);
 132              		.loc 3 1781 3 view .LVU28
 133 0002 324A     		ldr	r2, .L14
 134 0004 1368     		ldr	r3, [r2]
 135 0006 0121     		movs	r1, #1
 136 0008 8B43     		bics	r3, r1
 137 000a 0B43     		orrs	r3, r1
 138 000c 1360     		str	r3, [r2]
 139              	.LVL9:
 140              	.L9:
 141              		.loc 3 1781 3 is_stmt 0 view .LVU29
 142              	.LBE53:
 143              	.LBE52:
 139:Src/main.c    ****   while(LL_FLASH_GetLatency() != LL_FLASH_LATENCY_1)
 140:Src/main.c    ****   {
 141:Src/main.c    ****   }
 144              		.loc 1 141 3 is_stmt 1 discriminator 1 view .LVU30
 139:Src/main.c    ****   while(LL_FLASH_GetLatency() != LL_FLASH_LATENCY_1)
 145              		.loc 1 139 8 discriminator 1 view .LVU31
 146              	.LBB54:
 147              	.LBI54:
1782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Get FLASH Latency
1786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll FLASH_ACR    LATENCY       LL_FLASH_GetLatency
1787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval Returned value can be one of the following values:
1788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_0
1789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_1
1790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_FLASH_GetLatency(void)
 148              		.loc 3 1791 26 discriminator 1 view .LVU32
 149              	.LBB55:
1792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (uint32_t)(READ_BIT(FLASH->ACR, FLASH_ACR_LATENCY));
 150              		.loc 3 1793 3 discriminator 1 view .LVU33
 151              		.loc 3 1793 21 is_stmt 0 discriminator 1 view .LVU34
 152 000e 2F4B     		ldr	r3, .L14
 153 0010 1B68     		ldr	r3, [r3]
 154              	.LBE55:
 155              	.LBE54:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 103


 139:Src/main.c    ****   {
 156              		.loc 1 139 8 discriminator 1 view .LVU35
 157 0012 DB07     		lsls	r3, r3, #31
 158 0014 FBD5     		bpl	.L9
 142:Src/main.c    ****   LL_RCC_HSI_Enable();
 159              		.loc 1 142 3 is_stmt 1 view .LVU36
 160              	.LBB56:
 161              	.LBI56:
 162              		.file 4 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @file    stm32f0xx_ll_rcc.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief   Header file of RCC LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   ******************************************************************************
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #ifndef __STM32F0xx_LL_RCC_H
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define __STM32F0xx_LL_RCC_H
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #ifdef __cplusplus
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** extern "C" {
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #include "stm32f0xx.h"
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @addtogroup STM32F0xx_LL_Driver
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC)
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL RCC
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_Private_Constants RCC Private Constants
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Defines used for the bit position in the register and perform offsets*/
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_HPRE       (uint32_t)4U  /*!< field position in register RCC_CFGR */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 104


  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_PPRE1      (uint32_t)8U  /*!< field position in register RCC_CFGR */
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_PLLMUL     (uint32_t)18U /*!< field position in register RCC_CFGR */
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_HSICAL     (uint32_t)8U  /*!< field position in register RCC_CR */
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_HSITRIM    (uint32_t)3U  /*!< field position in register RCC_CR */
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_HSI14TRIM  (uint32_t)3U  /*!< field position in register RCC_CR2 */
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_HSI14CAL   (uint32_t)8U  /*!< field position in register RCC_CR2 */
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_HSI48CAL   (uint32_t)24U /*!< field position in register RCC_CR2 */
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_USART1SW   (uint32_t)0U  /*!< field position in register RCC_CFGR3 */
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_USART2SW   (uint32_t)16U /*!< field position in register RCC_CFGR3 */
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_USART3SW   (uint32_t)18U /*!< field position in register RCC_CFGR3 */
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Private macros ------------------------------------------------------------*/
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_Private_Macros RCC Private Macros
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /*USE_FULL_LL_DRIVER*/
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Exported types ------------------------------------------------------------*/
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Types RCC Exported Types
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup LL_ES_CLOCK_FREQ Clocks Frequency Structure
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  RCC Clocks Frequency Structure
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** typedef struct
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   uint32_t SYSCLK_Frequency;        /*!< SYSCLK clock frequency */
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   uint32_t HCLK_Frequency;          /*!< HCLK clock frequency */
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   uint32_t PCLK1_Frequency;         /*!< PCLK1 clock frequency */
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** } LL_RCC_ClocksTypeDef;
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* USE_FULL_LL_DRIVER */
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Exported constants --------------------------------------------------------*/
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Constants RCC Exported Constants
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 105


 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_OSC_VALUES Oscillator Values adaptation
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief    Defines used to adapt values of different oscillators
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note     These values could be modified in the user environment according to
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *           HW set-up.
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if !defined  (HSE_VALUE)
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define HSE_VALUE    8000000U  /*!< Value of the HSE oscillator in Hz */
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* HSE_VALUE */
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if !defined  (HSI_VALUE)
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define HSI_VALUE    8000000U  /*!< Value of the HSI oscillator in Hz */
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* HSI_VALUE */
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if !defined  (LSE_VALUE)
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LSE_VALUE    32768U    /*!< Value of the LSE oscillator in Hz */
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* LSE_VALUE */
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if !defined  (LSI_VALUE)
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LSI_VALUE    32000U    /*!< Value of the LSI oscillator in Hz */
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* LSI_VALUE */
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if !defined  (HSI48_VALUE)
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define HSI48_VALUE  48000000U /*!< Value of the HSI48 oscillator in Hz */
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* HSI48_VALUE */
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_CLEAR_FLAG Clear Flags Defines
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief    Flags defines which can be used with LL_RCC_WriteReg function
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_LSIRDYC                RCC_CIR_LSIRDYC     /*!< LSI Ready Interrupt Clear */
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_LSERDYC                RCC_CIR_LSERDYC     /*!< LSE Ready Interrupt Clear */
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSIRDYC                RCC_CIR_HSIRDYC     /*!< HSI Ready Interrupt Clear */
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSERDYC                RCC_CIR_HSERDYC     /*!< HSE Ready Interrupt Clear */
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_PLLRDYC                RCC_CIR_PLLRDYC     /*!< PLL Ready Interrupt Clear */
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSI14RDYC               RCC_CIR_HSI14RDYC  /*!< HSI14 Ready Interrupt Clear */
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSI48RDYC               RCC_CIR_HSI48RDYC  /*!< HSI48 Ready Interrupt Clear */
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_CSSC                   RCC_CIR_CSSC        /*!< Clock Security System Interrupt 
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_GET_FLAG Get Flags Defines
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief    Flags defines which can be used with LL_RCC_ReadReg function
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_LSIRDYF                RCC_CIR_LSIRDYF     /*!< LSI Ready Interrupt flag */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 106


 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_LSERDYF                RCC_CIR_LSERDYF     /*!< LSE Ready Interrupt flag */
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSIRDYF                RCC_CIR_HSIRDYF     /*!< HSI Ready Interrupt flag */
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSERDYF                RCC_CIR_HSERDYF     /*!< HSE Ready Interrupt flag */
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_PLLRDYF                RCC_CIR_PLLRDYF     /*!< PLL Ready Interrupt flag */
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSI14RDYF               RCC_CIR_HSI14RDYF  /*!< HSI14 Ready Interrupt flag */
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSI48RDYF               RCC_CIR_HSI48RDYF  /*!< HSI48 Ready Interrupt flag */
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_CSSF                   RCC_CIR_CSSF       /*!< Clock Security System Interrupt f
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CSR_OBLRSTF                RCC_CSR_OBLRSTF         /*!< OBL reset flag */
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CSR_PINRSTF                RCC_CSR_PINRSTF         /*!< PIN reset flag */
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CSR_PORRSTF                RCC_CSR_PORRSTF         /*!< POR/PDR reset flag */
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CSR_SFTRSTF                RCC_CSR_SFTRSTF         /*!< Software Reset flag */
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CSR_IWDGRSTF               RCC_CSR_IWDGRSTF        /*!< Independent Watchdog reset f
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CSR_WWDGRSTF               RCC_CSR_WWDGRSTF        /*!< Window watchdog reset flag *
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CSR_LPWRRSTF               RCC_CSR_LPWRRSTF        /*!< Low-Power reset flag */
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CSR_V18PWRRSTF)
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CSR_V18PWRRSTF             RCC_CSR_V18PWRRSTF      /*!< Reset flag of the 1.8 V doma
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CSR_V18PWRRSTF */
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_IT IT Defines
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief    IT defines which can be used with LL_RCC_ReadReg and  LL_RCC_WriteReg functions
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_LSIRDYIE               RCC_CIR_LSIRDYIE      /*!< LSI Ready Interrupt Enable */
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_LSERDYIE               RCC_CIR_LSERDYIE      /*!< LSE Ready Interrupt Enable */
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSIRDYIE               RCC_CIR_HSIRDYIE      /*!< HSI Ready Interrupt Enable */
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSERDYIE               RCC_CIR_HSERDYIE      /*!< HSE Ready Interrupt Enable */
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_PLLRDYIE               RCC_CIR_PLLRDYIE      /*!< PLL Ready Interrupt Enable */
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSI14RDYIE              RCC_CIR_HSI14RDYIE   /*!< HSI14 Ready Interrupt Enable *
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSI48RDYIE              RCC_CIR_HSI48RDYIE   /*!< HSI48 Ready Interrupt Enable *
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LSEDRIVE  LSE oscillator drive capability
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_LOW                ((uint32_t)0x00000000U) /*!< Xtal mode lower driving cap
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_MEDIUMLOW          RCC_BDCR_LSEDRV_1 /*!< Xtal mode medium low driving capa
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_MEDIUMHIGH         RCC_BDCR_LSEDRV_0 /*!< Xtal mode medium high driving cap
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_HIGH               RCC_BDCR_LSEDRV   /*!< Xtal mode higher driving capabili
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYS_CLKSOURCE  System clock switch
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSI           RCC_CFGR_SW_HSI    /*!< HSI selection as system clock */
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSE           RCC_CFGR_SW_HSE    /*!< HSE selection as system clock */
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_PLL           RCC_CFGR_SW_PLL    /*!< PLL selection as system clock */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 107


 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR_SW_HSI48)
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSI48         RCC_CFGR_SW_HSI48  /*!< HSI48 selection as system clock 
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR_SW_HSI48 */
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYS_CLKSOURCE_STATUS  System clock switch status
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSI    RCC_CFGR_SWS_HSI   /*!< HSI used as system clock */
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSE    RCC_CFGR_SWS_HSE   /*!< HSE used as system clock */
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_PLL    RCC_CFGR_SWS_PLL   /*!< PLL used as system clock */
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR_SWS_HSI48)
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSI48  RCC_CFGR_SWS_HSI48 /*!< HSI48 used as system clock */
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR_SWS_HSI48 */
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYSCLK_DIV  AHB prescaler
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_1                RCC_CFGR_HPRE_DIV1   /*!< SYSCLK not divided */
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_2                RCC_CFGR_HPRE_DIV2   /*!< SYSCLK divided by 2 */
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_4                RCC_CFGR_HPRE_DIV4   /*!< SYSCLK divided by 4 */
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_8                RCC_CFGR_HPRE_DIV8   /*!< SYSCLK divided by 8 */
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_16               RCC_CFGR_HPRE_DIV16  /*!< SYSCLK divided by 16 */
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_64               RCC_CFGR_HPRE_DIV64  /*!< SYSCLK divided by 64 */
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_128              RCC_CFGR_HPRE_DIV128 /*!< SYSCLK divided by 128 */
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_256              RCC_CFGR_HPRE_DIV256 /*!< SYSCLK divided by 256 */
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_512              RCC_CFGR_HPRE_DIV512 /*!< SYSCLK divided by 512 */
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_APB1_DIV  APB low-speed prescaler (APB1)
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_1                  RCC_CFGR_PPRE_DIV1  /*!< HCLK not divided */
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_2                  RCC_CFGR_PPRE_DIV2  /*!< HCLK divided by 2 */
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_4                  RCC_CFGR_PPRE_DIV4  /*!< HCLK divided by 4 */
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_8                  RCC_CFGR_PPRE_DIV8  /*!< HCLK divided by 8 */
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_16                 RCC_CFGR_PPRE_DIV16 /*!< HCLK divided by 16 */
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MCO1SOURCE  MCO1 SOURCE selection
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_NOCLOCK          RCC_CFGR_MCOSEL_NOCLOCK      /*!< MCO output disabled, n
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSI14            RCC_CFGR_MCOSEL_HSI14        /*!< HSI14 oscillator clock
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_SYSCLK           RCC_CFGR_MCOSEL_SYSCLK       /*!< SYSCLK selection as MC
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSI              RCC_CFGR_MCOSEL_HSI          /*!< HSI selection as MCO s
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSE              RCC_CFGR_MCOSEL_HSE          /*!< HSE selection as MCO s
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_LSI              RCC_CFGR_MCOSEL_LSI          /*!< LSI selection as MCO s
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 108


 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_LSE              RCC_CFGR_MCOSEL_LSE          /*!< LSE selection as MCO s
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR_MCOSEL_HSI48)
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSI48            RCC_CFGR_MCOSEL_HSI48        /*!< HSI48 selection as MCO
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR_MCOSEL_HSI48 */
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_PLLCLK_DIV_2     RCC_CFGR_MCOSEL_PLL_DIV2     /*!< PLL clock divided by 2
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR_PLLNODIV)
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_PLLCLK           (RCC_CFGR_MCOSEL_PLL_DIV2 | RCC_CFGR_PLLNODIV) /*!< PLL 
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR_PLLNODIV */
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MCO1_DIV  MCO1 prescaler
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_1                  ((uint32_t)0x00000000U)/*!< MCO Clock divided by 1 */
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR_MCOPRE)
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_2                  RCC_CFGR_MCOPRE_DIV2   /*!< MCO Clock divided by 2 */
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_4                  RCC_CFGR_MCOPRE_DIV4   /*!< MCO Clock divided by 4 */
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_8                  RCC_CFGR_MCOPRE_DIV8   /*!< MCO Clock divided by 8 */
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_16                 RCC_CFGR_MCOPRE_DIV16  /*!< MCO Clock divided by 16 */
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_32                 RCC_CFGR_MCOPRE_DIV32  /*!< MCO Clock divided by 32 */
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_64                 RCC_CFGR_MCOPRE_DIV64  /*!< MCO Clock divided by 64 */
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_128                RCC_CFGR_MCOPRE_DIV128 /*!< MCO Clock divided by 128 */
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR_MCOPRE */
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PERIPH_FREQUENCY Peripheral clock frequency
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PERIPH_FREQUENCY_NO         0x00000000U      /*!< No clock enabled for the periphera
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PERIPH_FREQUENCY_NA         0xFFFFFFFFU      /*!< Frequency cannot be provided as ex
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* USE_FULL_LL_DRIVER */
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USART1_CLKSOURCE Peripheral USART clock source selection
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_PCLK1      (uint32_t)((RCC_POSITION_USART1SW << 24) | RCC_CFGR3_USA
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_SYSCLK     (uint32_t)((RCC_POSITION_USART1SW << 24) | RCC_CFGR3_USA
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_LSE        (uint32_t)((RCC_POSITION_USART1SW << 24) | RCC_CFGR3_USA
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_HSI        (uint32_t)((RCC_POSITION_USART1SW << 24) | RCC_CFGR3_USA
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR3_USART2SW)
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_PCLK1      (uint32_t)((RCC_POSITION_USART2SW << 24) | RCC_CFGR3_USA
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_SYSCLK     (uint32_t)((RCC_POSITION_USART2SW << 24) | RCC_CFGR3_USA
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_LSE        (uint32_t)((RCC_POSITION_USART2SW << 24) | RCC_CFGR3_USA
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_HSI        (uint32_t)((RCC_POSITION_USART2SW << 24) | RCC_CFGR3_USA
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR3_USART2SW */
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR3_USART3SW)
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE_PCLK1      (uint32_t)((RCC_POSITION_USART3SW << 24) | RCC_CFGR3_USA
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE_SYSCLK     (uint32_t)((RCC_POSITION_USART3SW << 24) | RCC_CFGR3_USA
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE_LSE        (uint32_t)((RCC_POSITION_USART3SW << 24) | RCC_CFGR3_USA
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 109


 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE_HSI        (uint32_t)((RCC_POSITION_USART3SW << 24) | RCC_CFGR3_USA
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR3_USART3SW */
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2C1_CLKSOURCE Peripheral I2C clock source selection
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE_HSI          RCC_CFGR3_I2C1SW_HSI    /*!< HSI oscillator clock used a
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE_SYSCLK       RCC_CFGR3_I2C1SW_SYSCLK /*!< System clock selected as I2
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(CEC)
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_CEC_CLKSOURCE Peripheral CEC clock source selection
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CEC_CLKSOURCE_HSI_DIV244    RCC_CFGR3_CECSW_HSI_DIV244 /*!< HSI clock divided by 244
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CEC_CLKSOURCE_LSE           RCC_CFGR3_CECSW_LSE        /*!< LSE clock selected as HD
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* CEC */
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(USB)
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USB_CLKSOURCE Peripheral USB clock source selection
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR3_USBSW_HSI48)
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_HSI48         RCC_CFGR3_USBSW_HSI48   /*!< HSI48 oscillator clock used
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #else
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_NONE          ((uint32_t)0x00000000)  /*!< USB Clock disabled */
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /*RCC_CFGR3_USBSW_HSI48*/
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_PLL           RCC_CFGR3_USBSW_PLLCLK  /*!< PLL selected as USB clock s
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* USB */
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USART1 Peripheral USART get clock source
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE            RCC_POSITION_USART1SW /*!< USART1 Clock source selection
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR3_USART2SW)
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE            RCC_POSITION_USART2SW /*!< USART2 Clock source selection
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR3_USART2SW */
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR3_USART3SW)
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE            RCC_POSITION_USART3SW /*!< USART3 Clock source selection
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR3_USART3SW */
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 110


 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2C1 Peripheral I2C get clock source
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE              RCC_CFGR3_I2C1SW     /*!< I2C1 Clock source selection */
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(CEC)
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_CEC Peripheral CEC get clock source
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CEC_CLKSOURCE               RCC_CFGR3_CECSW            /*!< CEC Clock source selecti
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* CEC */
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(USB)
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USB Peripheral USB get clock source
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE               RCC_CFGR3_USBSW         /*!< USB Clock source selection 
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* USB */
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RTC_CLKSOURCE  RTC clock source selection
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_NONE          0x00000000U                   /*!< No clock used as RTC 
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_LSE           RCC_BDCR_RTCSEL_0       /*!< LSE oscillator clock used a
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_LSI           RCC_BDCR_RTCSEL_1       /*!< LSI oscillator clock used a
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_HSE_DIV32     RCC_BDCR_RTCSEL         /*!< HSE oscillator clock divide
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLL_MUL PLL Multiplicator factor
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_2                   RCC_CFGR_PLLMUL2  /*!< PLL input clock*2 */
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_3                   RCC_CFGR_PLLMUL3  /*!< PLL input clock*3 */
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_4                   RCC_CFGR_PLLMUL4  /*!< PLL input clock*4 */
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_5                   RCC_CFGR_PLLMUL5  /*!< PLL input clock*5 */
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_6                   RCC_CFGR_PLLMUL6  /*!< PLL input clock*6 */
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_7                   RCC_CFGR_PLLMUL7  /*!< PLL input clock*7 */
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_8                   RCC_CFGR_PLLMUL8  /*!< PLL input clock*8 */
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_9                   RCC_CFGR_PLLMUL9  /*!< PLL input clock*9 */
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_10                  RCC_CFGR_PLLMUL10  /*!< PLL input clock*10 */
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_11                  RCC_CFGR_PLLMUL11  /*!< PLL input clock*11 */
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_12                  RCC_CFGR_PLLMUL12  /*!< PLL input clock*12 */
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_13                  RCC_CFGR_PLLMUL13  /*!< PLL input clock*13 */
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_14                  RCC_CFGR_PLLMUL14  /*!< PLL input clock*14 */
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_15                  RCC_CFGR_PLLMUL15  /*!< PLL input clock*15 */
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_16                  RCC_CFGR_PLLMUL16  /*!< PLL input clock*16 */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 111


 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSOURCE PLL SOURCE
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_NONE              0x00000000U                                   /*!< No cl
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE               RCC_CFGR_PLLSRC_HSE_PREDIV                    /*!< HSE/P
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_PLLSRC_PREDIV1_SUPPORT)
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSI               RCC_CFGR_PLLSRC_HSI_PREDIV                    /*!< HSI/P
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR_SW_HSI48)
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSI48             RCC_CFGR_PLLSRC_HSI48_PREDIV                  /*!< HSI48
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR_SW_HSI48 */
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #else
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSI_DIV_2         RCC_CFGR_PLLSRC_HSI_DIV2                      /*!< HSI c
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_1         (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV1)    
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_2         (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV2)    
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_3         (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV3)    
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_4         (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV4)    
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_5         (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV5)    
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_6         (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV6)    
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_7         (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV7)    
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_8         (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV8)    
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_9         (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV9)    
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_10        (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV10)   
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_11        (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV11)   
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_12        (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV12)   
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_13        (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV13)   
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_14        (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV14)   
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_15        (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV15)   
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_16        (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV16)   
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_PLLSRC_PREDIV1_SUPPORT */
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PREDIV_DIV PREDIV Division factor
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_1                RCC_CFGR2_PREDIV_DIV1   /*!< PREDIV input clock not divi
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_2                RCC_CFGR2_PREDIV_DIV2   /*!< PREDIV input clock divided 
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_3                RCC_CFGR2_PREDIV_DIV3   /*!< PREDIV input clock divided 
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_4                RCC_CFGR2_PREDIV_DIV4   /*!< PREDIV input clock divided 
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_5                RCC_CFGR2_PREDIV_DIV5   /*!< PREDIV input clock divided 
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_6                RCC_CFGR2_PREDIV_DIV6   /*!< PREDIV input clock divided 
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_7                RCC_CFGR2_PREDIV_DIV7   /*!< PREDIV input clock divided 
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_8                RCC_CFGR2_PREDIV_DIV8   /*!< PREDIV input clock divided 
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_9                RCC_CFGR2_PREDIV_DIV9   /*!< PREDIV input clock divided 
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_10               RCC_CFGR2_PREDIV_DIV10  /*!< PREDIV input clock divided 
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_11               RCC_CFGR2_PREDIV_DIV11  /*!< PREDIV input clock divided 
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_12               RCC_CFGR2_PREDIV_DIV12  /*!< PREDIV input clock divided 
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_13               RCC_CFGR2_PREDIV_DIV13  /*!< PREDIV input clock divided 
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_14               RCC_CFGR2_PREDIV_DIV14  /*!< PREDIV input clock divided 
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_15               RCC_CFGR2_PREDIV_DIV15  /*!< PREDIV input clock divided 
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_16               RCC_CFGR2_PREDIV_DIV16  /*!< PREDIV input clock divided 
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 112


 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Exported macro ------------------------------------------------------------*/
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Macros RCC Exported Macros
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EM_WRITE_READ Common Write and read registers Macros
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Write a value in RCC register
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __REG__ Register to be written
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __VALUE__ Value to be written in the register
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_WriteReg(__REG__, __VALUE__) WRITE_REG(RCC->__REG__, (__VALUE__))
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Read a value in RCC register
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __REG__ Register to be read
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Register value
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_ReadReg(__REG__) READ_REG(RCC->__REG__)
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EM_CALC_FREQ Calculate frequencies
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_PLLSRC_PREDIV1_SUPPORT)
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_FREQ (HSE_VALUE, @ref LL_RCC_PLL_GetMultiplicator()
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *             , @ref LL_RCC_PLL_GetPrediv());
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE/HSI/HSI48)
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __PLLMUL__ This parameter can be one of the following values:
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_2
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_3
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_4
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_5
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_7
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_8
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_9
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_10
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_11
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_12
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_13
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 113


 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_14
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_15
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_16
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __PLLPREDIV__ This parameter can be one of the following values:
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_1
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_2
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_3
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_4
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_5
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_6
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_7
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_8
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_9
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_10
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_11
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_12
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_13
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_14
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_15
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_16
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_FREQ(__INPUTFREQ__, __PLLMUL__, __PLLPREDIV__) \
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****           (((__INPUTFREQ__) / ((((__PLLPREDIV__) & RCC_CFGR2_PREDIV) + 1U))) * ((((__PLLMUL__) & RC
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #else
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_FREQ (HSE_VALUE / (@ref LL_RCC_PLL_GetPrediv () + 1), @ref 
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE div Prediv / HSI div 2)
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __PLLMUL__ This parameter can be one of the following values:
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_2
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_3
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_4
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_5
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_7
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_8
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_9
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_10
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_11
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_12
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_13
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_14
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_15
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_16
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_FREQ(__INPUTFREQ__, __PLLMUL__) \
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****           ((__INPUTFREQ__) * ((((__PLLMUL__) & RCC_CFGR_PLLMUL) >> RCC_POSITION_PLLMUL) + 2U))
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_PLLSRC_PREDIV1_SUPPORT */
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Helper macro to calculate the HCLK frequency
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note: __AHBPRESCALER__ be retrieved by @ref LL_RCC_GetAHBPrescaler
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_HCLK_FREQ(LL_RCC_GetAHBPrescaler())
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __SYSCLKFREQ__ SYSCLK frequency (based on HSE/HSI/PLLCLK)
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __AHBPRESCALER__ This parameter can be one of the following values:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 114


 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval HCLK clock frequency (in Hz)
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define __LL_RCC_CALC_HCLK_FREQ(__SYSCLKFREQ__, __AHBPRESCALER__) ((__SYSCLKFREQ__) >> AHBPrescTabl
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PCLK1 frequency (ABP1)
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note: __APB1PRESCALER__ be retrieved by @ref LL_RCC_GetAPB1Prescaler
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_PCLK1_FREQ(LL_RCC_GetAPB1Prescaler())
 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __HCLKFREQ__ HCLK frequency
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __APB1PRESCALER__ This parameter can be one of the following values:
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval PCLK1 clock frequency (in Hz)
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define __LL_RCC_CALC_PCLK1_FREQ(__HCLKFREQ__, __APB1PRESCALER__) ((__HCLKFREQ__) >> APBPrescTable[
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Exported functions --------------------------------------------------------*/
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Functions RCC Exported Functions
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSE HSE
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable the Clock Security System.
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           CSSON         LL_RCC_HSE_EnableCSS
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_EnableCSS(void)
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_CSSON);
 672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable the Clock Security System.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 115


 676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note Cannot be disabled in HSE is ready (only by hardware)
 677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           CSSON         LL_RCC_HSE_DisableCSS
 678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_DisableCSS(void)
 681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_CSSON);
 683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable HSE external oscillator (HSE Bypass)
 687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           HSEBYP        LL_RCC_HSE_EnableBypass
 688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_EnableBypass(void)
 691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSEBYP);
 693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable HSE external oscillator (HSE Bypass)
 697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           HSEBYP        LL_RCC_HSE_DisableBypass
 698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_DisableBypass(void)
 701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable HSE crystal oscillator (HSE ON)
 707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           HSEON         LL_RCC_HSE_Enable
 708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_Enable(void)
 711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSEON);
 713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable HSE crystal oscillator (HSE ON)
 717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           HSEON         LL_RCC_HSE_Disable
 718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_Disable(void)
 721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON);
 723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Check if HSE oscillator Ready
 727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           HSERDY        LL_RCC_HSE_IsReady
 728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSE_IsReady(void)
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_HSERDY) == (RCC_CR_HSERDY));
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 116


 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSI HSI
 740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable HSI oscillator
 745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           HSION         LL_RCC_HSI_Enable
 746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_Enable(void)
 163              		.loc 4 748 22 view .LVU37
 164              	.LBB57:
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSION);
 165              		.loc 4 750 3 view .LVU38
 166 0016 2E4A     		ldr	r2, .L14+4
 167 0018 1368     		ldr	r3, [r2]
 168 001a 0121     		movs	r1, #1
 169 001c 0B43     		orrs	r3, r1
 170 001e 1360     		str	r3, [r2]
 171              	.L10:
 172              	.LBE57:
 173              	.LBE56:
 143:Src/main.c    **** 
 144:Src/main.c    ****    /* Wait till HSI is ready */
 145:Src/main.c    ****   while(LL_RCC_HSI_IsReady() != 1)
 146:Src/main.c    ****   {
 147:Src/main.c    **** 
 148:Src/main.c    ****   }
 174              		.loc 1 148 3 discriminator 1 view .LVU39
 145:Src/main.c    ****   {
 175              		.loc 1 145 8 discriminator 1 view .LVU40
 176              	.LBB58:
 177              	.LBI58:
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable HSI oscillator
 755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           HSION         LL_RCC_HSI_Disable
 756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_Disable(void)
 759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Check if HSI clock is ready
 765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           HSIRDY        LL_RCC_HSI_IsReady
 766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 117


 768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_IsReady(void)
 178              		.loc 4 768 26 discriminator 1 view .LVU41
 179              	.LBB59:
 769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == (RCC_CR_HSIRDY));
 180              		.loc 4 770 3 discriminator 1 view .LVU42
 181              		.loc 4 770 11 is_stmt 0 discriminator 1 view .LVU43
 182 0020 2B4B     		ldr	r3, .L14+4
 183 0022 1B68     		ldr	r3, [r3]
 184              	.LBE59:
 185              	.LBE58:
 145:Src/main.c    ****   {
 186              		.loc 1 145 8 discriminator 1 view .LVU44
 187 0024 9B07     		lsls	r3, r3, #30
 188 0026 FBD5     		bpl	.L10
 149:Src/main.c    ****   LL_RCC_HSI_SetCalibTrimming(16);
 189              		.loc 1 149 3 is_stmt 1 view .LVU45
 190              	.LVL10:
 191              	.LBB60:
 192              	.LBI60:
 771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get HSI Calibration value
 775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note When HSITRIM is written, HSICAL is updated with the sum of
 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *       HSITRIM and the factory trim value
 777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR        HSICAL        LL_RCC_HSI_GetCalibration
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0xFF
 779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_GetCalibration(void)
 781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CR, RCC_CR_HSICAL) >> RCC_CR_HSICAL_Pos);
 783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Set HSI Calibration trimming
 787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note user-programmable trimming value that is added to the HSICAL
 788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note Default value is 16, which, when added to the HSICAL value,
 789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *       should trim the HSI to 16 MHz +/- 1 %
 790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR        HSITRIM       LL_RCC_HSI_SetCalibTrimming
 791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  Value between Min_Data = 0x00 and Max_Data = 0x1F
 792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_SetCalibTrimming(uint32_t Value)
 193              		.loc 4 794 22 view .LVU46
 194              	.LBB61:
 795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, Value << RCC_CR_HSITRIM_Pos);
 195              		.loc 4 796 3 view .LVU47
 196 0028 294A     		ldr	r2, .L14+4
 197 002a 1368     		ldr	r3, [r2]
 198 002c F821     		movs	r1, #248
 199 002e 8B43     		bics	r3, r1
 200 0030 7839     		subs	r1, r1, #120
 201 0032 0B43     		orrs	r3, r1
 202 0034 1360     		str	r3, [r2]
 203              	.LVL11:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 118


 204              		.loc 4 796 3 is_stmt 0 view .LVU48
 205              	.LBE61:
 206              	.LBE60:
 150:Src/main.c    ****   LL_RCC_HSI14_Enable();
 207              		.loc 1 150 3 is_stmt 1 view .LVU49
 208              	.LBB62:
 209              	.LBI62:
 797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get HSI Calibration trimming
 801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR        HSITRIM       LL_RCC_HSI_GetCalibTrimming
 802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0x1F
 803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_GetCalibTrimming(void)
 805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CR, RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_Pos);
 807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSI48 HSI48
 815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable HSI48
 820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI48ON       LL_RCC_HSI48_Enable
 821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI48_Enable(void)
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->CR2, RCC_CR2_HSI48ON);
 826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable HSI48
 830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI48ON       LL_RCC_HSI48_Disable
 831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI48_Disable(void)
 834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR2, RCC_CR2_HSI48ON);
 836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Check if HSI48 oscillator Ready
 840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI48RDY      LL_RCC_HSI48_IsReady
 841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI48_IsReady(void)
 844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (READ_BIT(RCC->CR2, RCC_CR2_HSI48RDY) == (RCC_CR2_HSI48RDY));
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 119


 847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get HSI48 Calibration value
 850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI48CAL      LL_RCC_HSI48_GetCalibration
 851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0xFF
 852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI48_GetCalibration(void)
 854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CR2, RCC_CR2_HSI48CAL) >> RCC_POSITION_HSI48CAL);
 856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSI14 HSI14
 865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable HSI14
 870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI14ON       LL_RCC_HSI14_Enable
 871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI14_Enable(void)
 210              		.loc 4 873 22 view .LVU50
 211              	.LBB63:
 874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->CR2, RCC_CR2_HSI14ON);
 212              		.loc 4 875 3 view .LVU51
 213 0036 536B     		ldr	r3, [r2, #52]
 214 0038 7F39     		subs	r1, r1, #127
 215 003a 0B43     		orrs	r3, r1
 216 003c 5363     		str	r3, [r2, #52]
 217              	.L11:
 218              	.LBE63:
 219              	.LBE62:
 151:Src/main.c    **** 
 152:Src/main.c    ****    /* Wait till HSI14 is ready */
 153:Src/main.c    ****   while(LL_RCC_HSI14_IsReady() != 1)
 154:Src/main.c    ****   {
 155:Src/main.c    **** 
 156:Src/main.c    ****   }
 220              		.loc 1 156 3 discriminator 1 view .LVU52
 153:Src/main.c    ****   {
 221              		.loc 1 153 8 discriminator 1 view .LVU53
 222              	.LBB64:
 223              	.LBI64:
 876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable HSI14
 880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI14ON       LL_RCC_HSI14_Disable
 881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 120


 883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI14_Disable(void)
 884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR2, RCC_CR2_HSI14ON);
 886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Check if HSI14 oscillator Ready
 890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI14RDY      LL_RCC_HSI14_IsReady
 891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI14_IsReady(void)
 224              		.loc 4 893 26 discriminator 1 view .LVU54
 225              	.LBB65:
 894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (READ_BIT(RCC->CR2, RCC_CR2_HSI14RDY) == (RCC_CR2_HSI14RDY));
 226              		.loc 4 895 3 discriminator 1 view .LVU55
 227              		.loc 4 895 11 is_stmt 0 discriminator 1 view .LVU56
 228 003e 244B     		ldr	r3, .L14+4
 229 0040 5B6B     		ldr	r3, [r3, #52]
 230              	.LBE65:
 231              	.LBE64:
 153:Src/main.c    ****   {
 232              		.loc 1 153 8 discriminator 1 view .LVU57
 233 0042 9B07     		lsls	r3, r3, #30
 234 0044 FBD5     		bpl	.L11
 157:Src/main.c    ****   LL_RCC_HSI14_SetCalibTrimming(16);
 235              		.loc 1 157 3 is_stmt 1 view .LVU58
 236              	.LVL12:
 237              	.LBB66:
 238              	.LBI66:
 896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  ADC interface can turn on the HSI14 oscillator
 900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI14DIS      LL_RCC_HSI14_EnableADCControl
 901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI14_EnableADCControl(void)
 904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR2, RCC_CR2_HSI14DIS);
 906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  ADC interface can not turn on the HSI14 oscillator
 910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI14DIS      LL_RCC_HSI14_DisableADCControl
 911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI14_DisableADCControl(void)
 914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->CR2, RCC_CR2_HSI14DIS);
 916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Set HSI14 Calibration trimming
 920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note user-programmable trimming value that is added to the HSI14CAL
 921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note Default value is 16, which, when added to the HSI14CAL value,
 922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *       should trim the HSI14 to 14 MHz +/- 1 %
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 121


 923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI14TRIM     LL_RCC_HSI14_SetCalibTrimming
 924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  Value between Min_Data = 0x00 and Max_Data = 0xFF
 925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI14_SetCalibTrimming(uint32_t Value)
 239              		.loc 4 927 22 view .LVU59
 240              	.LBB67:
 928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CR2, RCC_CR2_HSI14TRIM, Value << RCC_POSITION_HSI14TRIM);
 241              		.loc 4 929 3 view .LVU60
 242 0046 224B     		ldr	r3, .L14+4
 243 0048 5A6B     		ldr	r2, [r3, #52]
 244 004a F821     		movs	r1, #248
 245 004c 8A43     		bics	r2, r1
 246 004e 7839     		subs	r1, r1, #120
 247 0050 0A43     		orrs	r2, r1
 248 0052 5A63     		str	r2, [r3, #52]
 249              	.LVL13:
 250              		.loc 4 929 3 is_stmt 0 view .LVU61
 251              	.LBE67:
 252              	.LBE66:
 158:Src/main.c    ****   LL_RCC_PLL_ConfigDomain_SYS(LL_RCC_PLLSOURCE_HSI, LL_RCC_PLL_MUL_12, LL_RCC_PREDIV_DIV_2);
 253              		.loc 1 158 3 is_stmt 1 view .LVU62
 254              	.LBB68:
 255              	.LBI68:
 930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get HSI14 Calibration value
 934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note When HSI14TRIM is written, HSI14CAL is updated with the sum of
 935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *       HSI14TRIM and the factory trim value
 936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI14TRIM     LL_RCC_HSI14_GetCalibTrimming
 937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0x1F
 938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI14_GetCalibTrimming(void)
 940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CR2, RCC_CR2_HSI14TRIM) >> RCC_POSITION_HSI14TRIM);
 942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get HSI14 Calibration trimming
 946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI14CAL      LL_RCC_HSI14_GetCalibration
 947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0x1F
 948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI14_GetCalibration(void)
 950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CR2, RCC_CR2_HSI14CAL) >> RCC_POSITION_HSI14CAL);
 952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSE LSE
 959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 122


 962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable  Low Speed External (LSE) crystal.
 964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         LSEON         LL_RCC_LSE_Enable
 965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_Enable(void)
 968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable  Low Speed External (LSE) crystal.
 974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         LSEON         LL_RCC_LSE_Disable
 975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_Disable(void)
 978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable external clock source (LSE bypass).
 984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         LSEBYP        LL_RCC_LSE_EnableBypass
 985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_EnableBypass(void)
 988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable external clock source (LSE bypass).
 994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         LSEBYP        LL_RCC_LSE_DisableBypass
 995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_DisableBypass(void)
 998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
1000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Set LSE oscillator drive capability
1004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note The oscillator is in Xtal mode when it is not in bypass mode.
1005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         LSEDRV        LL_RCC_LSE_SetDriveCapability
1006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  LSEDrive This parameter can be one of the following values:
1007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_LOW
1008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMLOW
1009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMHIGH
1010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_HIGH
1011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_SetDriveCapability(uint32_t LSEDrive)
1014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->BDCR, RCC_BDCR_LSEDRV, LSEDrive);
1016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 123


1019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get LSE oscillator drive capability
1020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         LSEDRV        LL_RCC_LSE_GetDriveCapability
1021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_LOW
1023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMLOW
1024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMHIGH
1025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_HIGH
1026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_GetDriveCapability(void)
1028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->BDCR, RCC_BDCR_LSEDRV));
1030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Check if LSE oscillator Ready
1034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         LSERDY        LL_RCC_LSE_IsReady
1035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_IsReady(void)
1038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == (RCC_BDCR_LSERDY));
1040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1041:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1042:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1043:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
1044:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1045:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1046:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSI LSI
1047:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
1048:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1049:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1050:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1051:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable LSI Oscillator
1052:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CSR          LSION         LL_RCC_LSI_Enable
1053:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1054:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1055:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSI_Enable(void)
1056:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1057:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->CSR, RCC_CSR_LSION);
1058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1059:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1060:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1061:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable LSI Oscillator
1062:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CSR          LSION         LL_RCC_LSI_Disable
1063:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1064:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1065:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSI_Disable(void)
1066:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1067:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CSR, RCC_CSR_LSION);
1068:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1071:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Check if LSI is Ready
1072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CSR          LSIRDY        LL_RCC_LSI_IsReady
1073:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1074:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1075:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSI_IsReady(void)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 124


1076:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1077:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == (RCC_CSR_LSIRDY));
1078:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1079:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1080:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1081:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
1082:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1083:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1084:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_System System
1085:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
1086:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1087:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1088:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1089:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Configure the system clock source
1090:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR         SW            LL_RCC_SetSysClkSource
1091:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSI
1093:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSE
1094:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_PLL
1095:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSI48 (*)
1096:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
1097:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         (*) value not defined in all devices
1098:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1099:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetSysClkSource(uint32_t Source)
1101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, Source);
1103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get the system clock source
1107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR         SWS           LL_RCC_GetSysClkSource
1108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSI
1110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSE
1111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_PLL
1112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSI48 (*)
1113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
1114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         (*) value not defined in all devices
1115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetSysClkSource(void)
1117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_SWS));
1119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Set AHB prescaler
1123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR         HPRE          LL_RCC_SetAHBPrescaler
1124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
1126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
1127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
1128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
1129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
1130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
1131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
1132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 125


1133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
1134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAHBPrescaler(uint32_t Prescaler)
1137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, Prescaler);
1139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Set APB1 prescaler
1143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE         LL_RCC_SetAPB1Prescaler
1144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
1146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
1147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
1148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
1149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
1150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAPB1Prescaler(uint32_t Prescaler)
1153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, Prescaler);
1155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get AHB prescaler
1159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR         HPRE          LL_RCC_GetAHBPrescaler
1160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
1162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
1163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
1164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
1165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
1166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
1167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
1168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
1169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
1170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAHBPrescaler(void)
1172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_HPRE));
1174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get APB1 prescaler
1178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE         LL_RCC_GetAPB1Prescaler
1179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
1181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
1182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
1183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
1184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
1185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAPB1Prescaler(void)
1187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE));
1189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 126


1190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
1193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_MCO MCO
1196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
1197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Configure MCOx
1201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR         MCO           LL_RCC_ConfigMCO\n
1202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         CFGR         MCOPRE        LL_RCC_ConfigMCO\n
1203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         CFGR         PLLNODIV      LL_RCC_ConfigMCO
1204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  MCOxSource This parameter can be one of the following values:
1205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_NOCLOCK
1206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSI14
1207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_SYSCLK
1208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSI
1209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSE
1210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_LSI
1211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_LSE
1212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSI48 (*)
1213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_PLLCLK (*)
1214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_PLLCLK_DIV_2
1215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
1216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         (*) value not defined in all devices
1217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  MCOxPrescaler This parameter can be one of the following values:
1218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_1
1219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_2 (*)
1220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_4 (*)
1221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_8 (*)
1222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_16 (*)
1223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_32 (*)
1224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_64 (*)
1225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_128 (*)
1226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
1227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         (*) value not defined in all devices
1228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ConfigMCO(uint32_t MCOxSource, uint32_t MCOxPrescaler)
1231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR_MCOPRE)
1233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR_PLLNODIV)
1234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_MCOSEL | RCC_CFGR_MCOPRE | RCC_CFGR_PLLNODIV, MCOxSource | MCOxPre
1235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #else
1236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_MCOSEL | RCC_CFGR_MCOPRE, MCOxSource | MCOxPrescaler);
1237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR_PLLNODIV */
1238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #else
1239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_MCOSEL, MCOxSource);
1240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR_MCOPRE */
1241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
1245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 127


1247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_Peripheral_Clock_Source Peripheral Clock Source
1248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
1249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Configure USARTx clock source
1253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR3        USART1SW      LL_RCC_SetUSARTClockSource\n
1254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         CFGR3        USART2SW      LL_RCC_SetUSARTClockSource\n
1255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         CFGR3        USART3SW      LL_RCC_SetUSARTClockSource
1256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  USARTxSource This parameter can be one of the following values:
1257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_PCLK1
1258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_SYSCLK
1259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_LSE
1260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_HSI
1261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_PCLK1 (*)
1262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_SYSCLK (*)
1263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_LSE (*)
1264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_HSI (*)
1265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_PCLK1 (*)
1266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_SYSCLK (*)
1267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_LSE (*)
1268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_HSI (*)
1269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
1270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetUSARTClockSource(uint32_t USARTxSource)
1274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR3, (RCC_CFGR3_USART1SW << ((USARTxSource  & 0xFF000000U) >> 24U)), (USARTxSou
1276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Configure I2Cx clock source
1280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR3        I2C1SW        LL_RCC_SetI2CClockSource
1281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  I2CxSource This parameter can be one of the following values:
1282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_HSI
1283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_SYSCLK
1284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetI2CClockSource(uint32_t I2CxSource)
1287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR3, RCC_CFGR3_I2C1SW, I2CxSource);
1289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(CEC)
1292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Configure CEC clock source
1294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR3        CECSW         LL_RCC_SetCECClockSource
1295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  CECxSource This parameter can be one of the following values:
1296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_CEC_CLKSOURCE_HSI_DIV244
1297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_CEC_CLKSOURCE_LSE
1298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetCECClockSource(uint32_t CECxSource)
1301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR3, RCC_CFGR3_CECSW, CECxSource);
1303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 128


1304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* CEC */
1305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(USB)
1307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Configure USB clock source
1309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR3        USBSW         LL_RCC_SetUSBClockSource
1310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  USBxSource This parameter can be one of the following values:
1311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_HSI48 (*)
1312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_NONE (*)
1313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL
1314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
1315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetUSBClockSource(uint32_t USBxSource)
1319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR3, RCC_CFGR3_USBSW, USBxSource);
1321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* USB */
1323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get USARTx clock source
1326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR3        USART1SW      LL_RCC_GetUSARTClockSource\n
1327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         CFGR3        USART2SW      LL_RCC_GetUSARTClockSource\n
1328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         CFGR3        USART3SW      LL_RCC_GetUSARTClockSource
1329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  USARTx This parameter can be one of the following values:
1330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE
1331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE (*)
1332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE (*)
1333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
1334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_PCLK1
1337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_SYSCLK
1338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_LSE
1339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_HSI
1340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_PCLK1 (*)
1341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_SYSCLK (*)
1342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_LSE (*)
1343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_HSI (*)
1344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_PCLK1 (*)
1345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_SYSCLK (*)
1346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_LSE (*)
1347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_HSI (*)
1348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
1349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetUSARTClockSource(uint32_t USARTx)
1352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR3, (RCC_CFGR3_USART1SW << USARTx)) | (USARTx << 24U));
1354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get I2Cx clock source
1358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR3        I2C1SW        LL_RCC_GetI2CClockSource
1359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  I2Cx This parameter can be one of the following values:
1360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 129


1361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_HSI
1363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_SYSCLK
1364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetI2CClockSource(uint32_t I2Cx)
1366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR3, I2Cx));
1368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(CEC)
1371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get CEC clock source
1373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR3        CECSW         LL_RCC_GetCECClockSource
1374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  CECx This parameter can be one of the following values:
1375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_CEC_CLKSOURCE
1376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_CEC_CLKSOURCE_HSI_DIV244
1378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_CEC_CLKSOURCE_LSE
1379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetCECClockSource(uint32_t CECx)
1381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR3, CECx));
1383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* CEC */
1385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(USB)
1387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get USBx clock source
1389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR3        USBSW         LL_RCC_GetUSBClockSource
1390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  USBx This parameter can be one of the following values:
1391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE
1392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_HSI48 (*)
1394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_NONE (*)
1395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL
1396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
1397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetUSBClockSource(uint32_t USBx)
1400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR3, USBx));
1402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* USB */
1404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
1407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_RTC RTC
1410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
1411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Set RTC Clock Source
1415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note Once the RTC clock source has been selected, it cannot be changed any more unless
1416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *       the Backup domain is reset. The BDRST bit can be used to reset them.
1417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         RTCSEL        LL_RCC_SetRTCClockSource
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 130


1418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_NONE
1420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSE
1421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSI
1422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_HSE_DIV32
1423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetRTCClockSource(uint32_t Source)
1426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->BDCR, RCC_BDCR_RTCSEL, Source);
1428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get RTC Clock Source
1432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         RTCSEL        LL_RCC_GetRTCClockSource
1433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_NONE
1435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSE
1436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSI
1437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_HSE_DIV32
1438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetRTCClockSource(void)
1440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL));
1442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable RTC
1446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         RTCEN         LL_RCC_EnableRTC
1447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_EnableRTC(void)
1450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_RTCEN);
1452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable RTC
1456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         RTCEN         LL_RCC_DisableRTC
1457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_DisableRTC(void)
1460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_RTCEN);
1462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Check if RTC has been enabled or not
1466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         RTCEN         LL_RCC_IsEnabledRTC
1467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_IsEnabledRTC(void)
1470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (READ_BIT(RCC->BDCR, RCC_BDCR_RTCEN) == (RCC_BDCR_RTCEN));
1472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 131


1475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Force the Backup domain reset
1476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         BDRST         LL_RCC_ForceBackupDomainReset
1477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ForceBackupDomainReset(void)
1480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_BDRST);
1482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Release the Backup domain reset
1486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         BDRST         LL_RCC_ReleaseBackupDomainReset
1487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ReleaseBackupDomainReset(void)
1490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_BDRST);
1492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
1496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_PLL PLL
1499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
1500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable PLL
1504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           PLLON         LL_RCC_PLL_Enable
1505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_Enable(void)
1508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_PLLON);
1510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable PLL
1514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note Cannot be disabled if the PLL clock is used as the system clock
1515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           PLLON         LL_RCC_PLL_Disable
1516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_Disable(void)
1519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON);
1521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Check if PLL Ready
1525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           PLLRDY        LL_RCC_PLL_IsReady
1526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_IsReady(void)
1529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == (RCC_CR_PLLRDY));
1531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 132


1532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_PLLSRC_PREDIV1_SUPPORT)
1534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Configure PLL used for SYSCLK Domain
1536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR         PLLSRC        LL_RCC_PLL_ConfigDomain_SYS\n
1537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         CFGR         PLLMUL        LL_RCC_PLL_ConfigDomain_SYS\n
1538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         CFGR2        PREDIV        LL_RCC_PLL_ConfigDomain_SYS
1539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSI
1541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE
1542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSI48 (*)
1543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
1544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         (*) value not defined in all devices
1545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  PLLMul This parameter can be one of the following values:
1546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_2
1547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_3
1548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_4
1549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_5
1550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6
1551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_7
1552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_8
1553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_9
1554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_10
1555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_11
1556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_12
1557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_13
1558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_14
1559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_15
1560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_16
1561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  PLLDiv This parameter can be one of the following values:
1562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_1
1563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_2
1564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_3
1565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_4
1566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_5
1567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_6
1568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_7
1569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_8
1570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_9
1571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_10
1572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_11
1573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_12
1574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_13
1575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_14
1576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_15
1577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_16
1578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_ConfigDomain_SYS(uint32_t Source, uint32_t PLLMul, uint32_t PLLDiv)
 256              		.loc 4 1580 22 view .LVU63
 257              	.LBB69:
1581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PLLSRC | RCC_CFGR_PLLMUL, Source | PLLMul);
 258              		.loc 4 1582 3 view .LVU64
 259 0054 5A68     		ldr	r2, [r3, #4]
 260 0056 1F49     		ldr	r1, .L14+8
 261 0058 1140     		ands	r1, r2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 133


 262 005a A222     		movs	r2, #162
 263 005c 9203     		lsls	r2, r2, #14
 264 005e 0A43     		orrs	r2, r1
 265 0060 5A60     		str	r2, [r3, #4]
1583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PREDIV, PLLDiv);
 266              		.loc 4 1583 3 view .LVU65
 267 0062 DA6A     		ldr	r2, [r3, #44]
 268 0064 0F21     		movs	r1, #15
 269 0066 8A43     		bics	r2, r1
 270 0068 0E39     		subs	r1, r1, #14
 271 006a 0A43     		orrs	r2, r1
 272 006c DA62     		str	r2, [r3, #44]
 273              	.LVL14:
 274              		.loc 4 1583 3 is_stmt 0 view .LVU66
 275              	.LBE69:
 276              	.LBE68:
 159:Src/main.c    ****   LL_RCC_PLL_Enable();
 277              		.loc 1 159 3 is_stmt 1 view .LVU67
 278              	.LBB70:
 279              	.LBI70:
1507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 280              		.loc 4 1507 22 view .LVU68
 281              	.LBB71:
1509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 282              		.loc 4 1509 3 view .LVU69
 283 006e 1968     		ldr	r1, [r3]
 284 0070 8022     		movs	r2, #128
 285 0072 5204     		lsls	r2, r2, #17
 286 0074 0A43     		orrs	r2, r1
 287 0076 1A60     		str	r2, [r3]
 288              	.L12:
 289              	.LBE71:
 290              	.LBE70:
 160:Src/main.c    **** 
 161:Src/main.c    ****    /* Wait till PLL is ready */
 162:Src/main.c    ****   while(LL_RCC_PLL_IsReady() != 1)
 163:Src/main.c    ****   {
 164:Src/main.c    **** 
 165:Src/main.c    ****   }
 291              		.loc 1 165 3 discriminator 1 view .LVU70
 162:Src/main.c    ****   {
 292              		.loc 1 162 8 discriminator 1 view .LVU71
 293              	.LBB72:
 294              	.LBI72:
1528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 295              		.loc 4 1528 26 discriminator 1 view .LVU72
 296              	.LBB73:
1530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 297              		.loc 4 1530 3 discriminator 1 view .LVU73
1530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 298              		.loc 4 1530 11 is_stmt 0 discriminator 1 view .LVU74
 299 0078 154B     		ldr	r3, .L14+4
 300 007a 1B68     		ldr	r3, [r3]
 301              	.LBE73:
 302              	.LBE72:
 162:Src/main.c    ****   {
 303              		.loc 1 162 8 discriminator 1 view .LVU75
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 134


 304 007c 9B01     		lsls	r3, r3, #6
 305 007e FBD5     		bpl	.L12
 166:Src/main.c    ****   LL_RCC_SetAHBPrescaler(LL_RCC_SYSCLK_DIV_1);
 306              		.loc 1 166 3 is_stmt 1 view .LVU76
 307              	.LVL15:
 308              	.LBB74:
 309              	.LBI74:
1136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 310              		.loc 4 1136 22 view .LVU77
 311              	.LBB75:
1138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 312              		.loc 4 1138 3 view .LVU78
 313 0080 134B     		ldr	r3, .L14+4
 314 0082 5A68     		ldr	r2, [r3, #4]
 315 0084 F021     		movs	r1, #240
 316 0086 8A43     		bics	r2, r1
 317 0088 5A60     		str	r2, [r3, #4]
 318              	.LVL16:
1138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 319              		.loc 4 1138 3 is_stmt 0 view .LVU79
 320              	.LBE75:
 321              	.LBE74:
 167:Src/main.c    ****   LL_RCC_SetAPB1Prescaler(LL_RCC_APB1_DIV_1);
 322              		.loc 1 167 3 is_stmt 1 view .LVU80
 323              	.LBB76:
 324              	.LBI76:
1152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 325              		.loc 4 1152 22 view .LVU81
 326              	.LBB77:
1154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 327              		.loc 4 1154 3 view .LVU82
 328 008a 5A68     		ldr	r2, [r3, #4]
 329 008c 1249     		ldr	r1, .L14+12
 330 008e 0A40     		ands	r2, r1
 331 0090 5A60     		str	r2, [r3, #4]
 332              	.LVL17:
1154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 333              		.loc 4 1154 3 is_stmt 0 view .LVU83
 334              	.LBE77:
 335              	.LBE76:
 168:Src/main.c    ****   LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_PLL);
 336              		.loc 1 168 3 is_stmt 1 view .LVU84
 337              	.LBB78:
 338              	.LBI78:
1100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 339              		.loc 4 1100 22 view .LVU85
 340              	.LBB79:
1102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 341              		.loc 4 1102 3 view .LVU86
 342 0092 5A68     		ldr	r2, [r3, #4]
 343 0094 0321     		movs	r1, #3
 344 0096 8A43     		bics	r2, r1
 345 0098 0139     		subs	r1, r1, #1
 346 009a 0A43     		orrs	r2, r1
 347 009c 5A60     		str	r2, [r3, #4]
 348              	.LVL18:
 349              	.L13:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 135


1102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 350              		.loc 4 1102 3 is_stmt 0 view .LVU87
 351              	.LBE79:
 352              	.LBE78:
 169:Src/main.c    **** 
 170:Src/main.c    ****    /* Wait till System clock is ready */
 171:Src/main.c    ****   while(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_PLL)
 172:Src/main.c    ****   {
 173:Src/main.c    **** 
 174:Src/main.c    ****   }
 353              		.loc 1 174 3 is_stmt 1 discriminator 1 view .LVU88
 171:Src/main.c    ****   {
 354              		.loc 1 171 8 discriminator 1 view .LVU89
 355              	.LBB80:
 356              	.LBI80:
1116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 357              		.loc 4 1116 26 discriminator 1 view .LVU90
 358              	.LBB81:
1118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 359              		.loc 4 1118 3 discriminator 1 view .LVU91
1118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 360              		.loc 4 1118 21 is_stmt 0 discriminator 1 view .LVU92
 361 009e 0C4B     		ldr	r3, .L14+4
 362 00a0 5A68     		ldr	r2, [r3, #4]
1118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 363              		.loc 4 1118 10 discriminator 1 view .LVU93
 364 00a2 0C23     		movs	r3, #12
 365 00a4 1340     		ands	r3, r2
 366              	.LBE81:
 367              	.LBE80:
 171:Src/main.c    ****   {
 368              		.loc 1 171 8 discriminator 1 view .LVU94
 369 00a6 082B     		cmp	r3, #8
 370 00a8 F9D1     		bne	.L13
 175:Src/main.c    ****   LL_Init1msTick(48000000);
 371              		.loc 1 175 3 is_stmt 1 view .LVU95
 372 00aa 0C4C     		ldr	r4, .L14+16
 373 00ac 2000     		movs	r0, r4
 374 00ae FFF7FEFF 		bl	LL_Init1msTick
 375              	.LVL19:
 176:Src/main.c    ****   LL_SetSystemCoreClock(48000000);
 376              		.loc 1 176 3 view .LVU96
 377 00b2 2000     		movs	r0, r4
 378 00b4 FFF7FEFF 		bl	LL_SetSystemCoreClock
 379              	.LVL20:
 177:Src/main.c    ****   LL_RCC_HSI14_EnableADCControl();
 380              		.loc 1 177 3 view .LVU97
 381              	.LBB82:
 382              	.LBI82:
 903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 383              		.loc 4 903 22 view .LVU98
 384              	.LBB83:
 905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 385              		.loc 4 905 3 view .LVU99
 386 00b8 054B     		ldr	r3, .L14+4
 387 00ba 5A6B     		ldr	r2, [r3, #52]
 388 00bc 0421     		movs	r1, #4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 136


 389 00be 8A43     		bics	r2, r1
 390 00c0 5A63     		str	r2, [r3, #52]
 391              	.LBE83:
 392              	.LBE82:
 178:Src/main.c    ****   LL_RCC_SetI2CClockSource(LL_RCC_I2C1_CLKSOURCE_HSI);
 393              		.loc 1 178 3 view .LVU100
 394              	.LVL21:
 395              	.LBB84:
 396              	.LBI84:
1286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 397              		.loc 4 1286 22 view .LVU101
 398              	.LBB85:
1288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 399              		.loc 4 1288 3 view .LVU102
 400 00c2 1A6B     		ldr	r2, [r3, #48]
 401 00c4 0C31     		adds	r1, r1, #12
 402 00c6 8A43     		bics	r2, r1
 403 00c8 1A63     		str	r2, [r3, #48]
 404              	.LVL22:
1288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 405              		.loc 4 1288 3 is_stmt 0 view .LVU103
 406              	.LBE85:
 407              	.LBE84:
 179:Src/main.c    **** }
 408              		.loc 1 179 1 view .LVU104
 409              		@ sp needed
 410 00ca 10BD     		pop	{r4, pc}
 411              	.L15:
 412              		.align	2
 413              	.L14:
 414 00cc 00200240 		.word	1073881088
 415 00d0 00100240 		.word	1073876992
 416 00d4 FF7FC2FF 		.word	-4030465
 417 00d8 FFF8FFFF 		.word	-1793
 418 00dc 006CDC02 		.word	48000000
 419              		.cfi_endproc
 420              	.LFE1025:
 422              		.section	.text.main,"ax",%progbits
 423              		.align	1
 424              		.global	main
 425              		.syntax unified
 426              		.code	16
 427              		.thumb_func
 429              	main:
 430              	.LFB1024:
  83:Src/main.c    ****   /* USER CODE BEGIN 1 */
 431              		.loc 1 83 1 is_stmt 1 view -0
 432              		.cfi_startproc
 433              		@ Volatile: function does not return.
 434              		@ args = 0, pretend = 0, frame = 8
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436 0000 00B5     		push	{lr}
 437              	.LCFI2:
 438              		.cfi_def_cfa_offset 4
 439              		.cfi_offset 14, -4
 440 0002 83B0     		sub	sp, sp, #12
 441              	.LCFI3:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 137


 442              		.cfi_def_cfa_offset 16
  91:Src/main.c    ****   LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_PWR);
 443              		.loc 1 91 3 view .LVU106
 444              	.LVL23:
 445              	.LBB86:
 446              	.LBI86:
 447              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @file    stm32f0xx_ll_bus.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   @verbatim                
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****     [..]  
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write 
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****     [..]  
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @attention
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * All rights reserved.</center></h2>
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * the "License"; You may not use this file except in compliance with the
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * License. You may obtain a copy of the License at:
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *                        opensource.org/licenses/BSD-3-Clause
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ******************************************************************************
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #ifndef __STM32F0xx_LL_BUS_H
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define __STM32F0xx_LL_BUS_H
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #ifdef __cplusplus
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** extern "C" {
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #include "stm32f0xx.h"
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @addtogroup STM32F0xx_LL_Driver
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 138


  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(RCC)
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHBENR_DMA1EN
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(DMA2)
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2           RCC_AHBENR_DMA2EN
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*DMA2*/
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM           RCC_AHBENR_SRAMEN
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FLASH          RCC_AHBENR_FLITFEN
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHBENR_CRCEN
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOA          RCC_AHBENR_GPIOAEN
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOB          RCC_AHBENR_GPIOBEN
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOC          RCC_AHBENR_GPIOCEN
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(GPIOD)
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOD          RCC_AHBENR_GPIODEN
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*GPIOD*/
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(GPIOE)
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOE          RCC_AHBENR_GPIOEEN
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*GPIOE*/
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOF          RCC_AHBENR_GPIOFEN
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TSC)
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_TSC            RCC_AHBENR_TSCEN
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TSC*/
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM2)
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR_TIM2EN
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM2*/
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR_TIM3EN
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM6)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 139


 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR_TIM6EN
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM6*/
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM7)
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR_TIM7EN
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM7*/
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM14          RCC_APB1ENR_TIM14EN
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR_WWDGEN
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(SPI2)
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR_SPI2EN
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*SPI2*/
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART2)
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR_USART2EN
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART2 */
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART3)
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART3         RCC_APB1ENR_USART3EN
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART3 */
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART4)
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART4         RCC_APB1ENR_USART4EN
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART4 */
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART5)
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART5         RCC_APB1ENR_USART5EN
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART5 */
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR_I2C1EN
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(I2C2)
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR_I2C2EN
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*I2C2*/
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USB)
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR_USBEN
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USB */
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(CAN)
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN            RCC_APB1ENR_CANEN
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*CAN*/
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(CRS)
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CRS            RCC_APB1ENR_CRSEN
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*CRS*/
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR_PWREN
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(DAC)
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR_DACEN
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*DAC*/
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(CEC)
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CEC            RCC_APB1ENR_CECEN
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*CEC*/
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP2_PERIPH  APB1 GRP2 PERIPH
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_SYSCFG         RCC_APB2ENR_SYSCFGEN
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ADC1           RCC_APB2ENR_ADC1EN
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART8)
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART8         RCC_APB2ENR_USART8EN
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*USART8*/
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART7)
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART7         RCC_APB2ENR_USART7EN
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 140


 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*USART7*/
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART6)
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART6         RCC_APB2ENR_USART6EN
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*USART6*/
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM1           RCC_APB2ENR_TIM1EN
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_SPI1           RCC_APB2ENR_SPI1EN
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART1         RCC_APB2ENR_USART1EN
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM15)
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM15          RCC_APB2ENR_TIM15EN
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM15*/
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM16          RCC_APB2ENR_TIM16EN
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM17          RCC_APB2ENR_TIM17EN
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_DBGMCU         RCC_APB2ENR_DBGMCUEN
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_EnableClock\n
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_EnableClock\n
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_EnableClock\n
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_EnableClock\n
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_EnableClock\n
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOAEN       LL_AHB1_GRP1_EnableClock\n
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_EnableClock\n
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_EnableClock\n
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_EnableClock\n
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_EnableClock\n
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_EnableClock\n
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       TSCEN         LL_AHB1_GRP1_EnableClock
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 141


 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBENR, Periphs);
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_IsEnabledClock\n
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_IsEnabledClock\n
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_IsEnabledClock\n
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOAEN       LL_AHB1_GRP1_IsEnabledClock\n
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_IsEnabledClock\n
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_IsEnabledClock\n
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_IsEnabledClock\n
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_IsEnabledClock\n
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_IsEnabledClock\n
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       TSCEN         LL_AHB1_GRP1_IsEnabledClock
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   return (READ_BIT(RCC->AHBENR, Periphs) == Periphs);
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_DisableClock\n
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_DisableClock\n
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_DisableClock\n
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_DisableClock\n
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_DisableClock\n
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 142


 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOAEN       LL_AHB1_GRP1_DisableClock\n
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_DisableClock\n
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_DisableClock\n
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_DisableClock\n
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_DisableClock\n
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_DisableClock\n
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       TSCEN         LL_AHB1_GRP1_DisableClock
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBENR, Periphs);
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBRSTR      GPIOARST      LL_AHB1_GRP1_ForceReset\n
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOBRST      LL_AHB1_GRP1_ForceReset\n
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOCRST      LL_AHB1_GRP1_ForceReset\n
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIODRST      LL_AHB1_GRP1_ForceReset\n
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOERST      LL_AHB1_GRP1_ForceReset\n
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOFRST      LL_AHB1_GRP1_ForceReset\n
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ForceReset
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->AHBRSTR, Periphs);
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 143


 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBRSTR      GPIOARST      LL_AHB1_GRP1_ReleaseReset\n
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOBRST      LL_AHB1_GRP1_ReleaseReset\n
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOCRST      LL_AHB1_GRP1_ReleaseReset\n
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIODRST      LL_AHB1_GRP1_ReleaseReset\n
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOERST      LL_AHB1_GRP1_ReleaseReset\n
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOFRST      LL_AHB1_GRP1_ReleaseReset\n
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ReleaseReset
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBRSTR, Periphs);
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1_GRP1 APB1 GRP1
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock (available in register 1).
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_EnableClock\n
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_EnableClock\n
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_EnableClock\n
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_EnableClock\n
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_EnableClock\n
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_EnableClock\n
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_EnableClock\n
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_EnableClock\n
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_EnableClock\n
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART4EN      LL_APB1_GRP1_EnableClock\n
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART5EN      LL_APB1_GRP1_EnableClock\n
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_EnableClock\n
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_EnableClock\n
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_EnableClock\n
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CANEN         LL_APB1_GRP1_EnableClock\n
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CRSEN         LL_APB1_GRP1_EnableClock\n
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_EnableClock\n
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_EnableClock\n
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_EnableClock
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 144


 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not (available in register 1).
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_IsEnabledClock\n
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_IsEnabledClock\n
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART4EN      LL_APB1_GRP1_IsEnabledClock\n
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART5EN      LL_APB1_GRP1_IsEnabledClock\n
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_IsEnabledClock\n
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CANEN         LL_APB1_GRP1_IsEnabledClock\n
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CRSEN         LL_APB1_GRP1_IsEnabledClock\n
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_IsEnabledClock\n
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_IsEnabledClock\n
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_IsEnabledClock
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 145


 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   return (READ_BIT(RCC->APB1ENR, Periphs) == Periphs);
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock (available in register 1).
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_DisableClock\n
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_DisableClock\n
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_DisableClock\n
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_DisableClock\n
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_DisableClock\n
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_DisableClock\n
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_DisableClock\n
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_DisableClock\n
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_DisableClock\n
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART4EN      LL_APB1_GRP1_DisableClock\n
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART5EN      LL_APB1_GRP1_DisableClock\n
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_DisableClock\n
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_DisableClock\n
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_DisableClock\n
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CANEN         LL_APB1_GRP1_DisableClock\n
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CRSEN         LL_APB1_GRP1_DisableClock\n
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_DisableClock\n
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_DisableClock\n
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_DisableClock
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 146


 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR, Periphs);
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset (available in register 1).
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST       LL_APB1_GRP1_ForceReset\n
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST       LL_APB1_GRP1_ForceReset\n
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST       LL_APB1_GRP1_ForceReset\n
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST       LL_APB1_GRP1_ForceReset\n
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM14RST      LL_APB1_GRP1_ForceReset\n
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST       LL_APB1_GRP1_ForceReset\n
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST       LL_APB1_GRP1_ForceReset\n
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART2RST     LL_APB1_GRP1_ForceReset\n
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART3RST     LL_APB1_GRP1_ForceReset\n
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART4RST     LL_APB1_GRP1_ForceReset\n
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART5RST     LL_APB1_GRP1_ForceReset\n
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST       LL_APB1_GRP1_ForceReset\n
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST       LL_APB1_GRP1_ForceReset\n
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USBRST        LL_APB1_GRP1_ForceReset\n
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CANRST        LL_APB1_GRP1_ForceReset\n
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CRSRST        LL_APB1_GRP1_ForceReset\n
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     PWRRST        LL_APB1_GRP1_ForceReset\n
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     DACRST        LL_APB1_GRP1_ForceReset\n
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CECRST        LL_APB1_GRP1_ForceReset
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 147


 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR, Periphs);
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset (available in register 1).
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST       LL_APB1_GRP1_ReleaseReset\n
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST       LL_APB1_GRP1_ReleaseReset\n
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST       LL_APB1_GRP1_ReleaseReset\n
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST       LL_APB1_GRP1_ReleaseReset\n
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM14RST      LL_APB1_GRP1_ReleaseReset\n
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST       LL_APB1_GRP1_ReleaseReset\n
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST       LL_APB1_GRP1_ReleaseReset\n
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART2RST     LL_APB1_GRP1_ReleaseReset\n
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART3RST     LL_APB1_GRP1_ReleaseReset\n
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART4RST     LL_APB1_GRP1_ReleaseReset\n
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART5RST     LL_APB1_GRP1_ReleaseReset\n
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST       LL_APB1_GRP1_ReleaseReset\n
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST       LL_APB1_GRP1_ReleaseReset\n
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USBRST        LL_APB1_GRP1_ReleaseReset\n
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CANRST        LL_APB1_GRP1_ReleaseReset\n
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CRSRST        LL_APB1_GRP1_ReleaseReset\n
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     PWRRST        LL_APB1_GRP1_ReleaseReset\n
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     DACRST        LL_APB1_GRP1_ReleaseReset\n
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CECRST        LL_APB1_GRP1_ReleaseReset
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 148


 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR, Periphs);
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1_GRP2 APB1 GRP2
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock (available in register 2).
 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB1_GRP2_EnableClock\n
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      ADC1EN        LL_APB1_GRP2_EnableClock\n
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART8EN      LL_APB1_GRP2_EnableClock\n
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART7EN      LL_APB1_GRP2_EnableClock\n
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART6EN      LL_APB1_GRP2_EnableClock\n
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM1EN        LL_APB1_GRP2_EnableClock\n
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB1_GRP2_EnableClock\n
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB1_GRP2_EnableClock\n
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM15EN       LL_APB1_GRP2_EnableClock\n
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM16EN       LL_APB1_GRP2_EnableClock\n
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM17EN       LL_APB1_GRP2_EnableClock\n
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      DBGMCUEN      LL_APB1_GRP2_EnableClock
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SYSCFG
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ADC1
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART8 (*)
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART7 (*)
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART6 (*)
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM1
 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SPI1
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART1
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM15 (*)
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM16
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM17
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_DBGMCU
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_EnableClock(uint32_t Periphs)
 448              		.loc 5 665 22 view .LVU107
 449              	.LBB87:
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 450              		.loc 5 667 3 view .LVU108
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 451              		.loc 5 668 3 view .LVU109
 452 0004 154B     		ldr	r3, .L18
 453 0006 9969     		ldr	r1, [r3, #24]
 454 0008 0122     		movs	r2, #1
 455 000a 1143     		orrs	r1, r2
 456 000c 9961     		str	r1, [r3, #24]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 149


 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 457              		.loc 5 670 3 view .LVU110
 458              		.loc 5 670 12 is_stmt 0 view .LVU111
 459 000e 9969     		ldr	r1, [r3, #24]
 460 0010 0A40     		ands	r2, r1
 461              		.loc 5 670 10 view .LVU112
 462 0012 0192     		str	r2, [sp, #4]
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 463              		.loc 5 671 3 is_stmt 1 view .LVU113
 464 0014 019A     		ldr	r2, [sp, #4]
 465              	.LVL24:
 466              		.loc 5 671 3 is_stmt 0 view .LVU114
 467              	.LBE87:
 468              	.LBE86:
  92:Src/main.c    **** 
 469              		.loc 1 92 3 is_stmt 1 view .LVU115
 470              	.LBB88:
 471              	.LBI88:
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 472              		.loc 5 415 22 view .LVU116
 473              	.LBB89:
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 474              		.loc 5 417 3 view .LVU117
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 475              		.loc 5 418 3 view .LVU118
 476 0016 DA69     		ldr	r2, [r3, #28]
 477 0018 8021     		movs	r1, #128
 478 001a 4905     		lsls	r1, r1, #21
 479 001c 0A43     		orrs	r2, r1
 480 001e DA61     		str	r2, [r3, #28]
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 481              		.loc 5 420 3 view .LVU119
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 482              		.loc 5 420 12 is_stmt 0 view .LVU120
 483 0020 DB69     		ldr	r3, [r3, #28]
 484 0022 0B40     		ands	r3, r1
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 485              		.loc 5 420 10 view .LVU121
 486 0024 0093     		str	r3, [sp]
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 487              		.loc 5 421 3 is_stmt 1 view .LVU122
 488 0026 009B     		ldr	r3, [sp]
 489              	.LVL25:
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 490              		.loc 5 421 3 is_stmt 0 view .LVU123
 491              	.LBE89:
 492              	.LBE88:
  95:Src/main.c    **** 
 493              		.loc 1 95 3 is_stmt 1 view .LVU124
 494              	.LBB90:
 495              	.LBI90:
 496              		.file 6 "Drivers/CMSIS/Include/core_cm0.h"
   1:Drivers/CMSIS/Include/core_cm0.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm0.h ****  * @file     core_cm0.h
   3:Drivers/CMSIS/Include/core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm0.h ****  * @version  V5.0.5
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 150


   5:Drivers/CMSIS/Include/core_cm0.h ****  * @date     28. May 2018
   6:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm0.h **** /*
   8:Drivers/CMSIS/Include/core_cm0.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm0.h ****  *
  10:Drivers/CMSIS/Include/core_cm0.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm0.h ****  *
  12:Drivers/CMSIS/Include/core_cm0.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm0.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm0.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm0.h ****  *
  16:Drivers/CMSIS/Include/core_cm0.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm0.h ****  *
  18:Drivers/CMSIS/Include/core_cm0.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm0.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm0.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm0.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm0.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm0.h ****  */
  24:Drivers/CMSIS/Include/core_cm0.h **** 
  25:Drivers/CMSIS/Include/core_cm0.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm0.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm0.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm0.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm0.h **** #endif
  30:Drivers/CMSIS/Include/core_cm0.h **** 
  31:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm0.h **** 
  34:Drivers/CMSIS/Include/core_cm0.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm0.h **** 
  36:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm0.h **** #endif
  39:Drivers/CMSIS/Include/core_cm0.h **** 
  40:Drivers/CMSIS/Include/core_cm0.h **** /**
  41:Drivers/CMSIS/Include/core_cm0.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm0.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm0.h **** 
  44:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm0.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm0.h **** 
  47:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm0.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm0.h **** 
  50:Drivers/CMSIS/Include/core_cm0.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm0.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm0.h ****  */
  53:Drivers/CMSIS/Include/core_cm0.h **** 
  54:Drivers/CMSIS/Include/core_cm0.h **** 
  55:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm0.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm0.h **** /**
  59:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup Cortex_M0
  60:Drivers/CMSIS/Include/core_cm0.h ****   @{
  61:Drivers/CMSIS/Include/core_cm0.h ****  */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 151


  62:Drivers/CMSIS/Include/core_cm0.h **** 
  63:Drivers/CMSIS/Include/core_cm0.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm0.h ****  
  65:Drivers/CMSIS/Include/core_cm0.h **** /*  CMSIS CM0 definitions */
  66:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm0.h ****                                     __CM0_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm0.h **** 
  71:Drivers/CMSIS/Include/core_cm0.h **** #define __CORTEX_M                (0U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm0.h **** 
  73:Drivers/CMSIS/Include/core_cm0.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm0.h ****     This core does not support an FPU at all
  75:Drivers/CMSIS/Include/core_cm0.h **** */
  76:Drivers/CMSIS/Include/core_cm0.h **** #define __FPU_USED       0U
  77:Drivers/CMSIS/Include/core_cm0.h **** 
  78:Drivers/CMSIS/Include/core_cm0.h **** #if defined ( __CC_ARM )
  79:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TARGET_FPU_VFP
  80:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  82:Drivers/CMSIS/Include/core_cm0.h **** 
  83:Drivers/CMSIS/Include/core_cm0.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARM_PCS_VFP
  85:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm0.h **** 
  88:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __GNUC__ )
  89:Drivers/CMSIS/Include/core_cm0.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  91:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  92:Drivers/CMSIS/Include/core_cm0.h **** 
  93:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __ICCARM__ )
  94:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARMVFP__
  95:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  97:Drivers/CMSIS/Include/core_cm0.h **** 
  98:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TI_ARM__ )
  99:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TI_VFP_SUPPORT__
 100:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 102:Drivers/CMSIS/Include/core_cm0.h **** 
 103:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TASKING__ )
 104:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __FPU_VFP__
 105:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 107:Drivers/CMSIS/Include/core_cm0.h **** 
 108:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __CSMC__ )
 109:Drivers/CMSIS/Include/core_cm0.h ****   #if ( __CSMC__ & 0x400U)
 110:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 112:Drivers/CMSIS/Include/core_cm0.h **** 
 113:Drivers/CMSIS/Include/core_cm0.h **** #endif
 114:Drivers/CMSIS/Include/core_cm0.h **** 
 115:Drivers/CMSIS/Include/core_cm0.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:Drivers/CMSIS/Include/core_cm0.h **** 
 117:Drivers/CMSIS/Include/core_cm0.h **** 
 118:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 152


 119:Drivers/CMSIS/Include/core_cm0.h **** }
 120:Drivers/CMSIS/Include/core_cm0.h **** #endif
 121:Drivers/CMSIS/Include/core_cm0.h **** 
 122:Drivers/CMSIS/Include/core_cm0.h **** #endif /* __CORE_CM0_H_GENERIC */
 123:Drivers/CMSIS/Include/core_cm0.h **** 
 124:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CMSIS_GENERIC
 125:Drivers/CMSIS/Include/core_cm0.h **** 
 126:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_DEPENDANT
 127:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_DEPENDANT
 128:Drivers/CMSIS/Include/core_cm0.h **** 
 129:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 130:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
 131:Drivers/CMSIS/Include/core_cm0.h **** #endif
 132:Drivers/CMSIS/Include/core_cm0.h **** 
 133:Drivers/CMSIS/Include/core_cm0.h **** /* check device defines and use defaults */
 134:Drivers/CMSIS/Include/core_cm0.h **** #if defined __CHECK_DEVICE_DEFINES
 135:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __CM0_REV
 136:Drivers/CMSIS/Include/core_cm0.h ****     #define __CM0_REV               0x0000U
 137:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__CM0_REV not defined in device header file; using default!"
 138:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 139:Drivers/CMSIS/Include/core_cm0.h **** 
 140:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __NVIC_PRIO_BITS
 141:Drivers/CMSIS/Include/core_cm0.h ****     #define __NVIC_PRIO_BITS          2U
 142:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 143:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 144:Drivers/CMSIS/Include/core_cm0.h **** 
 145:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __Vendor_SysTickConfig
 146:Drivers/CMSIS/Include/core_cm0.h ****     #define __Vendor_SysTickConfig    0U
 147:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 148:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 149:Drivers/CMSIS/Include/core_cm0.h **** #endif
 150:Drivers/CMSIS/Include/core_cm0.h **** 
 151:Drivers/CMSIS/Include/core_cm0.h **** /* IO definitions (access restrictions to peripheral registers) */
 152:Drivers/CMSIS/Include/core_cm0.h **** /**
 153:Drivers/CMSIS/Include/core_cm0.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 154:Drivers/CMSIS/Include/core_cm0.h **** 
 155:Drivers/CMSIS/Include/core_cm0.h ****     <strong>IO Type Qualifiers</strong> are used
 156:Drivers/CMSIS/Include/core_cm0.h ****     \li to specify the access to peripheral variables.
 157:Drivers/CMSIS/Include/core_cm0.h ****     \li for automatic generation of peripheral register debug information.
 158:Drivers/CMSIS/Include/core_cm0.h **** */
 159:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 160:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 161:Drivers/CMSIS/Include/core_cm0.h **** #else
 162:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 163:Drivers/CMSIS/Include/core_cm0.h **** #endif
 164:Drivers/CMSIS/Include/core_cm0.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 165:Drivers/CMSIS/Include/core_cm0.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 166:Drivers/CMSIS/Include/core_cm0.h **** 
 167:Drivers/CMSIS/Include/core_cm0.h **** /* following defines should be used for structure members */
 168:Drivers/CMSIS/Include/core_cm0.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 169:Drivers/CMSIS/Include/core_cm0.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 170:Drivers/CMSIS/Include/core_cm0.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 171:Drivers/CMSIS/Include/core_cm0.h **** 
 172:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group Cortex_M0 */
 173:Drivers/CMSIS/Include/core_cm0.h **** 
 174:Drivers/CMSIS/Include/core_cm0.h **** 
 175:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 153


 176:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 177:Drivers/CMSIS/Include/core_cm0.h ****  *                 Register Abstraction
 178:Drivers/CMSIS/Include/core_cm0.h ****   Core Register contain:
 179:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register
 180:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Register
 181:Drivers/CMSIS/Include/core_cm0.h ****   - Core SCB Register
 182:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Register
 183:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 184:Drivers/CMSIS/Include/core_cm0.h **** /**
 185:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 186:Drivers/CMSIS/Include/core_cm0.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 187:Drivers/CMSIS/Include/core_cm0.h **** */
 188:Drivers/CMSIS/Include/core_cm0.h **** 
 189:Drivers/CMSIS/Include/core_cm0.h **** /**
 190:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 191:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 192:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Core Register type definitions.
 193:Drivers/CMSIS/Include/core_cm0.h ****   @{
 194:Drivers/CMSIS/Include/core_cm0.h ****  */
 195:Drivers/CMSIS/Include/core_cm0.h **** 
 196:Drivers/CMSIS/Include/core_cm0.h **** /**
 197:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 198:Drivers/CMSIS/Include/core_cm0.h ****  */
 199:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 200:Drivers/CMSIS/Include/core_cm0.h **** {
 201:Drivers/CMSIS/Include/core_cm0.h ****   struct
 202:Drivers/CMSIS/Include/core_cm0.h ****   {
 203:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 204:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 205:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 206:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 207:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 208:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 209:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 210:Drivers/CMSIS/Include/core_cm0.h **** } APSR_Type;
 211:Drivers/CMSIS/Include/core_cm0.h **** 
 212:Drivers/CMSIS/Include/core_cm0.h **** /* APSR Register Definitions */
 213:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 214:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 215:Drivers/CMSIS/Include/core_cm0.h **** 
 216:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 217:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 218:Drivers/CMSIS/Include/core_cm0.h **** 
 219:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 220:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 221:Drivers/CMSIS/Include/core_cm0.h **** 
 222:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 223:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 224:Drivers/CMSIS/Include/core_cm0.h **** 
 225:Drivers/CMSIS/Include/core_cm0.h **** 
 226:Drivers/CMSIS/Include/core_cm0.h **** /**
 227:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 228:Drivers/CMSIS/Include/core_cm0.h ****  */
 229:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 230:Drivers/CMSIS/Include/core_cm0.h **** {
 231:Drivers/CMSIS/Include/core_cm0.h ****   struct
 232:Drivers/CMSIS/Include/core_cm0.h ****   {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 154


 233:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 234:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 235:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 236:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 237:Drivers/CMSIS/Include/core_cm0.h **** } IPSR_Type;
 238:Drivers/CMSIS/Include/core_cm0.h **** 
 239:Drivers/CMSIS/Include/core_cm0.h **** /* IPSR Register Definitions */
 240:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 241:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 242:Drivers/CMSIS/Include/core_cm0.h **** 
 243:Drivers/CMSIS/Include/core_cm0.h **** 
 244:Drivers/CMSIS/Include/core_cm0.h **** /**
 245:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 246:Drivers/CMSIS/Include/core_cm0.h ****  */
 247:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 248:Drivers/CMSIS/Include/core_cm0.h **** {
 249:Drivers/CMSIS/Include/core_cm0.h ****   struct
 250:Drivers/CMSIS/Include/core_cm0.h ****   {
 251:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 252:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 253:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 254:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 255:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 256:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 257:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 258:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 259:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 260:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 261:Drivers/CMSIS/Include/core_cm0.h **** } xPSR_Type;
 262:Drivers/CMSIS/Include/core_cm0.h **** 
 263:Drivers/CMSIS/Include/core_cm0.h **** /* xPSR Register Definitions */
 264:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 265:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 266:Drivers/CMSIS/Include/core_cm0.h **** 
 267:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 268:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 269:Drivers/CMSIS/Include/core_cm0.h **** 
 270:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 271:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 272:Drivers/CMSIS/Include/core_cm0.h **** 
 273:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 274:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 275:Drivers/CMSIS/Include/core_cm0.h **** 
 276:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 277:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 278:Drivers/CMSIS/Include/core_cm0.h **** 
 279:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 280:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 281:Drivers/CMSIS/Include/core_cm0.h **** 
 282:Drivers/CMSIS/Include/core_cm0.h **** 
 283:Drivers/CMSIS/Include/core_cm0.h **** /**
 284:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Control Registers (CONTROL).
 285:Drivers/CMSIS/Include/core_cm0.h ****  */
 286:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 287:Drivers/CMSIS/Include/core_cm0.h **** {
 288:Drivers/CMSIS/Include/core_cm0.h ****   struct
 289:Drivers/CMSIS/Include/core_cm0.h ****   {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 155


 290:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:1;               /*!< bit:      0  Reserved */
 291:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 292:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 293:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 294:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 295:Drivers/CMSIS/Include/core_cm0.h **** } CONTROL_Type;
 296:Drivers/CMSIS/Include/core_cm0.h **** 
 297:Drivers/CMSIS/Include/core_cm0.h **** /* CONTROL Register Definitions */
 298:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 299:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 300:Drivers/CMSIS/Include/core_cm0.h **** 
 301:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CORE */
 302:Drivers/CMSIS/Include/core_cm0.h **** 
 303:Drivers/CMSIS/Include/core_cm0.h **** 
 304:Drivers/CMSIS/Include/core_cm0.h **** /**
 305:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 306:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 307:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Type definitions for the NVIC Registers
 308:Drivers/CMSIS/Include/core_cm0.h ****   @{
 309:Drivers/CMSIS/Include/core_cm0.h ****  */
 310:Drivers/CMSIS/Include/core_cm0.h **** 
 311:Drivers/CMSIS/Include/core_cm0.h **** /**
 312:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 313:Drivers/CMSIS/Include/core_cm0.h ****  */
 314:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 315:Drivers/CMSIS/Include/core_cm0.h **** {
 316:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 317:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0[31U];
 318:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 319:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RSERVED1[31U];
 320:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 321:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED2[31U];
 322:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 323:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED3[31U];
 324:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED4[64U];
 325:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 326:Drivers/CMSIS/Include/core_cm0.h **** }  NVIC_Type;
 327:Drivers/CMSIS/Include/core_cm0.h **** 
 328:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_NVIC */
 329:Drivers/CMSIS/Include/core_cm0.h **** 
 330:Drivers/CMSIS/Include/core_cm0.h **** 
 331:Drivers/CMSIS/Include/core_cm0.h **** /**
 332:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 333:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 334:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Control Block Registers
 335:Drivers/CMSIS/Include/core_cm0.h ****   @{
 336:Drivers/CMSIS/Include/core_cm0.h ****  */
 337:Drivers/CMSIS/Include/core_cm0.h **** 
 338:Drivers/CMSIS/Include/core_cm0.h **** /**
 339:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Control Block (SCB).
 340:Drivers/CMSIS/Include/core_cm0.h ****  */
 341:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 342:Drivers/CMSIS/Include/core_cm0.h **** {
 343:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 344:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 345:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0;
 346:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 156


 347:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 348:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 349:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED1;
 350:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 351:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 352:Drivers/CMSIS/Include/core_cm0.h **** } SCB_Type;
 353:Drivers/CMSIS/Include/core_cm0.h **** 
 354:Drivers/CMSIS/Include/core_cm0.h **** /* SCB CPUID Register Definitions */
 355:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 356:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 357:Drivers/CMSIS/Include/core_cm0.h **** 
 358:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 359:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 360:Drivers/CMSIS/Include/core_cm0.h **** 
 361:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 362:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 363:Drivers/CMSIS/Include/core_cm0.h **** 
 364:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 365:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 366:Drivers/CMSIS/Include/core_cm0.h **** 
 367:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 368:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 369:Drivers/CMSIS/Include/core_cm0.h **** 
 370:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 371:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 372:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 373:Drivers/CMSIS/Include/core_cm0.h **** 
 374:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 375:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 376:Drivers/CMSIS/Include/core_cm0.h **** 
 377:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 378:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 379:Drivers/CMSIS/Include/core_cm0.h **** 
 380:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 381:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 382:Drivers/CMSIS/Include/core_cm0.h **** 
 383:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 384:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 385:Drivers/CMSIS/Include/core_cm0.h **** 
 386:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 387:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 388:Drivers/CMSIS/Include/core_cm0.h **** 
 389:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 390:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 391:Drivers/CMSIS/Include/core_cm0.h **** 
 392:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 393:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 394:Drivers/CMSIS/Include/core_cm0.h **** 
 395:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 396:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 397:Drivers/CMSIS/Include/core_cm0.h **** 
 398:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 399:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 400:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 401:Drivers/CMSIS/Include/core_cm0.h **** 
 402:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 403:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 157


 404:Drivers/CMSIS/Include/core_cm0.h **** 
 405:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 406:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 407:Drivers/CMSIS/Include/core_cm0.h **** 
 408:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 409:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 410:Drivers/CMSIS/Include/core_cm0.h **** 
 411:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 412:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 413:Drivers/CMSIS/Include/core_cm0.h **** 
 414:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Control Register Definitions */
 415:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 416:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 417:Drivers/CMSIS/Include/core_cm0.h **** 
 418:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 419:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 420:Drivers/CMSIS/Include/core_cm0.h **** 
 421:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 422:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 423:Drivers/CMSIS/Include/core_cm0.h **** 
 424:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Configuration Control Register Definitions */
 425:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 426:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 427:Drivers/CMSIS/Include/core_cm0.h **** 
 428:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 429:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 430:Drivers/CMSIS/Include/core_cm0.h **** 
 431:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 432:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 433:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 434:Drivers/CMSIS/Include/core_cm0.h **** 
 435:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SCB */
 436:Drivers/CMSIS/Include/core_cm0.h **** 
 437:Drivers/CMSIS/Include/core_cm0.h **** 
 438:Drivers/CMSIS/Include/core_cm0.h **** /**
 439:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 440:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 441:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Timer Registers.
 442:Drivers/CMSIS/Include/core_cm0.h ****   @{
 443:Drivers/CMSIS/Include/core_cm0.h ****  */
 444:Drivers/CMSIS/Include/core_cm0.h **** 
 445:Drivers/CMSIS/Include/core_cm0.h **** /**
 446:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Timer (SysTick).
 447:Drivers/CMSIS/Include/core_cm0.h ****  */
 448:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 449:Drivers/CMSIS/Include/core_cm0.h **** {
 450:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 451:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 452:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 453:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 454:Drivers/CMSIS/Include/core_cm0.h **** } SysTick_Type;
 455:Drivers/CMSIS/Include/core_cm0.h **** 
 456:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Control / Status Register Definitions */
 457:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 458:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 459:Drivers/CMSIS/Include/core_cm0.h **** 
 460:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 158


 461:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 462:Drivers/CMSIS/Include/core_cm0.h **** 
 463:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 464:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 465:Drivers/CMSIS/Include/core_cm0.h **** 
 466:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 467:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 468:Drivers/CMSIS/Include/core_cm0.h **** 
 469:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Reload Register Definitions */
 470:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 471:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 472:Drivers/CMSIS/Include/core_cm0.h **** 
 473:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Current Register Definitions */
 474:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 475:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 476:Drivers/CMSIS/Include/core_cm0.h **** 
 477:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Calibration Register Definitions */
 478:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 479:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 480:Drivers/CMSIS/Include/core_cm0.h **** 
 481:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 482:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 483:Drivers/CMSIS/Include/core_cm0.h **** 
 484:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 485:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 486:Drivers/CMSIS/Include/core_cm0.h **** 
 487:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SysTick */
 488:Drivers/CMSIS/Include/core_cm0.h **** 
 489:Drivers/CMSIS/Include/core_cm0.h **** 
 490:Drivers/CMSIS/Include/core_cm0.h **** /**
 491:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 492:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 493:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Cortex-M0 Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ove
 494:Drivers/CMSIS/Include/core_cm0.h ****             Therefore they are not covered by the Cortex-M0 header file.
 495:Drivers/CMSIS/Include/core_cm0.h ****   @{
 496:Drivers/CMSIS/Include/core_cm0.h ****  */
 497:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CoreDebug */
 498:Drivers/CMSIS/Include/core_cm0.h **** 
 499:Drivers/CMSIS/Include/core_cm0.h **** 
 500:Drivers/CMSIS/Include/core_cm0.h **** /**
 501:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 502:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 503:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 504:Drivers/CMSIS/Include/core_cm0.h ****   @{
 505:Drivers/CMSIS/Include/core_cm0.h ****  */
 506:Drivers/CMSIS/Include/core_cm0.h **** 
 507:Drivers/CMSIS/Include/core_cm0.h **** /**
 508:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 509:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 510:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
 511:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted value.
 512:Drivers/CMSIS/Include/core_cm0.h **** */
 513:Drivers/CMSIS/Include/core_cm0.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
 514:Drivers/CMSIS/Include/core_cm0.h **** 
 515:Drivers/CMSIS/Include/core_cm0.h **** /**
 516:Drivers/CMSIS/Include/core_cm0.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 517:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 159


 518:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
 519:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted bit field value.
 520:Drivers/CMSIS/Include/core_cm0.h **** */
 521:Drivers/CMSIS/Include/core_cm0.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
 522:Drivers/CMSIS/Include/core_cm0.h **** 
 523:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_core_bitfield */
 524:Drivers/CMSIS/Include/core_cm0.h **** 
 525:Drivers/CMSIS/Include/core_cm0.h **** 
 526:Drivers/CMSIS/Include/core_cm0.h **** /**
 527:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 528:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_base     Core Definitions
 529:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Definitions for base addresses, unions, and structures.
 530:Drivers/CMSIS/Include/core_cm0.h ****   @{
 531:Drivers/CMSIS/Include/core_cm0.h ****  */
 532:Drivers/CMSIS/Include/core_cm0.h **** 
 533:Drivers/CMSIS/Include/core_cm0.h **** /* Memory mapping of Core Hardware */
 534:Drivers/CMSIS/Include/core_cm0.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 535:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 536:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 537:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 538:Drivers/CMSIS/Include/core_cm0.h **** 
 539:Drivers/CMSIS/Include/core_cm0.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 540:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 541:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 542:Drivers/CMSIS/Include/core_cm0.h **** 
 543:Drivers/CMSIS/Include/core_cm0.h **** 
 544:Drivers/CMSIS/Include/core_cm0.h **** /*@} */
 545:Drivers/CMSIS/Include/core_cm0.h **** 
 546:Drivers/CMSIS/Include/core_cm0.h **** 
 547:Drivers/CMSIS/Include/core_cm0.h **** 
 548:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 549:Drivers/CMSIS/Include/core_cm0.h ****  *                Hardware Abstraction Layer
 550:Drivers/CMSIS/Include/core_cm0.h ****   Core Function Interface contains:
 551:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Functions
 552:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Functions
 553:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register Access Functions
 554:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 555:Drivers/CMSIS/Include/core_cm0.h **** /**
 556:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 557:Drivers/CMSIS/Include/core_cm0.h **** */
 558:Drivers/CMSIS/Include/core_cm0.h **** 
 559:Drivers/CMSIS/Include/core_cm0.h **** 
 560:Drivers/CMSIS/Include/core_cm0.h **** 
 561:Drivers/CMSIS/Include/core_cm0.h **** /* ##########################   NVIC functions  #################################### */
 562:Drivers/CMSIS/Include/core_cm0.h **** /**
 563:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 564:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 565:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 566:Drivers/CMSIS/Include/core_cm0.h ****   @{
 567:Drivers/CMSIS/Include/core_cm0.h ****  */
 568:Drivers/CMSIS/Include/core_cm0.h **** 
 569:Drivers/CMSIS/Include/core_cm0.h **** #ifdef CMSIS_NVIC_VIRTUAL
 570:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
 571:Drivers/CMSIS/Include/core_cm0.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
 572:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 573:Drivers/CMSIS/Include/core_cm0.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
 574:Drivers/CMSIS/Include/core_cm0.h **** #else
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 160


 575:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
 576:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
 577:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
 578:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
 579:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
 580:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
 581:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
 582:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
 583:Drivers/CMSIS/Include/core_cm0.h **** /*#define NVIC_GetActive              __NVIC_GetActive             not available for Cortex-M0 */
 584:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
 585:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
 586:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
 587:Drivers/CMSIS/Include/core_cm0.h **** #endif /* CMSIS_NVIC_VIRTUAL */
 588:Drivers/CMSIS/Include/core_cm0.h **** 
 589:Drivers/CMSIS/Include/core_cm0.h **** #ifdef CMSIS_VECTAB_VIRTUAL
 590:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 591:Drivers/CMSIS/Include/core_cm0.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
 592:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 593:Drivers/CMSIS/Include/core_cm0.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 594:Drivers/CMSIS/Include/core_cm0.h **** #else
 595:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetVector              __NVIC_SetVector
 596:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetVector              __NVIC_GetVector
 597:Drivers/CMSIS/Include/core_cm0.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
 598:Drivers/CMSIS/Include/core_cm0.h **** 
 599:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC_USER_IRQ_OFFSET          16
 600:Drivers/CMSIS/Include/core_cm0.h **** 
 601:Drivers/CMSIS/Include/core_cm0.h **** 
 602:Drivers/CMSIS/Include/core_cm0.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
 603:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
 604:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
 605:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
 606:Drivers/CMSIS/Include/core_cm0.h **** 
 607:Drivers/CMSIS/Include/core_cm0.h **** 
 608:Drivers/CMSIS/Include/core_cm0.h **** /* Interrupt Priorities are WORD accessible only under Armv6-M                  */
 609:Drivers/CMSIS/Include/core_cm0.h **** /* The following MACROS handle generation of the register offset and byte masks */
 610:Drivers/CMSIS/Include/core_cm0.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 611:Drivers/CMSIS/Include/core_cm0.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 612:Drivers/CMSIS/Include/core_cm0.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 613:Drivers/CMSIS/Include/core_cm0.h **** 
 614:Drivers/CMSIS/Include/core_cm0.h **** #define __NVIC_SetPriorityGrouping(X) (void)(X)
 615:Drivers/CMSIS/Include/core_cm0.h **** #define __NVIC_GetPriorityGrouping()  (0U)
 616:Drivers/CMSIS/Include/core_cm0.h **** 
 617:Drivers/CMSIS/Include/core_cm0.h **** /**
 618:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Enable Interrupt
 619:Drivers/CMSIS/Include/core_cm0.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
 620:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 621:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 622:Drivers/CMSIS/Include/core_cm0.h ****  */
 623:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 624:Drivers/CMSIS/Include/core_cm0.h **** {
 625:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 626:Drivers/CMSIS/Include/core_cm0.h ****   {
 627:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 628:Drivers/CMSIS/Include/core_cm0.h ****   }
 629:Drivers/CMSIS/Include/core_cm0.h **** }
 630:Drivers/CMSIS/Include/core_cm0.h **** 
 631:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 161


 632:Drivers/CMSIS/Include/core_cm0.h **** /**
 633:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Get Interrupt Enable status
 634:Drivers/CMSIS/Include/core_cm0.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
 635:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 636:Drivers/CMSIS/Include/core_cm0.h ****   \return             0  Interrupt is not enabled.
 637:Drivers/CMSIS/Include/core_cm0.h ****   \return             1  Interrupt is enabled.
 638:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 639:Drivers/CMSIS/Include/core_cm0.h ****  */
 640:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
 641:Drivers/CMSIS/Include/core_cm0.h **** {
 642:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 643:Drivers/CMSIS/Include/core_cm0.h ****   {
 644:Drivers/CMSIS/Include/core_cm0.h ****     return((uint32_t)(((NVIC->ISER[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 645:Drivers/CMSIS/Include/core_cm0.h ****   }
 646:Drivers/CMSIS/Include/core_cm0.h ****   else
 647:Drivers/CMSIS/Include/core_cm0.h ****   {
 648:Drivers/CMSIS/Include/core_cm0.h ****     return(0U);
 649:Drivers/CMSIS/Include/core_cm0.h ****   }
 650:Drivers/CMSIS/Include/core_cm0.h **** }
 651:Drivers/CMSIS/Include/core_cm0.h **** 
 652:Drivers/CMSIS/Include/core_cm0.h **** 
 653:Drivers/CMSIS/Include/core_cm0.h **** /**
 654:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Disable Interrupt
 655:Drivers/CMSIS/Include/core_cm0.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
 656:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 657:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 658:Drivers/CMSIS/Include/core_cm0.h ****  */
 659:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
 660:Drivers/CMSIS/Include/core_cm0.h **** {
 661:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 662:Drivers/CMSIS/Include/core_cm0.h ****   {
 663:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 664:Drivers/CMSIS/Include/core_cm0.h ****     __DSB();
 665:Drivers/CMSIS/Include/core_cm0.h ****     __ISB();
 666:Drivers/CMSIS/Include/core_cm0.h ****   }
 667:Drivers/CMSIS/Include/core_cm0.h **** }
 668:Drivers/CMSIS/Include/core_cm0.h **** 
 669:Drivers/CMSIS/Include/core_cm0.h **** 
 670:Drivers/CMSIS/Include/core_cm0.h **** /**
 671:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Get Pending Interrupt
 672:Drivers/CMSIS/Include/core_cm0.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
 673:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 674:Drivers/CMSIS/Include/core_cm0.h ****   \return             0  Interrupt status is not pending.
 675:Drivers/CMSIS/Include/core_cm0.h ****   \return             1  Interrupt status is pending.
 676:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 677:Drivers/CMSIS/Include/core_cm0.h ****  */
 678:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
 679:Drivers/CMSIS/Include/core_cm0.h **** {
 680:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 681:Drivers/CMSIS/Include/core_cm0.h ****   {
 682:Drivers/CMSIS/Include/core_cm0.h ****     return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 683:Drivers/CMSIS/Include/core_cm0.h ****   }
 684:Drivers/CMSIS/Include/core_cm0.h ****   else
 685:Drivers/CMSIS/Include/core_cm0.h ****   {
 686:Drivers/CMSIS/Include/core_cm0.h ****     return(0U);
 687:Drivers/CMSIS/Include/core_cm0.h ****   }
 688:Drivers/CMSIS/Include/core_cm0.h **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 162


 689:Drivers/CMSIS/Include/core_cm0.h **** 
 690:Drivers/CMSIS/Include/core_cm0.h **** 
 691:Drivers/CMSIS/Include/core_cm0.h **** /**
 692:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Set Pending Interrupt
 693:Drivers/CMSIS/Include/core_cm0.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
 694:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 695:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 696:Drivers/CMSIS/Include/core_cm0.h ****  */
 697:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
 698:Drivers/CMSIS/Include/core_cm0.h **** {
 699:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 700:Drivers/CMSIS/Include/core_cm0.h ****   {
 701:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 702:Drivers/CMSIS/Include/core_cm0.h ****   }
 703:Drivers/CMSIS/Include/core_cm0.h **** }
 704:Drivers/CMSIS/Include/core_cm0.h **** 
 705:Drivers/CMSIS/Include/core_cm0.h **** 
 706:Drivers/CMSIS/Include/core_cm0.h **** /**
 707:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Clear Pending Interrupt
 708:Drivers/CMSIS/Include/core_cm0.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
 709:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 710:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 711:Drivers/CMSIS/Include/core_cm0.h ****  */
 712:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 713:Drivers/CMSIS/Include/core_cm0.h **** {
 714:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 715:Drivers/CMSIS/Include/core_cm0.h ****   {
 716:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 717:Drivers/CMSIS/Include/core_cm0.h ****   }
 718:Drivers/CMSIS/Include/core_cm0.h **** }
 719:Drivers/CMSIS/Include/core_cm0.h **** 
 720:Drivers/CMSIS/Include/core_cm0.h **** 
 721:Drivers/CMSIS/Include/core_cm0.h **** /**
 722:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Set Interrupt Priority
 723:Drivers/CMSIS/Include/core_cm0.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
 724:Drivers/CMSIS/Include/core_cm0.h ****            The interrupt number can be positive to specify a device specific interrupt,
 725:Drivers/CMSIS/Include/core_cm0.h ****            or negative to specify a processor exception.
 726:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Interrupt number.
 727:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]  priority  Priority to set.
 728:Drivers/CMSIS/Include/core_cm0.h ****   \note    The priority cannot be set for every processor exception.
 729:Drivers/CMSIS/Include/core_cm0.h ****  */
 730:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 497              		.loc 6 730 22 view .LVU125
 498              	.LBB91:
 731:Drivers/CMSIS/Include/core_cm0.h **** {
 732:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 499              		.loc 6 732 3 view .LVU126
 733:Drivers/CMSIS/Include/core_cm0.h ****   {
 734:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))
 735:Drivers/CMSIS/Include/core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 736:Drivers/CMSIS/Include/core_cm0.h ****   }
 737:Drivers/CMSIS/Include/core_cm0.h ****   else
 738:Drivers/CMSIS/Include/core_cm0.h ****   {
 739:Drivers/CMSIS/Include/core_cm0.h ****     SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))
 500              		.loc 6 739 5 view .LVU127
 501              		.loc 6 739 52 is_stmt 0 view .LVU128
 502 0028 0D49     		ldr	r1, .L18+4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 163


 503 002a 0B6A     		ldr	r3, [r1, #32]
 504              		.loc 6 739 33 view .LVU129
 505 002c 1B02     		lsls	r3, r3, #8
 506 002e 1B0A     		lsrs	r3, r3, #8
 507              		.loc 6 739 102 view .LVU130
 508 0030 C022     		movs	r2, #192
 509 0032 1206     		lsls	r2, r2, #24
 510 0034 1343     		orrs	r3, r2
 511              		.loc 6 739 30 view .LVU131
 512 0036 0B62     		str	r3, [r1, #32]
 513              	.LVL26:
 514              		.loc 6 739 30 view .LVU132
 515              	.LBE91:
 516              	.LBE90:
 102:Src/main.c    **** 
 517              		.loc 1 102 3 is_stmt 1 view .LVU133
 518 0038 FFF7FEFF 		bl	SystemClock_Config
 519              	.LVL27:
 109:Src/main.c    ****   MX_USART2_UART_Init();
 520              		.loc 1 109 3 view .LVU134
 521 003c FFF7FEFF 		bl	MX_GPIO_Init
 522              	.LVL28:
 110:Src/main.c    ****   MX_DMA_Init();
 523              		.loc 1 110 3 view .LVU135
 524 0040 FFF7FEFF 		bl	MX_USART2_UART_Init
 525              	.LVL29:
 111:Src/main.c    ****   MX_ADC_Init();
 526              		.loc 1 111 3 view .LVU136
 527 0044 FFF7FEFF 		bl	MX_DMA_Init
 528              	.LVL30:
 112:Src/main.c    ****   MX_TIM14_Init();
 529              		.loc 1 112 3 view .LVU137
 530 0048 FFF7FEFF 		bl	MX_ADC_Init
 531              	.LVL31:
 113:Src/main.c    ****   MX_TIM3_Init();  
 532              		.loc 1 113 3 view .LVU138
 533 004c FFF7FEFF 		bl	MX_TIM14_Init
 534              	.LVL32:
 114:Src/main.c    ****   
 535              		.loc 1 114 3 view .LVU139
 536 0050 FFF7FEFF 		bl	MX_TIM3_Init
 537              	.LVL33:
 122:Src/main.c    ****   while (1)
 538              		.loc 1 122 3 view .LVU140
 539 0054 FFF7FEFF 		bl	Main
 540              	.LVL34:
 541              	.L17:
 123:Src/main.c    ****   {
 542              		.loc 1 123 3 discriminator 1 view .LVU141
 128:Src/main.c    ****   /* USER CODE END 3 */
 543              		.loc 1 128 3 discriminator 1 view .LVU142
 123:Src/main.c    ****   {
 544              		.loc 1 123 9 discriminator 1 view .LVU143
 545 0058 FEE7     		b	.L17
 546              	.L19:
 547 005a C046     		.align	2
 548              	.L18:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 164


 549 005c 00100240 		.word	1073876992
 550 0060 00ED00E0 		.word	-536810240
 551              		.cfi_endproc
 552              	.LFE1024:
 554              		.section	.text.Error_Handler,"ax",%progbits
 555              		.align	1
 556              		.global	Error_Handler
 557              		.syntax unified
 558              		.code	16
 559              		.thumb_func
 561              	Error_Handler:
 562              	.LFB1026:
 180:Src/main.c    **** 
 181:Src/main.c    **** /* USER CODE BEGIN 4 */
 182:Src/main.c    **** 
 183:Src/main.c    **** /* USER CODE END 4 */
 184:Src/main.c    **** 
 185:Src/main.c    **** /**
 186:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 187:Src/main.c    ****   * @retval None
 188:Src/main.c    ****   */
 189:Src/main.c    **** void Error_Handler(void)
 190:Src/main.c    **** {
 563              		.loc 1 190 1 view -0
 564              		.cfi_startproc
 565              		@ Volatile: function does not return.
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              		@ link register save eliminated.
 191:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 192:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 193:Src/main.c    ****   __disable_irq();
 569              		.loc 1 193 3 view .LVU145
 570              	.LBB92:
 571              	.LBI92:
 572              		.file 7 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 165


  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 166


  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 167


 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 573              		.loc 7 140 27 view .LVU146
 574              	.LBB93:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 575              		.loc 7 142 3 view .LVU147
 576              		.syntax divided
 577              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 578 0000 72B6     		cpsid i
 579              	@ 0 "" 2
 580              		.thumb
 581              		.syntax unified
 582              	.L21:
 583              	.LBE93:
 584              	.LBE92:
 194:Src/main.c    ****   while (1)
 585              		.loc 1 194 3 discriminator 1 view .LVU148
 195:Src/main.c    ****   {
 196:Src/main.c    ****   }
 586              		.loc 1 196 3 discriminator 1 view .LVU149
 194:Src/main.c    ****   while (1)
 587              		.loc 1 194 9 discriminator 1 view .LVU150
 588 0002 FEE7     		b	.L21
 589              		.cfi_endproc
 590              	.LFE1026:
 592              		.text
 593              	.Letext0:
 594              		.file 8 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 595              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 596              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 597              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h"
 598              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_tim.h"
 599              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_utils.h"
 600              		.file 14 "Inc/gpio.h"
 601              		.file 15 "Inc/usart.h"
 602              		.file 16 "Inc/dma.h"
 603              		.file 17 "Inc/adc.h"
 604              		.file 18 "Inc/tim.h"
 605              		.file 19 "Inc/common_inc.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s 			page 168


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s:18     .text._write:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s:24     .text._write:00000000 _write
C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s:103    .text._write:00000020 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s:108    .text.SystemClock_Config:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s:114    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s:414    .text.SystemClock_Config:000000cc $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s:423    .text.main:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s:429    .text.main:00000000 main
C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s:549    .text.main:0000005c $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s:555    .text.Error_Handler:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccKnk1JZ.s:561    .text.Error_Handler:00000000 Error_Handler

UNDEFINED SYMBOLS
LL_Init1msTick
LL_SetSystemCoreClock
MX_GPIO_Init
MX_USART2_UART_Init
MX_DMA_Init
MX_ADC_Init
MX_TIM14_Init
MX_TIM3_Init
Main
