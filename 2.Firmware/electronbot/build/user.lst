ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"user.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZN5RobotC2EP19__SPI_HandleTypeDefP17I2C_HandleTypeDef,"axG",%progbits,_ZN5RobotC5E
  20              		.align	1
  21              		.weak	_ZN5RobotC2EP19__SPI_HandleTypeDefP17I2C_HandleTypeDef
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_ZN5RobotC2EP19__SPI_HandleTypeDefP17I2C_HandleTypeDef:
  27              		.fnstart
  28              	.LVL0:
  29              	.LFB369:
  30              		.file 1 "user/robot.h"
   1:user/robot.h  **** #ifndef ELECTRONBOT_FW_ROBOT_H
   2:user/robot.h  **** #define ELECTRONBOT_FW_ROBOT_H
   3:user/robot.h  **** 
   4:user/robot.h  **** #include "stm32f4xx.h"
   5:user/robot.h  **** #include "screen.h"
   6:user/robot.h  **** #include "i2c.h"
   7:user/robot.h  **** #include "common_inc.h"
   8:user/robot.h  **** 
   9:user/robot.h  **** 
  10:user/robot.h  **** #define ANY 0
  11:user/robot.h  **** 
  12:user/robot.h  **** class Robot
  13:user/robot.h  **** {
  14:user/robot.h  **** public:
  15:user/robot.h  ****     Robot(SPI_HandleTypeDef* _screenSpi, I2C_HandleTypeDef* _motorI2c) :
  31              		.loc 1 15 5 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		.loc 1 15 5 is_stmt 0 view .LVU1
  36 0000 38B5     		push	{r3, r4, r5, lr}
  37              		.save {r3, r4, r5, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 16
  40              		.cfi_offset 3, -16
  41              		.cfi_offset 4, -12
  42              		.cfi_offset 5, -8
  43              		.cfi_offset 14, -4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 2


  44 0002 0546     		mov	r5, r0
  45              	.LBB9:
  16:user/robot.h  ****         screenSpi(_screenSpi), motorI2c(_motorI2c)
  46              		.loc 1 16 50 view .LVU2
  47 0004 0346     		mov	r3, r0
  48 0006 3A48     		ldr	r0, .L6
  49              	.LVL1:
  50              		.loc 1 16 50 view .LVU3
  51 0008 43F8040B 		str	r0, [r3], #4
  52              	.LVL2:
  53              		.loc 1 16 50 view .LVU4
  54 000c 4FF0060C 		mov	ip, #6
  55 0010 04E0     		b	.L3
  56              	.L5:
  57              	.LVL3:
  58              	.LBB10:
  59              	.LBI10:
  17:user/robot.h  ****     {
  18:user/robot.h  ****         lcd = new Screen(screenSpi);
  19:user/robot.h  **** 
  20:user/robot.h  ****         /********* Need to adjust parameters for specific hardware *********/
  21:user/robot.h  ****         joint[ANY] = JointStatus_t{
  22:user/robot.h  ****             0,
  23:user/robot.h  ****             -180,
  24:user/robot.h  ****             180,
  25:user/robot.h  ****             90
  26:user/robot.h  ****         };
  27:user/robot.h  **** 
  28:user/robot.h  ****         joint[1] = JointStatus_t{ // Head
  29:user/robot.h  ****             2,
  30:user/robot.h  ****             70,
  31:user/robot.h  ****             95,
  32:user/robot.h  ****             0,
  33:user/robot.h  ****             -15,
  34:user/robot.h  ****             15,
  35:user/robot.h  ****             true
  36:user/robot.h  ****             // electron.SetJointId(electron.joint[ANY], 2);
  37:user/robot.h  ****             // electron.SetJointInitAngle(electron.joint[ANY], 0);
  38:user/robot.h  ****             // electron.SetJointKp(electron.joint[ANY], 30);
  39:user/robot.h  ****             // electron.SetJointKi(electron.joint[ANY], 0.4);
  40:user/robot.h  ****             // electron.SetJointKd(electron.joint[ANY], 200);
  41:user/robot.h  ****             // electron.SetJointTorqueLimit(electron.joint[ANY], 0.5);
  42:user/robot.h  ****             // electron.SetJointEnable(electron.joint[ANY], true);
  43:user/robot.h  ****         };
  44:user/robot.h  **** 
  45:user/robot.h  ****         joint[2] = JointStatus_t{ // Left arm roll
  46:user/robot.h  ****             4,
  47:user/robot.h  ****             -9,
  48:user/robot.h  ****             3,
  49:user/robot.h  ****             0,
  50:user/robot.h  ****             0,
  51:user/robot.h  ****             30,
  52:user/robot.h  ****             false
  53:user/robot.h  ****             // electron.SetJointId(electron.joint[ANY], 4);
  54:user/robot.h  ****             // electron.SetJointInitAngle(electron.joint[ANY], 0);
  55:user/robot.h  ****             // electron.SetJointKp(electron.joint[ANY], 50);
  56:user/robot.h  ****             // electron.SetJointKi(electron.joint[ANY], 0.8);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 3


  57:user/robot.h  ****             // electron.SetJointKd(electron.joint[ANY], 600);
  58:user/robot.h  ****             // electron.SetJointTorqueLimit(electron.joint[ANY], 1);
  59:user/robot.h  ****             // electron.SetJointEnable(electron.joint[ANY], true);
  60:user/robot.h  ****         };
  61:user/robot.h  **** 
  62:user/robot.h  ****         joint[3] = JointStatus_t{ // Left arm pitch
  63:user/robot.h  ****             6,
  64:user/robot.h  ****             -16,
  65:user/robot.h  ****             117,
  66:user/robot.h  ****             0,
  67:user/robot.h  ****             -20,
  68:user/robot.h  ****             180,
  69:user/robot.h  ****             false
  70:user/robot.h  ****             // electron.SetJointId(electron.joint[ANY],6);
  71:user/robot.h  ****             // electron.SetJointInitAngle(electron.joint[ANY], 0);
  72:user/robot.h  ****             // electron.SetJointKp(electron.joint[ANY], 50);
  73:user/robot.h  ****             // electron.SetJointKi(electron.joint[ANY], 0.8);
  74:user/robot.h  ****             // electron.SetJointKd(electron.joint[ANY], 300);
  75:user/robot.h  ****             // electron.SetJointTorqueLimit(electron.joint[ANY], 0.5);
  76:user/robot.h  ****             // electron.SetJointEnable(electron.joint[ANY], true);
  77:user/robot.h  ****         };
  78:user/robot.h  **** 
  79:user/robot.h  ****         joint[4] = JointStatus_t{ // Right arm roll
  80:user/robot.h  ****             8,
  81:user/robot.h  ****             133,
  82:user/robot.h  ****             141,
  83:user/robot.h  ****             0,
  84:user/robot.h  ****             0,
  85:user/robot.h  ****             30,
  86:user/robot.h  ****             true
  87:user/robot.h  ****             // electron.SetJointId(electron.joint[ANY], 8);
  88:user/robot.h  ****             // electron.SetJointInitAngle(electron.joint[ANY], 0);
  89:user/robot.h  ****             // electron.SetJointKp(electron.joint[ANY], 50);
  90:user/robot.h  ****             // electron.SetJointKi(electron.joint[ANY], 0.8);
  91:user/robot.h  ****             // electron.SetJointKd(electron.joint[ANY], 600);
  92:user/robot.h  ****             // electron.SetJointTorqueLimit(electron.joint[ANY], 1);
  93:user/robot.h  ****             // electron.SetJointEnable(electron.joint[ANY], true);
  94:user/robot.h  ****         };
  95:user/robot.h  **** 
  96:user/robot.h  ****         joint[5] = JointStatus_t{ // Right arm pitch
  97:user/robot.h  ****             10,
  98:user/robot.h  ****             15,
  99:user/robot.h  ****             150,
 100:user/robot.h  ****             0,
 101:user/robot.h  ****             -20,
 102:user/robot.h  ****             180,
 103:user/robot.h  ****             true
 104:user/robot.h  ****             // electron.SetJointId(electron.joint[ANY],10);
 105:user/robot.h  ****             // electron.SetJointInitAngle(electron.joint[ANY], 0);
 106:user/robot.h  ****             // electron.SetJointKp(electron.joint[ANY], 50);
 107:user/robot.h  ****             // electron.SetJointKi(electron.joint[ANY], 0.8);
 108:user/robot.h  ****             // electron.SetJointKd(electron.joint[ANY], 300);
 109:user/robot.h  ****             // electron.SetJointTorqueLimit(electron.joint[ANY], 0.5);
 110:user/robot.h  ****             // electron.SetJointEnable(electron.joint[ANY], true);
 111:user/robot.h  ****         };
 112:user/robot.h  **** 
 113:user/robot.h  ****         joint[6] = JointStatus_t{ // Body
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 4


 114:user/robot.h  ****             12,
 115:user/robot.h  ****             0,
 116:user/robot.h  ****             180,
 117:user/robot.h  ****             0,
 118:user/robot.h  ****             -90,
 119:user/robot.h  ****             90,
 120:user/robot.h  ****             false
 121:user/robot.h  ****             // electron.SetJointId(electron.joint[ANY],12);
 122:user/robot.h  ****             // electron.SetJointInitAngle(electron.joint[ANY], 0);
 123:user/robot.h  ****             // electron.SetJointKp(electron.joint[ANY], 150);
 124:user/robot.h  ****             // electron.SetJointKi(electron.joint[ANY], 0.8);
 125:user/robot.h  ****             // electron.SetJointKd(electron.joint[ANY], 300);
 126:user/robot.h  ****             // electron.SetJointTorqueLimit(electron.joint[ANY], 0.5);
 127:user/robot.h  ****             // electron.SetJointEnable(electron.joint[ANY], true);
 128:user/robot.h  ****         };
 129:user/robot.h  ****         /********* Need to adjust parameters for specific hardware *********/
 130:user/robot.h  ****     }
 131:user/robot.h  **** 
 132:user/robot.h  **** 
 133:user/robot.h  ****   /*   struct UsbBuffer_t
 134:user/robot.h  ****     {
 135:user/robot.h  ****         uint8_t extraDataTx[32];
 136:user/robot.h  ****         uint8_t rxData[2][60 * 240 * 3 + 32]; // 43232bytes, 43200 of which are lcd buffer
 137:user/robot.h  ****         volatile uint16_t receivedPacketLen = 0;
 138:user/robot.h  ****         volatile uint8_t pingPongIndex = 0;
 139:user/robot.h  ****         volatile uint32_t rxDataOffset = 0;
 140:user/robot.h  ****     }; */
 141:user/robot.h  ****     UsbBuffer_t *pUsbBuffer=&usbBuffer;
 142:user/robot.h  **** 
 143:user/robot.h  **** 
 144:user/robot.h  ****     struct JointStatus_t
  60              		.loc 1 144 12 is_stmt 1 view .LVU5
  61              	.LBB11:
  62 0012 0020     		movs	r0, #0
  63 0014 1876     		strb	r0, [r3, #24]
  64              	.LVL4:
  65              		.loc 1 144 12 is_stmt 0 view .LVU6
  66              	.LBE11:
  67              	.LBE10:
  16:user/robot.h  ****         screenSpi(_screenSpi), motorI2c(_motorI2c)
  68              		.loc 1 16 50 view .LVU7
  69 0016 1C33     		adds	r3, r3, #28
  16:user/robot.h  ****         screenSpi(_screenSpi), motorI2c(_motorI2c)
  70              		.loc 1 16 50 is_stmt 1 view .LVU8
  71 0018 0CF1FF3C 		add	ip, ip, #-1
  72              	.L3:
  16:user/robot.h  ****         screenSpi(_screenSpi), motorI2c(_motorI2c)
  73              		.loc 1 16 50 discriminator 4 view .LVU9
  74 001c BCF1000F 		cmp	ip, #0
  75 0020 F7DA     		bge	.L5
  16:user/robot.h  ****         screenSpi(_screenSpi), motorI2c(_motorI2c)
  76              		.loc 1 16 50 is_stmt 0 discriminator 2 view .LVU10
  77 0022 C5F8CC10 		str	r1, [r5, #204]
  78 0026 C5F8D020 		str	r2, [r5, #208]
  18:user/robot.h  **** 
  79              		.loc 1 18 9 is_stmt 1 discriminator 2 view .LVU11
  18:user/robot.h  **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 5


  80              		.loc 1 18 35 is_stmt 0 discriminator 2 view .LVU12
  81 002a 0C20     		movs	r0, #12
  82 002c FFF7FEFF 		bl	_Znwj
  83              	.LVL5:
  18:user/robot.h  **** 
  84              		.loc 1 18 35 discriminator 2 view .LVU13
  85 0030 D5F8CC20 		ldr	r2, [r5, #204]
  86              	.LVL6:
  87              	.LBB12:
  88              	.LBI12:
  89              		.file 2 "user/screen.h"
   1:user/screen.h **** #ifndef ELECTRONBOT_FW_SCREEN_H
   2:user/screen.h **** #define ELECTRONBOT_FW_SCREEN_H
   3:user/screen.h **** 
   4:user/screen.h **** #include "stm32f4xx.h"
   5:user/screen.h **** #include "main.h"
   6:user/screen.h **** #include "spi.h"
   7:user/screen.h **** 
   8:user/screen.h **** 
   9:user/screen.h **** class Screen
  10:user/screen.h **** {
  11:user/screen.h **** public:
  12:user/screen.h ****     explicit Screen(SPI_HandleTypeDef* _spi) :
  90              		.loc 2 12 14 is_stmt 1 discriminator 2 view .LVU14
  91              	.LBB13:
  13:user/screen.h ****         spi(_spi)
  92              		.loc 2 13 17 is_stmt 0 discriminator 2 view .LVU15
  93 0034 0023     		movs	r3, #0
  94 0036 0370     		strb	r3, [r0]
  95 0038 4260     		str	r2, [r0, #4]
  96 003a 0372     		strb	r3, [r0, #8]
  97 003c 0223     		movs	r3, #2
  98 003e 4372     		strb	r3, [r0, #9]
  99              	.LVL7:
 100              		.loc 2 13 17 discriminator 2 view .LVU16
 101              	.LBE13:
 102              	.LBE12:
  18:user/robot.h  **** 
 103              		.loc 1 18 13 discriminator 2 view .LVU17
 104 0040 C5F8C800 		str	r0, [r5, #200]
  21:user/robot.h  ****             0,
 105              		.loc 1 21 9 is_stmt 1 discriminator 2 view .LVU18
  21:user/robot.h  ****             0,
 106              		.loc 1 21 20 is_stmt 0 discriminator 2 view .LVU19
 107 0044 2B4C     		ldr	r4, .L6+4
 108 0046 05F1040C 		add	ip, r5, #4
 109 004a A646     		mov	lr, r4
 110 004c BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 111 0050 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 112 0054 9EE80700 		ldm	lr, {r0, r1, r2}
 113 0058 8CE80700 		stm	ip, {r0, r1, r2}
  28:user/robot.h  ****             2,
 114              		.loc 1 28 9 is_stmt 1 discriminator 2 view .LVU20
  28:user/robot.h  ****             2,
 115              		.loc 1 28 18 is_stmt 0 discriminator 2 view .LVU21
 116 005c 05F1200C 		add	ip, r5, #32
 117 0060 04F11C0E 		add	lr, r4, #28
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 6


 118 0064 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 119 0068 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 120 006c 9EE80700 		ldm	lr, {r0, r1, r2}
 121 0070 8CE80700 		stm	ip, {r0, r1, r2}
  45:user/robot.h  ****             4,
 122              		.loc 1 45 9 is_stmt 1 discriminator 2 view .LVU22
  45:user/robot.h  ****             4,
 123              		.loc 1 45 18 is_stmt 0 discriminator 2 view .LVU23
 124 0074 05F13C0C 		add	ip, r5, #60
 125 0078 04F1380E 		add	lr, r4, #56
 126 007c BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 127 0080 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 128 0084 9EE80700 		ldm	lr, {r0, r1, r2}
 129 0088 8CE80700 		stm	ip, {r0, r1, r2}
  62:user/robot.h  ****             6,
 130              		.loc 1 62 9 is_stmt 1 discriminator 2 view .LVU24
  62:user/robot.h  ****             6,
 131              		.loc 1 62 18 is_stmt 0 discriminator 2 view .LVU25
 132 008c 05F1580C 		add	ip, r5, #88
 133 0090 04F1540E 		add	lr, r4, #84
 134 0094 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 135 0098 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 136 009c 9EE80700 		ldm	lr, {r0, r1, r2}
 137 00a0 8CE80700 		stm	ip, {r0, r1, r2}
  79:user/robot.h  ****             8,
 138              		.loc 1 79 9 is_stmt 1 discriminator 2 view .LVU26
  79:user/robot.h  ****             8,
 139              		.loc 1 79 18 is_stmt 0 discriminator 2 view .LVU27
 140 00a4 05F1740C 		add	ip, r5, #116
 141 00a8 04F1700E 		add	lr, r4, #112
 142 00ac BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 143 00b0 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 144 00b4 9EE80700 		ldm	lr, {r0, r1, r2}
 145 00b8 8CE80700 		stm	ip, {r0, r1, r2}
  96:user/robot.h  ****             10,
 146              		.loc 1 96 9 is_stmt 1 discriminator 2 view .LVU28
  96:user/robot.h  ****             10,
 147              		.loc 1 96 18 is_stmt 0 discriminator 2 view .LVU29
 148 00bc 05F1900C 		add	ip, r5, #144
 149 00c0 04F18C0E 		add	lr, r4, #140
 150 00c4 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 151 00c8 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 152 00cc 9EE80700 		ldm	lr, {r0, r1, r2}
 153 00d0 8CE80700 		stm	ip, {r0, r1, r2}
 113:user/robot.h  ****             12,
 154              		.loc 1 113 9 is_stmt 1 discriminator 2 view .LVU30
 113:user/robot.h  ****             12,
 155              		.loc 1 113 18 is_stmt 0 discriminator 2 view .LVU31
 156 00d4 05F1AC0E 		add	lr, r5, #172
 157 00d8 04F1A80C 		add	ip, r4, #168
 158 00dc BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 159 00e0 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 160 00e4 9CE80700 		ldm	ip, {r0, r1, r2}
 161 00e8 8EE80700 		stm	lr, {r0, r1, r2}
 162              	.LBE9:
 130:user/robot.h  **** 
 163              		.loc 1 130 5 discriminator 2 view .LVU32
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 7


 164 00ec 2846     		mov	r0, r5
 165 00ee 38BD     		pop	{r3, r4, r5, pc}
 166              	.LVL8:
 167              	.L7:
 130:user/robot.h  **** 
 168              		.loc 1 130 5 discriminator 2 view .LVU33
 169              		.align	2
 170              	.L6:
 171 00f0 00000000 		.word	usbBuffer
 172 00f4 00000000 		.word	.LANCHOR0
 173              		.cfi_endproc
 174              	.LFE369:
 175              		.fnend
 177              		.weak	_ZN5RobotC1EP19__SPI_HandleTypeDefP17I2C_HandleTypeDef
 178              		.thumb_set _ZN5RobotC1EP19__SPI_HandleTypeDefP17I2C_HandleTypeDef,_ZN5RobotC2EP19__SPI_HandleTypeD
 179              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 180              		.align	1
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 185              	_Z41__static_initialization_and_destruction_0ii:
 186              		.fnstart
 187              	.LVL9:
 188              	.LFB375:
 189              		.file 3 "user/user.cpp"
   1:user/user.cpp **** #include <cmath>
   2:user/user.cpp **** #include "common_inc.h"
   3:user/user.cpp **** #include "screen.h"
   4:user/user.cpp **** #include "robot.h"
   5:user/user.cpp **** #include <stdio.h>
   6:user/user.cpp **** 
   7:user/user.cpp **** Robot electron(&hspi1, &hi2c1);
   8:user/user.cpp **** float jointSetPoints[6];
   9:user/user.cpp **** bool isEnabled = false;
  10:user/user.cpp **** 
  11:user/user.cpp **** float setKp;
  12:user/user.cpp **** float setKi;
  13:user/user.cpp **** float setKv;
  14:user/user.cpp **** float setKd;
  15:user/user.cpp **** float setTq;
  16:user/user.cpp **** 
  17:user/user.cpp **** uint8_t setkp_flag;
  18:user/user.cpp **** uint8_t setki_flag;
  19:user/user.cpp **** uint8_t setkv_flag;
  20:user/user.cpp **** uint8_t setkd_flag;
  21:user/user.cpp **** uint8_t settq_flag;
  22:user/user.cpp **** 
  23:user/user.cpp **** /* Thread Definitions -----------------------------------------------------*/
  24:user/user.cpp **** 
  25:user/user.cpp **** 
  26:user/user.cpp **** /* Timer Callbacks -------------------------------------------------------*/
  27:user/user.cpp **** 
  28:user/user.cpp **** void setPara(uint8_t *ptr)
  29:user/user.cpp **** {
  30:user/user.cpp ****     // Robot::JointStatus_t *pJointStatus;
  31:user/user.cpp ****     uint8_t id = ptr[0];
  32:user/user.cpp ****     setKp=*((float*) (ptr + 2));
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 8


  33:user/user.cpp ****     setKi=*((float*) (ptr + 7));
  34:user/user.cpp ****     setKv=*((float*) (ptr + 12));
  35:user/user.cpp ****     setKd=*((float*) (ptr + 17));
  36:user/user.cpp ****     setTq=*((float*) (ptr + 22));
  37:user/user.cpp **** 
  38:user/user.cpp ****     setkp_flag = ptr[1];
  39:user/user.cpp ****     setki_flag = ptr[6];
  40:user/user.cpp ****     setkv_flag = ptr[11];
  41:user/user.cpp ****     setkd_flag = ptr[16];
  42:user/user.cpp ****     settq_flag = ptr[21];
  43:user/user.cpp **** 
  44:user/user.cpp ****     for(int i=0 ; i<32; i++)
  45:user/user.cpp ****         printf("%.2x ",ptr[i]);
  46:user/user.cpp ****     printf("\r\n");
  47:user/user.cpp ****   /*   switch(id)
  48:user/user.cpp ****     {
  49:user/user.cpp ****         case 2:pJointStatus=&electron.joint[1];break;
  50:user/user.cpp ****         case 4:pJointStatus=&electron.joint[2];break;
  51:user/user.cpp ****         case 6:pJointStatus=&electron.joint[3];break;
  52:user/user.cpp ****         case 8:pJointStatus=&electron.joint[4];break;
  53:user/user.cpp ****         case 10:pJointStatus=&electron.joint[5];break;
  54:user/user.cpp ****         case 12:pJointStatus=&electron.joint[6];break;
  55:user/user.cpp ****         default:pJointStatus=&electron.joint[0];break; 
  56:user/user.cpp **** 
  57:user/user.cpp ****     } */
  58:user/user.cpp **** 
  59:user/user.cpp ****     if(setkp_flag)
  60:user/user.cpp ****         electron.SetJointKp(electron.joint[id/2], setKp);
  61:user/user.cpp ****     if(setki_flag)
  62:user/user.cpp ****         electron.SetJointKi(electron.joint[id/2], setKi);
  63:user/user.cpp ****     if(setkv_flag)        
  64:user/user.cpp ****         electron.SetJointKv(electron.joint[id/2], setKv);
  65:user/user.cpp ****     if(setkd_flag)
  66:user/user.cpp ****         electron.SetJointKd(electron.joint[id/2], setKd);
  67:user/user.cpp ****     if(settq_flag)
  68:user/user.cpp ****         electron.SetJointTorqueLimit(electron.joint[id/2], setTq);
  69:user/user.cpp ****    /*  for(int i=0 ; i<32; i++)
  70:user/user.cpp ****         printf("%.2x ",ptr[i]);
  71:user/user.cpp ****     printf("\r\n"); */
  72:user/user.cpp ****     /*float t=*((float*) (ptr + 2));    
  73:user/user.cpp ****     int dat=ceil(t);
  74:user/user.cpp ****     // printf("jointSetPoints=%u\r\n",jointSetPoints[0]);
  75:user/user.cpp ****     printf("jointSetPoints=%ld\r\n",dat);    */
  76:user/user.cpp ****    
  77:user/user.cpp **** }
  78:user/user.cpp **** void setAngle(uint8_t *ptr)
  79:user/user.cpp **** {
  80:user/user.cpp ****     uint8_t id = ptr[0];
  81:user/user.cpp ****     // float angle=*((float*) (ptr + 1));
  82:user/user.cpp ****     jointSetPoints[id/2] = *((float*) (ptr + 1));
  83:user/user.cpp ****     isEnabled = ptr[5];
  84:user/user.cpp ****     
  85:user/user.cpp ****     /* for(int i=0 ; i<32; i++)
  86:user/user.cpp ****         printf("%.2x ",ptr[i]);
  87:user/user.cpp ****     printf("\r\n"); */
  88:user/user.cpp ****    /* switch(id)
  89:user/user.cpp ****     {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 9


  90:user/user.cpp ****         case 2:JointStatus=electron.joint[1];break;
  91:user/user.cpp ****         case 4:JointStatus=electron.joint[2];break;
  92:user/user.cpp ****         case 6:JointStatus=electron.joint[3];break;
  93:user/user.cpp ****         case 8:JointStatus=electron.joint[4];break;
  94:user/user.cpp ****         case 10:JointStatus=electron.joint[5];break;
  95:user/user.cpp ****         case 12:JointStatus=electron.joint[6];break;
  96:user/user.cpp ****         default:JointStatus=electron.joint[0];break;
  97:user/user.cpp ****     } */
  98:user/user.cpp ****     // printf("id = %.2x\r\n",JointStatus.id);
  99:user/user.cpp ****     // printf("id = %d\r\n",id);
 100:user/user.cpp ****     electron.UpdateJointAngle(electron.joint[id/2], jointSetPoints[id/2]);
 101:user/user.cpp ****     electron.SetJointEnable(electron.joint[id/2], isEnabled);
 102:user/user.cpp **** }
 103:user/user.cpp **** /* Default Entry -------------------------------------------------------*/
 104:user/user.cpp **** void Main(void)
 105:user/user.cpp **** {
 106:user/user.cpp ****     int i;
 107:user/user.cpp ****     HAL_Delay(1000);
 108:user/user.cpp ****     electron.lcd->Init(Screen::DEGREE_0);
 109:user/user.cpp ****     electron.lcd->SetWindow(0, 239, 0, 239);
 110:user/user.cpp ****     for(int i=0;i<32;i++)
 111:user/user.cpp ****         electron.pUsbBuffer->extraDataTx[i]=32-i;
 112:user/user.cpp ****     /* electron.SetJointEnable(electron.joint[6], true);
 113:user/user.cpp ****     electron.UpdateJointAngle(electron.joint[6], 30); */
 114:user/user.cpp ****     while(1)
 115:user/user.cpp ****     {
 116:user/user.cpp ****         //electron.SendUsbPacket(electron.pUsbBuffer->extraDataTx, 32);
 117:user/user.cpp ****         // HAL_Delay(500);        
 118:user/user.cpp ****         electron.ReceiveUsbPacketUntilSizeIs(224); // last packet is 224bytes
 119:user/user.cpp ****         uint8_t* ptr = electron.GetExtraDataRxPtr();
 120:user/user.cpp ****         
 121:user/user.cpp ****         if(ptr[31] == 0xee)  //设置参数
 122:user/user.cpp ****         {
 123:user/user.cpp ****             setPara(ptr);
 124:user/user.cpp ****         }
 125:user/user.cpp ****         else if(ptr[31] == 0xef)
 126:user/user.cpp ****         {
 127:user/user.cpp ****             setAngle(ptr);
 128:user/user.cpp ****             
 129:user/user.cpp ****         }
 130:user/user.cpp ****         else
 131:user/user.cpp ****         {
 132:user/user.cpp ****             printf("task\r\n");
 133:user/user.cpp ****         }
 134:user/user.cpp ****         
 135:user/user.cpp ****     }
 136:user/user.cpp ****     
 137:user/user.cpp ****     /* electron.SetJointInitAngle(electron.joint[6], 0);
 138:user/user.cpp ****     electron.SetJointKp(electron.joint[6], 150);
 139:user/user.cpp ****     electron.SetJointKi(electron.joint[6], 0.8);
 140:user/user.cpp ****     electron.SetJointKd(electron.joint[6], 300);
 141:user/user.cpp ****     electron.SetJointTorqueLimit(electron.joint[6], 0.8); */
 142:user/user.cpp ****     // electron.SetJointEnable(electron.joint[6], false);
 143:user/user.cpp ****     // electron.UpdateJointAngle(electron.joint[6], 30);
 144:user/user.cpp ****    /*  electron.UpdateJointAngle(electron.joint[1], 0);
 145:user/user.cpp ****     electron.UpdateJointAngle(electron.joint[2], 0);
 146:user/user.cpp ****     electron.UpdateJointAngle(electron.joint[3], 0);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 10


 147:user/user.cpp ****     electron.UpdateJointAngle(electron.joint[4], 0);
 148:user/user.cpp ****     electron.UpdateJointAngle(electron.joint[5], 0); 
 149:user/user.cpp ****     electron.UpdateJointAngle(electron.joint[6], 0); */   
 150:user/user.cpp **** 
 151:user/user.cpp ****     float t = 0;    
 152:user/user.cpp ****     while (true)
 153:user/user.cpp ****     {
 154:user/user.cpp **** #if 1
 155:user/user.cpp ****         for (int p = 0; p < 4; p++)
 156:user/user.cpp ****         {
 157:user/user.cpp ****             // send joint angles
 158:user/user.cpp ****             for (int j = 0; j < 6; j++)
 159:user/user.cpp ****                 for (int i = 0; i < 4; i++)
 160:user/user.cpp ****                 {
 161:user/user.cpp ****                     auto* b = (unsigned char*) &(electron.joint[j + 1].angle);
 162:user/user.cpp ****                     electron.pUsbBuffer->extraDataTx[j * 4 + i + 1] = *(b + i);
 163:user/user.cpp ****                 }
 164:user/user.cpp ****             
 165:user/user.cpp ****             electron.SendUsbPacket(electron.pUsbBuffer->extraDataTx, 32);           
 166:user/user.cpp ****             electron.ReceiveUsbPacketUntilSizeIs(224); // last packet is 224bytes           
 167:user/user.cpp ****             // get joint angles
 168:user/user.cpp ****             uint8_t* ptr = electron.GetExtraDataRxPtr();
 169:user/user.cpp **** 			
 170:user/user.cpp ****             if (isEnabled != (bool) ptr[0])
 171:user/user.cpp ****             {
 172:user/user.cpp ****                 isEnabled = ptr[0];
 173:user/user.cpp ****                 /* electron.SetJointEnable(electron.joint[1], isEnabled);
 174:user/user.cpp ****                 electron.SetJointEnable(electron.joint[2], isEnabled);
 175:user/user.cpp ****                 electron.SetJointEnable(electron.joint[3], isEnabled);
 176:user/user.cpp ****                 electron.SetJointEnable(electron.joint[4], isEnabled);
 177:user/user.cpp ****                 electron.SetJointEnable(electron.joint[5], isEnabled); */
 178:user/user.cpp ****                 // electron.SetJointEnable(electron.joint[6], isEnabled);
 179:user/user.cpp ****             }
 180:user/user.cpp ****             for (int j = 0; j < 6; j++)
 181:user/user.cpp ****             {
 182:user/user.cpp ****                 jointSetPoints[j] = *((float*) (ptr + 4 * j + 1));
 183:user/user.cpp ****             }
 184:user/user.cpp ****             printf("33333\r\n");
 185:user/user.cpp ****             while (electron.lcd->isBusy);
 186:user/user.cpp ****             printf("222222\r\n");
 187:user/user.cpp ****             if (p == 0)
 188:user/user.cpp ****                 electron.lcd->WriteFrameBuffer(electron.GetLcdBufferPtr(),
 189:user/user.cpp ****                                                60 * 240 * 3);
 190:user/user.cpp ****             else
 191:user/user.cpp ****                 electron.lcd->WriteFrameBuffer(electron.GetLcdBufferPtr(),
 192:user/user.cpp ****                                                60 * 240 * 3, true);			
 193:user/user.cpp ****         }
 194:user/user.cpp ****         HAL_Delay(1);
 195:user/user.cpp **** #endif
 196:user/user.cpp **** 
 197:user/user.cpp **** 
 198:user/user.cpp ****         t += 0.01;
 199:user/user.cpp **** 
 200:user/user.cpp ****        /*  electron.UpdateJointAngle(electron.joint[1], jointSetPoints[0]);
 201:user/user.cpp ****         electron.UpdateJointAngle(electron.joint[2], jointSetPoints[1]);
 202:user/user.cpp ****         electron.UpdateJointAngle(electron.joint[3], jointSetPoints[2]);
 203:user/user.cpp ****         electron.UpdateJointAngle(electron.joint[4], jointSetPoints[3]);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 11


 204:user/user.cpp ****         electron.UpdateJointAngle(electron.joint[5], jointSetPoints[4]);
 205:user/user.cpp ****         electron.UpdateJointAngle(electron.joint[6], jointSetPoints[5]); */
 206:user/user.cpp **** 
 207:user/user.cpp ****         HAL_Delay(1);
 208:user/user.cpp **** 
 209:user/user.cpp **** //      electron.UpdateJointAngle(electron.joint[ANY], 65 + 75 * std::sin(t));
 210:user/user.cpp **** 
 211:user/user.cpp ****         printf("%.2f,%.2f,%.2f,%.2f,%.2f,%.2f\n",
 212:user/user.cpp ****                jointSetPoints[0], jointSetPoints[1], jointSetPoints[2],
 213:user/user.cpp ****                jointSetPoints[3], jointSetPoints[4], jointSetPoints[5]);
 214:user/user.cpp ****     }
 215:user/user.cpp **** }
 216:user/user.cpp **** 
 217:user/user.cpp **** 
 218:user/user.cpp **** extern "C"
 219:user/user.cpp **** void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef* hspi)
 220:user/user.cpp **** {
 221:user/user.cpp ****     electron.lcd->isBusy = false;
 222:user/user.cpp **** }...
 190              		.loc 3 222 1 is_stmt 1 view -0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              		.loc 3 222 1 is_stmt 0 view .LVU35
 195 0000 0128     		cmp	r0, #1
 196 0002 00D0     		beq	.L14
 197 0004 7047     		bx	lr
 198              	.L14:
 199              		.loc 3 222 1 discriminator 1 view .LVU36
 200 0006 08B5     		push	{r3, lr}
 201              	.LCFI1:
 202              		.cfi_def_cfa_offset 8
 203              		.cfi_offset 3, -8
 204              		.cfi_offset 14, -4
 205              		.loc 3 222 1 discriminator 1 view .LVU37
 206 0008 4FF6FF73 		movw	r3, #65535
 207 000c 9942     		cmp	r1, r3
 208 000e 00D0     		beq	.L15
 209              	.LVL10:
 210              	.L8:
 211              		.loc 3 222 1 view .LVU38
 212 0010 08BD     		pop	{r3, pc}
 213              	.LVL11:
 214              	.L15:
   7:user/user.cpp **** Robot electron(&hspi1, &hi2c1);
 215              		.loc 3 7 30 view .LVU39
 216 0012 034A     		ldr	r2, .L16
 217 0014 0349     		ldr	r1, .L16+4
 218              	.LVL12:
   7:user/user.cpp **** Robot electron(&hspi1, &hi2c1);
 219              		.loc 3 7 30 view .LVU40
 220 0016 0448     		ldr	r0, .L16+8
 221              	.LVL13:
   7:user/user.cpp **** Robot electron(&hspi1, &hi2c1);
 222              		.loc 3 7 30 view .LVU41
 223 0018 FFF7FEFF 		bl	_ZN5RobotC1EP19__SPI_HandleTypeDefP17I2C_HandleTypeDef
 224              	.LVL14:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 12


 225              		.loc 3 222 1 view .LVU42
 226 001c F8E7     		b	.L8
 227              	.L17:
 228 001e 00BF     		.align	2
 229              	.L16:
 230 0020 00000000 		.word	hi2c1
 231 0024 00000000 		.word	hspi1
 232 0028 00000000 		.word	.LANCHOR1
 233              		.cfi_endproc
 234              	.LFE375:
 235              		.cantunwind
 236              		.fnend
 238              		.section	.rodata.setPara.str1.4,"aMS",%progbits,1
 239              		.align	2
 240              	.LC7:
 241 0000 252E3278 		.ascii	"%.2x \000"
 241      2000
 242 0006 0000     		.align	2
 243              	.LC8:
 244 0008 0D00     		.ascii	"\015\000"
 245              		.section	.text.setPara,"ax",%progbits
 246              		.align	1
 247              		.global	setPara
 248              		.syntax unified
 249              		.thumb
 250              		.thumb_func
 252              	setPara:
 253              		.fnstart
 254              	.LVL15:
 255              	.LFB371:
  29:user/user.cpp **** {
 256              		.loc 3 29 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
  29:user/user.cpp **** {
 260              		.loc 3 29 1 is_stmt 0 view .LVU44
 261 0000 70B5     		push	{r4, r5, r6, lr}
 262              		.save {r4, r5, r6, lr}
 263              	.LCFI2:
 264              		.cfi_def_cfa_offset 16
 265              		.cfi_offset 4, -16
 266              		.cfi_offset 5, -12
 267              		.cfi_offset 6, -8
 268              		.cfi_offset 14, -4
 269 0002 0546     		mov	r5, r0
  31:user/user.cpp ****     uint8_t id = ptr[0];
 270              		.loc 3 31 5 is_stmt 1 view .LVU45
  31:user/user.cpp ****     uint8_t id = ptr[0];
 271              		.loc 3 31 13 is_stmt 0 view .LVU46
 272 0004 0346     		mov	r3, r0
 273 0006 13F8026B 		ldrb	r6, [r3], #2	@ zero_extendqisi2
 274              	.LVL16:
  32:user/user.cpp ****     setKp=*((float*) (ptr + 2));
 275              		.loc 3 32 5 is_stmt 1 view .LVU47
  32:user/user.cpp ****     setKp=*((float*) (ptr + 2));
 276              		.loc 3 32 10 is_stmt 0 view .LVU48
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 13


 277 000a 1A68     		ldr	r2, [r3]	@ float
 278 000c 3F4B     		ldr	r3, .L33
 279 000e 1A60     		str	r2, [r3]	@ float
  33:user/user.cpp ****     setKi=*((float*) (ptr + 7));
 280              		.loc 3 33 5 is_stmt 1 view .LVU49
  33:user/user.cpp ****     setKi=*((float*) (ptr + 7));
 281              		.loc 3 33 10 is_stmt 0 view .LVU50
 282 0010 C31D     		adds	r3, r0, #7
 283 0012 1A68     		ldr	r2, [r3]	@ float
 284 0014 3E4B     		ldr	r3, .L33+4
 285 0016 1A60     		str	r2, [r3]	@ float
  34:user/user.cpp ****     setKv=*((float*) (ptr + 12));
 286              		.loc 3 34 5 is_stmt 1 view .LVU51
  34:user/user.cpp ****     setKv=*((float*) (ptr + 12));
 287              		.loc 3 34 10 is_stmt 0 view .LVU52
 288 0018 C268     		ldr	r2, [r0, #12]	@ float
 289 001a 3E4B     		ldr	r3, .L33+8
 290 001c 1A60     		str	r2, [r3]	@ float
  35:user/user.cpp ****     setKd=*((float*) (ptr + 17));
 291              		.loc 3 35 5 is_stmt 1 view .LVU53
  35:user/user.cpp ****     setKd=*((float*) (ptr + 17));
 292              		.loc 3 35 10 is_stmt 0 view .LVU54
 293 001e 00F11103 		add	r3, r0, #17
 294 0022 1A68     		ldr	r2, [r3]	@ float
 295 0024 3C4B     		ldr	r3, .L33+12
 296 0026 1A60     		str	r2, [r3]	@ float
  36:user/user.cpp ****     setTq=*((float*) (ptr + 22));
 297              		.loc 3 36 5 is_stmt 1 view .LVU55
  36:user/user.cpp ****     setTq=*((float*) (ptr + 22));
 298              		.loc 3 36 10 is_stmt 0 view .LVU56
 299 0028 00F11603 		add	r3, r0, #22
 300 002c 1A68     		ldr	r2, [r3]	@ float
 301 002e 3B4B     		ldr	r3, .L33+16
 302 0030 1A60     		str	r2, [r3]	@ float
  38:user/user.cpp ****     setkp_flag = ptr[1];
 303              		.loc 3 38 5 is_stmt 1 view .LVU57
  38:user/user.cpp ****     setkp_flag = ptr[1];
 304              		.loc 3 38 16 is_stmt 0 view .LVU58
 305 0032 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 306 0034 3A4B     		ldr	r3, .L33+20
 307 0036 1A70     		strb	r2, [r3]
  39:user/user.cpp ****     setki_flag = ptr[6];
 308              		.loc 3 39 5 is_stmt 1 view .LVU59
  39:user/user.cpp ****     setki_flag = ptr[6];
 309              		.loc 3 39 16 is_stmt 0 view .LVU60
 310 0038 8279     		ldrb	r2, [r0, #6]	@ zero_extendqisi2
 311 003a 3A4B     		ldr	r3, .L33+24
 312 003c 1A70     		strb	r2, [r3]
  40:user/user.cpp ****     setkv_flag = ptr[11];
 313              		.loc 3 40 5 is_stmt 1 view .LVU61
  40:user/user.cpp ****     setkv_flag = ptr[11];
 314              		.loc 3 40 16 is_stmt 0 view .LVU62
 315 003e C27A     		ldrb	r2, [r0, #11]	@ zero_extendqisi2
 316 0040 394B     		ldr	r3, .L33+28
 317 0042 1A70     		strb	r2, [r3]
  41:user/user.cpp ****     setkd_flag = ptr[16];
 318              		.loc 3 41 5 is_stmt 1 view .LVU63
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 14


  41:user/user.cpp ****     setkd_flag = ptr[16];
 319              		.loc 3 41 16 is_stmt 0 view .LVU64
 320 0044 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 321 0046 394B     		ldr	r3, .L33+32
 322 0048 1A70     		strb	r2, [r3]
  42:user/user.cpp ****     settq_flag = ptr[21];
 323              		.loc 3 42 5 is_stmt 1 view .LVU65
  42:user/user.cpp ****     settq_flag = ptr[21];
 324              		.loc 3 42 16 is_stmt 0 view .LVU66
 325 004a 427D     		ldrb	r2, [r0, #21]	@ zero_extendqisi2
 326 004c 384B     		ldr	r3, .L33+36
 327 004e 1A70     		strb	r2, [r3]
  44:user/user.cpp ****     for(int i=0 ; i<32; i++)
 328              		.loc 3 44 5 is_stmt 1 view .LVU67
 329              	.LVL17:
 330              	.LBB14:
  44:user/user.cpp ****     for(int i=0 ; i<32; i++)
 331              		.loc 3 44 13 is_stmt 0 view .LVU68
 332 0050 0024     		movs	r4, #0
 333 0052 04E0     		b	.L20
 334              	.LVL18:
 335              	.L27:
  45:user/user.cpp ****         printf("%.2x ",ptr[i]);
 336              		.loc 3 45 9 is_stmt 1 discriminator 2 view .LVU69
  45:user/user.cpp ****         printf("%.2x ",ptr[i]);
 337              		.loc 3 45 15 is_stmt 0 discriminator 2 view .LVU70
 338 0054 295D     		ldrb	r1, [r5, r4]	@ zero_extendqisi2
 339 0056 3748     		ldr	r0, .L33+40
 340 0058 FFF7FEFF 		bl	printf
 341              	.LVL19:
  44:user/user.cpp ****     for(int i=0 ; i<32; i++)
 342              		.loc 3 44 5 is_stmt 1 discriminator 2 view .LVU71
 343 005c 0134     		adds	r4, r4, #1
 344              	.LVL20:
 345              	.L20:
  44:user/user.cpp ****     for(int i=0 ; i<32; i++)
 346              		.loc 3 44 20 discriminator 3 view .LVU72
 347 005e 1F2C     		cmp	r4, #31
 348 0060 F8DD     		ble	.L27
 349              	.LBE14:
  46:user/user.cpp ****     printf("\r\n");
 350              		.loc 3 46 5 view .LVU73
  46:user/user.cpp ****     printf("\r\n");
 351              		.loc 3 46 11 is_stmt 0 view .LVU74
 352 0062 3548     		ldr	r0, .L33+44
 353 0064 FFF7FEFF 		bl	puts
 354              	.LVL21:
  59:user/user.cpp ****     if(setkp_flag)
 355              		.loc 3 59 5 is_stmt 1 view .LVU75
  59:user/user.cpp ****     if(setkp_flag)
 356              		.loc 3 59 8 is_stmt 0 view .LVU76
 357 0068 2D4B     		ldr	r3, .L33+20
 358 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  59:user/user.cpp ****     if(setkp_flag)
 359              		.loc 3 59 5 view .LVU77
 360 006c 63B9     		cbnz	r3, .L28
 361              	.L21:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 15


  61:user/user.cpp ****     if(setki_flag)
 362              		.loc 3 61 5 is_stmt 1 view .LVU78
  61:user/user.cpp ****     if(setki_flag)
 363              		.loc 3 61 8 is_stmt 0 view .LVU79
 364 006e 2D4B     		ldr	r3, .L33+24
 365 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  61:user/user.cpp ****     if(setki_flag)
 366              		.loc 3 61 5 view .LVU80
 367 0072 B3B9     		cbnz	r3, .L29
 368              	.L22:
  63:user/user.cpp ****     if(setkv_flag)        
 369              		.loc 3 63 5 is_stmt 1 view .LVU81
  63:user/user.cpp ****     if(setkv_flag)        
 370              		.loc 3 63 8 is_stmt 0 view .LVU82
 371 0074 2C4B     		ldr	r3, .L33+28
 372 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  63:user/user.cpp ****     if(setkv_flag)        
 373              		.loc 3 63 5 view .LVU83
 374 0078 03BB     		cbnz	r3, .L30
 375              	.L23:
  65:user/user.cpp ****     if(setkd_flag)
 376              		.loc 3 65 5 is_stmt 1 view .LVU84
  65:user/user.cpp ****     if(setkd_flag)
 377              		.loc 3 65 8 is_stmt 0 view .LVU85
 378 007a 2C4B     		ldr	r3, .L33+32
 379 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  65:user/user.cpp ****     if(setkd_flag)
 380              		.loc 3 65 5 view .LVU86
 381 007e 53BB     		cbnz	r3, .L31
 382              	.L24:
  67:user/user.cpp ****     if(settq_flag)
 383              		.loc 3 67 5 is_stmt 1 view .LVU87
  67:user/user.cpp ****     if(settq_flag)
 384              		.loc 3 67 8 is_stmt 0 view .LVU88
 385 0080 2B4B     		ldr	r3, .L33+36
 386 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  67:user/user.cpp ****     if(settq_flag)
 387              		.loc 3 67 5 view .LVU89
 388 0084 A3BB     		cbnz	r3, .L32
 389              	.LVL22:
 390              	.L18:
  77:user/user.cpp **** }
 391              		.loc 3 77 1 view .LVU90
 392 0086 70BD     		pop	{r4, r5, r6, pc}
 393              	.LVL23:
 394              	.L28:
  60:user/user.cpp ****         electron.SetJointKp(electron.joint[id/2], setKp);
 395              		.loc 3 60 9 is_stmt 1 view .LVU91
  60:user/user.cpp ****         electron.SetJointKp(electron.joint[id/2], setKp);
 396              		.loc 3 60 46 is_stmt 0 view .LVU92
 397 0088 7308     		lsrs	r3, r6, #1
  60:user/user.cpp ****         electron.SetJointKp(electron.joint[id/2], setKp);
 398              		.loc 3 60 48 view .LVU93
 399 008a 2C48     		ldr	r0, .L33+48
 400 008c C3EBC303 		rsb	r3, r3, r3, lsl #3
 401 0090 00EB8301 		add	r1, r0, r3, lsl #2
  60:user/user.cpp ****         electron.SetJointKp(electron.joint[id/2], setKp);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 16


 402              		.loc 3 60 28 view .LVU94
 403 0094 1D4B     		ldr	r3, .L33
 404 0096 93ED000A 		vldr.32	s0, [r3]
 405 009a 0431     		adds	r1, r1, #4
 406 009c FFF7FEFF 		bl	_ZN5Robot10SetJointKpERNS_13JointStatus_tEf
 407              	.LVL24:
 408 00a0 E5E7     		b	.L21
 409              	.L29:
  62:user/user.cpp ****         electron.SetJointKi(electron.joint[id/2], setKi);
 410              		.loc 3 62 9 is_stmt 1 view .LVU95
  62:user/user.cpp ****         electron.SetJointKi(electron.joint[id/2], setKi);
 411              		.loc 3 62 46 is_stmt 0 view .LVU96
 412 00a2 7308     		lsrs	r3, r6, #1
  62:user/user.cpp ****         electron.SetJointKi(electron.joint[id/2], setKi);
 413              		.loc 3 62 48 view .LVU97
 414 00a4 2548     		ldr	r0, .L33+48
 415 00a6 C3EBC303 		rsb	r3, r3, r3, lsl #3
 416 00aa 00EB8301 		add	r1, r0, r3, lsl #2
  62:user/user.cpp ****         electron.SetJointKi(electron.joint[id/2], setKi);
 417              		.loc 3 62 28 view .LVU98
 418 00ae 184B     		ldr	r3, .L33+4
 419 00b0 93ED000A 		vldr.32	s0, [r3]
 420 00b4 0431     		adds	r1, r1, #4
 421 00b6 FFF7FEFF 		bl	_ZN5Robot10SetJointKiERNS_13JointStatus_tEf
 422              	.LVL25:
 423 00ba DBE7     		b	.L22
 424              	.L30:
  64:user/user.cpp ****         electron.SetJointKv(electron.joint[id/2], setKv);
 425              		.loc 3 64 9 is_stmt 1 view .LVU99
  64:user/user.cpp ****         electron.SetJointKv(electron.joint[id/2], setKv);
 426              		.loc 3 64 46 is_stmt 0 view .LVU100
 427 00bc 7308     		lsrs	r3, r6, #1
  64:user/user.cpp ****         electron.SetJointKv(electron.joint[id/2], setKv);
 428              		.loc 3 64 48 view .LVU101
 429 00be 1F48     		ldr	r0, .L33+48
 430 00c0 C3EBC303 		rsb	r3, r3, r3, lsl #3
 431 00c4 00EB8301 		add	r1, r0, r3, lsl #2
  64:user/user.cpp ****         electron.SetJointKv(electron.joint[id/2], setKv);
 432              		.loc 3 64 28 view .LVU102
 433 00c8 124B     		ldr	r3, .L33+8
 434 00ca 93ED000A 		vldr.32	s0, [r3]
 435 00ce 0431     		adds	r1, r1, #4
 436 00d0 FFF7FEFF 		bl	_ZN5Robot10SetJointKvERNS_13JointStatus_tEf
 437              	.LVL26:
 438 00d4 D1E7     		b	.L23
 439              	.L31:
  66:user/user.cpp ****         electron.SetJointKd(electron.joint[id/2], setKd);
 440              		.loc 3 66 9 is_stmt 1 view .LVU103
  66:user/user.cpp ****         electron.SetJointKd(electron.joint[id/2], setKd);
 441              		.loc 3 66 46 is_stmt 0 view .LVU104
 442 00d6 7308     		lsrs	r3, r6, #1
  66:user/user.cpp ****         electron.SetJointKd(electron.joint[id/2], setKd);
 443              		.loc 3 66 48 view .LVU105
 444 00d8 1848     		ldr	r0, .L33+48
 445 00da C3EBC303 		rsb	r3, r3, r3, lsl #3
 446 00de 00EB8301 		add	r1, r0, r3, lsl #2
  66:user/user.cpp ****         electron.SetJointKd(electron.joint[id/2], setKd);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 17


 447              		.loc 3 66 28 view .LVU106
 448 00e2 0D4B     		ldr	r3, .L33+12
 449 00e4 93ED000A 		vldr.32	s0, [r3]
 450 00e8 0431     		adds	r1, r1, #4
 451 00ea FFF7FEFF 		bl	_ZN5Robot10SetJointKdERNS_13JointStatus_tEf
 452              	.LVL27:
 453 00ee C7E7     		b	.L24
 454              	.L32:
  68:user/user.cpp ****         electron.SetJointTorqueLimit(electron.joint[id/2], setTq);
 455              		.loc 3 68 9 is_stmt 1 view .LVU107
  68:user/user.cpp ****         electron.SetJointTorqueLimit(electron.joint[id/2], setTq);
 456              		.loc 3 68 55 is_stmt 0 view .LVU108
 457 00f0 7608     		lsrs	r6, r6, #1
 458              	.LVL28:
  68:user/user.cpp ****         electron.SetJointTorqueLimit(electron.joint[id/2], setTq);
 459              		.loc 3 68 57 view .LVU109
 460 00f2 1248     		ldr	r0, .L33+48
 461 00f4 C6EBC606 		rsb	r6, r6, r6, lsl #3
 462 00f8 00EB8601 		add	r1, r0, r6, lsl #2
  68:user/user.cpp ****         electron.SetJointTorqueLimit(electron.joint[id/2], setTq);
 463              		.loc 3 68 37 view .LVU110
 464 00fc 074B     		ldr	r3, .L33+16
 465 00fe 93ED000A 		vldr.32	s0, [r3]
 466 0102 0431     		adds	r1, r1, #4
 467 0104 FFF7FEFF 		bl	_ZN5Robot19SetJointTorqueLimitERNS_13JointStatus_tEf
 468              	.LVL29:
  77:user/user.cpp **** }
 469              		.loc 3 77 1 view .LVU111
 470 0108 BDE7     		b	.L18
 471              	.L34:
 472 010a 00BF     		.align	2
 473              	.L33:
 474 010c 00000000 		.word	.LANCHOR2
 475 0110 00000000 		.word	.LANCHOR3
 476 0114 00000000 		.word	.LANCHOR4
 477 0118 00000000 		.word	.LANCHOR5
 478 011c 00000000 		.word	.LANCHOR6
 479 0120 00000000 		.word	.LANCHOR7
 480 0124 00000000 		.word	.LANCHOR8
 481 0128 00000000 		.word	.LANCHOR9
 482 012c 00000000 		.word	.LANCHOR10
 483 0130 00000000 		.word	.LANCHOR11
 484 0134 00000000 		.word	.LC7
 485 0138 08000000 		.word	.LC8
 486 013c 00000000 		.word	.LANCHOR1
 487              		.cfi_endproc
 488              	.LFE371:
 489              		.fnend
 491              		.section	.text.setAngle,"ax",%progbits
 492              		.align	1
 493              		.global	setAngle
 494              		.syntax unified
 495              		.thumb
 496              		.thumb_func
 498              	setAngle:
 499              		.fnstart
 500              	.LVL30:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 18


 501              	.LFB372:
  79:user/user.cpp **** {
 502              		.loc 3 79 1 is_stmt 1 view -0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
  79:user/user.cpp **** {
 506              		.loc 3 79 1 is_stmt 0 view .LVU113
 507 0000 70B5     		push	{r4, r5, r6, lr}
 508              		.save {r4, r5, r6, lr}
 509              	.LCFI3:
 510              		.cfi_def_cfa_offset 16
 511              		.cfi_offset 4, -16
 512              		.cfi_offset 5, -12
 513              		.cfi_offset 6, -8
 514              		.cfi_offset 14, -4
  80:user/user.cpp ****     uint8_t id = ptr[0];
 515              		.loc 3 80 5 is_stmt 1 view .LVU114
  80:user/user.cpp ****     uint8_t id = ptr[0];
 516              		.loc 3 80 13 is_stmt 0 view .LVU115
 517 0002 0346     		mov	r3, r0
 518 0004 13F8011B 		ldrb	r1, [r3], #1	@ zero_extendqisi2
 519              	.LVL31:
  82:user/user.cpp ****     jointSetPoints[id/2] = *((float*) (ptr + 1));
 520              		.loc 3 82 5 is_stmt 1 view .LVU116
  82:user/user.cpp ****     jointSetPoints[id/2] = *((float*) (ptr + 1));
 521              		.loc 3 82 22 is_stmt 0 view .LVU117
 522 0008 4908     		lsrs	r1, r1, #1
 523              	.LVL32:
  82:user/user.cpp ****     jointSetPoints[id/2] = *((float*) (ptr + 1));
 524              		.loc 3 82 26 view .LVU118
 525 000a 93ED000A 		vldr.32	s0, [r3]
 526 000e 0D4B     		ldr	r3, .L37
 527 0010 03EB8103 		add	r3, r3, r1, lsl #2
 528 0014 83ED000A 		vstr.32	s0, [r3]
 529              	.LVL33:
  83:user/user.cpp ****     isEnabled = ptr[5];
 530              		.loc 3 83 5 is_stmt 1 view .LVU119
  83:user/user.cpp ****     isEnabled = ptr[5];
 531              		.loc 3 83 22 is_stmt 0 view .LVU120
 532 0018 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 533 001a 003B     		subs	r3, r3, #0
 534 001c 18BF     		it	ne
 535 001e 0123     		movne	r3, #1
  83:user/user.cpp ****     isEnabled = ptr[5];
 536              		.loc 3 83 15 view .LVU121
 537 0020 094E     		ldr	r6, .L37+4
 538 0022 3370     		strb	r3, [r6]
 100:user/user.cpp ****     electron.UpdateJointAngle(electron.joint[id/2], jointSetPoints[id/2]);
 539              		.loc 3 100 5 is_stmt 1 view .LVU122
 100:user/user.cpp ****     electron.UpdateJointAngle(electron.joint[id/2], jointSetPoints[id/2]);
 540              		.loc 3 100 50 is_stmt 0 view .LVU123
 541 0024 094D     		ldr	r5, .L37+8
 542 0026 C1EBC101 		rsb	r1, r1, r1, lsl #3
 543 002a 05EB8104 		add	r4, r5, r1, lsl #2
 544 002e 0434     		adds	r4, r4, #4
 100:user/user.cpp ****     electron.UpdateJointAngle(electron.joint[id/2], jointSetPoints[id/2]);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 19


 545              		.loc 3 100 30 view .LVU124
 546 0030 2146     		mov	r1, r4
 547 0032 2846     		mov	r0, r5
 548              	.LVL34:
 100:user/user.cpp ****     electron.UpdateJointAngle(electron.joint[id/2], jointSetPoints[id/2]);
 549              		.loc 3 100 30 view .LVU125
 550 0034 FFF7FEFF 		bl	_ZN5Robot16UpdateJointAngleERNS_13JointStatus_tEf
 551              	.LVL35:
 101:user/user.cpp ****     electron.SetJointEnable(electron.joint[id/2], isEnabled);
 552              		.loc 3 101 5 is_stmt 1 view .LVU126
 101:user/user.cpp ****     electron.SetJointEnable(electron.joint[id/2], isEnabled);
 553              		.loc 3 101 28 is_stmt 0 view .LVU127
 554 0038 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 555 003a 2146     		mov	r1, r4
 556 003c 2846     		mov	r0, r5
 557 003e FFF7FEFF 		bl	_ZN5Robot14SetJointEnableERNS_13JointStatus_tEb
 558              	.LVL36:
 102:user/user.cpp **** }
 559              		.loc 3 102 1 view .LVU128
 560 0042 70BD     		pop	{r4, r5, r6, pc}
 561              	.L38:
 562              		.align	2
 563              	.L37:
 564 0044 00000000 		.word	.LANCHOR12
 565 0048 00000000 		.word	.LANCHOR13
 566 004c 00000000 		.word	.LANCHOR1
 567              		.cfi_endproc
 568              	.LFE372:
 569              		.fnend
 571              		.section	.rodata.Main.str1.4,"aMS",%progbits,1
 572              		.align	2
 573              	.LC9:
 574 0000 7461736B 		.ascii	"task\015\000"
 574      0D00
 575              		.section	.text.Main,"ax",%progbits
 576              		.align	1
 577              		.global	Main
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 582              	Main:
 583              		.fnstart
 584              	.LFB373:
 105:user/user.cpp **** {
 585              		.loc 3 105 1 is_stmt 1 view -0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589 0000 10B5     		push	{r4, lr}
 590              		.save {r4, lr}
 591              	.LCFI4:
 592              		.cfi_def_cfa_offset 8
 593              		.cfi_offset 4, -8
 594              		.cfi_offset 14, -4
 595              		.pad #8
 596 0002 82B0     		sub	sp, sp, #8
 597              	.LCFI5:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 20


 598              		.cfi_def_cfa_offset 16
 106:user/user.cpp ****     int i;
 599              		.loc 3 106 5 view .LVU130
 107:user/user.cpp ****     HAL_Delay(1000);
 600              		.loc 3 107 5 view .LVU131
 107:user/user.cpp ****     HAL_Delay(1000);
 601              		.loc 3 107 14 is_stmt 0 view .LVU132
 602 0004 4FF47A70 		mov	r0, #1000
 603 0008 FFF7FEFF 		bl	HAL_Delay
 604              	.LVL37:
 108:user/user.cpp ****     electron.lcd->Init(Screen::DEGREE_0);
 605              		.loc 3 108 5 is_stmt 1 view .LVU133
 108:user/user.cpp ****     electron.lcd->Init(Screen::DEGREE_0);
 606              		.loc 3 108 14 is_stmt 0 view .LVU134
 607 000c 164C     		ldr	r4, .L48
 108:user/user.cpp ****     electron.lcd->Init(Screen::DEGREE_0);
 608              		.loc 3 108 23 view .LVU135
 609 000e 0021     		movs	r1, #0
 610 0010 D4F8C800 		ldr	r0, [r4, #200]
 611 0014 FFF7FEFF 		bl	_ZN6Screen4InitENS_13Orientation_tE
 612              	.LVL38:
 109:user/user.cpp ****     electron.lcd->SetWindow(0, 239, 0, 239);
 613              		.loc 3 109 5 is_stmt 1 view .LVU136
 109:user/user.cpp ****     electron.lcd->SetWindow(0, 239, 0, 239);
 614              		.loc 3 109 28 is_stmt 0 view .LVU137
 615 0018 EF22     		movs	r2, #239
 616 001a 0092     		str	r2, [sp]
 617 001c 0023     		movs	r3, #0
 618 001e 1946     		mov	r1, r3
 619 0020 D4F8C800 		ldr	r0, [r4, #200]
 620 0024 FFF7FEFF 		bl	_ZN6Screen9SetWindowEtttt
 621              	.LVL39:
 110:user/user.cpp ****     for(int i=0;i<32;i++)
 622              		.loc 3 110 5 is_stmt 1 view .LVU138
 623              	.LBB15:
 110:user/user.cpp ****     for(int i=0;i<32;i++)
 624              		.loc 3 110 13 is_stmt 0 view .LVU139
 625 0028 0023     		movs	r3, #0
 626              	.LVL40:
 627              	.L41:
 110:user/user.cpp ****     for(int i=0;i<32;i++)
 628              		.loc 3 110 18 is_stmt 1 discriminator 3 view .LVU140
 629 002a 1F2B     		cmp	r3, #31
 630 002c 08DC     		bgt	.L40
 111:user/user.cpp ****         electron.pUsbBuffer->extraDataTx[i]=32-i;
 631              		.loc 3 111 9 discriminator 2 view .LVU141
 111:user/user.cpp ****         electron.pUsbBuffer->extraDataTx[i]=32-i;
 632              		.loc 3 111 18 is_stmt 0 discriminator 2 view .LVU142
 633 002e 0E4A     		ldr	r2, .L48
 634 0030 1268     		ldr	r2, [r2]
 111:user/user.cpp ****         electron.pUsbBuffer->extraDataTx[i]=32-i;
 635              		.loc 3 111 47 discriminator 2 view .LVU143
 636 0032 C3F12001 		rsb	r1, r3, #32
 111:user/user.cpp ****         electron.pUsbBuffer->extraDataTx[i]=32-i;
 637              		.loc 3 111 44 discriminator 2 view .LVU144
 638 0036 D154     		strb	r1, [r2, r3]
 110:user/user.cpp ****     for(int i=0;i<32;i++)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 21


 639              		.loc 3 110 5 is_stmt 1 discriminator 2 view .LVU145
 640 0038 0133     		adds	r3, r3, #1
 641              	.LVL41:
 110:user/user.cpp ****     for(int i=0;i<32;i++)
 642              		.loc 3 110 5 is_stmt 0 discriminator 2 view .LVU146
 643 003a F6E7     		b	.L41
 644              	.LVL42:
 645              	.L46:
 110:user/user.cpp ****     for(int i=0;i<32;i++)
 646              		.loc 3 110 5 discriminator 2 view .LVU147
 647              	.LBE15:
 648              	.LBB16:
 123:user/user.cpp ****             setPara(ptr);
 649              		.loc 3 123 13 is_stmt 1 view .LVU148
 123:user/user.cpp ****             setPara(ptr);
 650              		.loc 3 123 20 is_stmt 0 view .LVU149
 651 003c FFF7FEFF 		bl	setPara
 652              	.LVL43:
 653              	.L40:
 123:user/user.cpp ****             setPara(ptr);
 654              		.loc 3 123 20 view .LVU150
 655              	.LBE16:
 114:user/user.cpp ****     while(1)
 656              		.loc 3 114 5 is_stmt 1 view .LVU151
 657              	.LBB17:
 118:user/user.cpp ****         electron.ReceiveUsbPacketUntilSizeIs(224); // last packet is 224bytes
 658              		.loc 3 118 9 view .LVU152
 118:user/user.cpp ****         electron.ReceiveUsbPacketUntilSizeIs(224); // last packet is 224bytes
 659              		.loc 3 118 45 is_stmt 0 view .LVU153
 660 0040 094C     		ldr	r4, .L48
 661 0042 E021     		movs	r1, #224
 662 0044 2046     		mov	r0, r4
 663 0046 FFF7FEFF 		bl	_ZN5Robot27ReceiveUsbPacketUntilSizeIsEm
 664              	.LVL44:
 119:user/user.cpp ****         uint8_t* ptr = electron.GetExtraDataRxPtr();
 665              		.loc 3 119 9 is_stmt 1 view .LVU154
 119:user/user.cpp ****         uint8_t* ptr = electron.GetExtraDataRxPtr();
 666              		.loc 3 119 50 is_stmt 0 view .LVU155
 667 004a 2046     		mov	r0, r4
 668 004c FFF7FEFF 		bl	_ZN5Robot17GetExtraDataRxPtrEv
 669              	.LVL45:
 121:user/user.cpp ****         if(ptr[31] == 0xee)  //设置参数
 670              		.loc 3 121 9 is_stmt 1 view .LVU156
 121:user/user.cpp ****         if(ptr[31] == 0xee)  //设置参数
 671              		.loc 3 121 18 is_stmt 0 view .LVU157
 672 0050 C37F     		ldrb	r3, [r0, #31]	@ zero_extendqisi2
 121:user/user.cpp ****         if(ptr[31] == 0xee)  //设置参数
 673              		.loc 3 121 9 view .LVU158
 674 0052 EE2B     		cmp	r3, #238
 675 0054 F2D0     		beq	.L46
 125:user/user.cpp ****         else if(ptr[31] == 0xef)
 676              		.loc 3 125 14 is_stmt 1 view .LVU159
 677 0056 EF2B     		cmp	r3, #239
 678 0058 03D0     		beq	.L47
 132:user/user.cpp ****             printf("task\r\n");
 679              		.loc 3 132 13 view .LVU160
 132:user/user.cpp ****             printf("task\r\n");
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 22


 680              		.loc 3 132 19 is_stmt 0 view .LVU161
 681 005a 0448     		ldr	r0, .L48+4
 682              	.LVL46:
 132:user/user.cpp ****             printf("task\r\n");
 683              		.loc 3 132 19 view .LVU162
 684 005c FFF7FEFF 		bl	puts
 685              	.LVL47:
 686 0060 EEE7     		b	.L40
 687              	.LVL48:
 688              	.L47:
 127:user/user.cpp ****             setAngle(ptr);
 689              		.loc 3 127 13 is_stmt 1 view .LVU163
 127:user/user.cpp ****             setAngle(ptr);
 690              		.loc 3 127 21 is_stmt 0 view .LVU164
 691 0062 FFF7FEFF 		bl	setAngle
 692              	.LVL49:
 127:user/user.cpp ****             setAngle(ptr);
 693              		.loc 3 127 21 view .LVU165
 694 0066 EBE7     		b	.L40
 695              	.L49:
 696              		.align	2
 697              	.L48:
 698 0068 00000000 		.word	.LANCHOR1
 699 006c 00000000 		.word	.LC9
 700              	.LBE17:
 701              		.cfi_endproc
 702              	.LFE373:
 703              		.fnend
 705              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 706              		.align	1
 707              		.global	HAL_SPI_TxCpltCallback
 708              		.syntax unified
 709              		.thumb
 710              		.thumb_func
 712              	HAL_SPI_TxCpltCallback:
 713              		.fnstart
 714              	.LVL50:
 715              	.LFB374:
 220:user/user.cpp **** {
 716              		.loc 3 220 1 is_stmt 1 view -0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 221:user/user.cpp ****     electron.lcd->isBusy = false;
 721              		.loc 3 221 5 view .LVU167
 221:user/user.cpp ****     electron.lcd->isBusy = false;
 722              		.loc 3 221 14 is_stmt 0 view .LVU168
 723 0000 024B     		ldr	r3, .L51
 724 0002 D3F8C830 		ldr	r3, [r3, #200]
 221:user/user.cpp ****     electron.lcd->isBusy = false;
 725              		.loc 3 221 26 view .LVU169
 726 0006 0022     		movs	r2, #0
 727 0008 1A70     		strb	r2, [r3]
 728              		.loc 3 222 1 view .LVU170
 729 000a 7047     		bx	lr
 730              	.L52:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 23


 731              		.align	2
 732              	.L51:
 733 000c 00000000 		.word	.LANCHOR1
 734              		.cfi_endproc
 735              	.LFE374:
 736              		.cantunwind
 737              		.fnend
 739              		.section	.text._GLOBAL__sub_I_electron,"ax",%progbits
 740              		.align	1
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 745              	_GLOBAL__sub_I_electron:
 746              		.fnstart
 747              	.LFB376:
 748              		.loc 3 222 1 is_stmt 1 view -0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752 0000 08B5     		push	{r3, lr}
 753              	.LCFI6:
 754              		.cfi_def_cfa_offset 8
 755              		.cfi_offset 3, -8
 756              		.cfi_offset 14, -4
 757              		.loc 3 222 1 is_stmt 0 view .LVU172
 758 0002 4FF6FF71 		movw	r1, #65535
 759 0006 0120     		movs	r0, #1
 760 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 761              	.LVL51:
 762 000c 08BD     		pop	{r3, pc}
 763              		.cfi_endproc
 764              	.LFE376:
 765              		.cantunwind
 766              		.fnend
 768              		.section	.init_array,"aw",%init_array
 769              		.align	2
 770 0000 00000000 		.word	_GLOBAL__sub_I_electron(target1)
 771              		.global	settq_flag
 772              		.global	setkd_flag
 773              		.global	setkv_flag
 774              		.global	setki_flag
 775              		.global	setkp_flag
 776              		.global	setTq
 777              		.global	setKd
 778              		.global	setKv
 779              		.global	setKi
 780              		.global	setKp
 781              		.global	isEnabled
 782              		.global	jointSetPoints
 783              		.global	electron
 784              		.section	.rodata
 785              		.align	2
 786              		.set	.LANCHOR0,. + 0
 787              	.LC0:
 788 0000 00       		.byte	0
 789 0001 000000   		.space	3
 790 0004 000034C3 		.word	-1020002304
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 24


 791 0008 00003443 		.word	1127481344
 792 000c 0000B442 		.word	1119092736
 793 0010 00000000 		.word	0
 794 0014 00000000 		.word	0
 795 0018 00       		.byte	0
 796 0019 000000   		.space	3
 797              	.LC1:
 798 001c 02       		.byte	2
 799 001d 000000   		.space	3
 800 0020 00008C42 		.word	1116471296
 801 0024 0000BE42 		.word	1119748096
 802 0028 00000000 		.word	0
 803 002c 000070C1 		.word	-1049624576
 804 0030 00007041 		.word	1097859072
 805 0034 01       		.byte	1
 806 0035 000000   		.space	3
 807              	.LC2:
 808 0038 04       		.byte	4
 809 0039 000000   		.space	3
 810 003c 000010C1 		.word	-1055916032
 811 0040 00004040 		.word	1077936128
 812 0044 00000000 		.word	0
 813 0048 00000000 		.word	0
 814 004c 0000F041 		.word	1106247680
 815 0050 00       		.byte	0
 816 0051 000000   		.space	3
 817              	.LC3:
 818 0054 06       		.byte	6
 819 0055 000000   		.space	3
 820 0058 000080C1 		.word	-1048576000
 821 005c 0000EA42 		.word	1122631680
 822 0060 00000000 		.word	0
 823 0064 0000A0C1 		.word	-1046478848
 824 0068 00003443 		.word	1127481344
 825 006c 00       		.byte	0
 826 006d 000000   		.space	3
 827              	.LC4:
 828 0070 08       		.byte	8
 829 0071 000000   		.space	3
 830 0074 00000543 		.word	1124401152
 831 0078 00000D43 		.word	1124925440
 832 007c 00000000 		.word	0
 833 0080 00000000 		.word	0
 834 0084 0000F041 		.word	1106247680
 835 0088 01       		.byte	1
 836 0089 000000   		.space	3
 837              	.LC5:
 838 008c 0A       		.byte	10
 839 008d 000000   		.space	3
 840 0090 00007041 		.word	1097859072
 841 0094 00001643 		.word	1125515264
 842 0098 00000000 		.word	0
 843 009c 0000A0C1 		.word	-1046478848
 844 00a0 00003443 		.word	1127481344
 845 00a4 01       		.byte	1
 846 00a5 000000   		.space	3
 847              	.LC6:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 25


 848 00a8 0C       		.byte	12
 849 00a9 000000   		.space	3
 850 00ac 00000000 		.word	0
 851 00b0 00003443 		.word	1127481344
 852 00b4 00000000 		.word	0
 853 00b8 0000B4C2 		.word	-1028390912
 854 00bc 0000B442 		.word	1119092736
 855 00c0 00       		.byte	0
 856 00c1 000000   		.space	3
 857              		.section	.bss.electron,"aw",%nobits
 858              		.align	2
 859              		.set	.LANCHOR1,. + 0
 862              	electron:
 863 0000 00000000 		.space	260
 863      00000000 
 863      00000000 
 863      00000000 
 863      00000000 
 864              		.section	.bss.isEnabled,"aw",%nobits
 865              		.set	.LANCHOR13,. + 0
 868              	isEnabled:
 869 0000 00       		.space	1
 870              		.section	.bss.jointSetPoints,"aw",%nobits
 871              		.align	2
 872              		.set	.LANCHOR12,. + 0
 875              	jointSetPoints:
 876 0000 00000000 		.space	24
 876      00000000 
 876      00000000 
 876      00000000 
 876      00000000 
 877              		.section	.bss.setKd,"aw",%nobits
 878              		.align	2
 879              		.set	.LANCHOR5,. + 0
 882              	setKd:
 883 0000 00000000 		.space	4
 884              		.section	.bss.setKi,"aw",%nobits
 885              		.align	2
 886              		.set	.LANCHOR3,. + 0
 889              	setKi:
 890 0000 00000000 		.space	4
 891              		.section	.bss.setKp,"aw",%nobits
 892              		.align	2
 893              		.set	.LANCHOR2,. + 0
 896              	setKp:
 897 0000 00000000 		.space	4
 898              		.section	.bss.setKv,"aw",%nobits
 899              		.align	2
 900              		.set	.LANCHOR4,. + 0
 903              	setKv:
 904 0000 00000000 		.space	4
 905              		.section	.bss.setTq,"aw",%nobits
 906              		.align	2
 907              		.set	.LANCHOR6,. + 0
 910              	setTq:
 911 0000 00000000 		.space	4
 912              		.section	.bss.setkd_flag,"aw",%nobits
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 26


 913              		.set	.LANCHOR10,. + 0
 916              	setkd_flag:
 917 0000 00       		.space	1
 918              		.section	.bss.setki_flag,"aw",%nobits
 919              		.set	.LANCHOR8,. + 0
 922              	setki_flag:
 923 0000 00       		.space	1
 924              		.section	.bss.setkp_flag,"aw",%nobits
 925              		.set	.LANCHOR7,. + 0
 928              	setkp_flag:
 929 0000 00       		.space	1
 930              		.section	.bss.setkv_flag,"aw",%nobits
 931              		.set	.LANCHOR9,. + 0
 934              	setkv_flag:
 935 0000 00       		.space	1
 936              		.section	.bss.settq_flag,"aw",%nobits
 937              		.set	.LANCHOR11,. + 0
 940              	settq_flag:
 941 0000 00       		.space	1
 942              		.text
 943              	.Letext0:
 944              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 945              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 946              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 947              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 948              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 949              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\lib\\gcc\\arm-none-eabi\
 950              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 951              		.file 11 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 952              		.file 12 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 953              		.file 13 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 954              		.file 14 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 955              		.file 15 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 956              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 957              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 958              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 959              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 960              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 961              		.file 21 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 962              		.file 22 "user/common_inc.h"
 963              		.file 23 "Inc/spi.h"
 964              		.file 24 "Inc/i2c.h"
 965              		.file 25 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 966              		.file 26 "<built-in>"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 27


DEFINED SYMBOLS
                            *ABS*:00000000 user.cpp
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:20     .text._ZN5RobotC2EP19__SPI_HandleTypeDefP17I2C_HandleTypeDef:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:26     .text._ZN5RobotC2EP19__SPI_HandleTypeDefP17I2C_HandleTypeDef:00000000 _ZN5RobotC2EP19__SPI_HandleTypeDefP17I2C_HandleTypeDef
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:171    .text._ZN5RobotC2EP19__SPI_HandleTypeDefP17I2C_HandleTypeDef:000000f0 $d
.ARM.exidx.text._ZN5RobotC2EP19__SPI_HandleTypeDefP17I2C_HandleTypeDef:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:26     .text._ZN5RobotC2EP19__SPI_HandleTypeDefP17I2C_HandleTypeDef:00000000 _ZN5RobotC1EP19__SPI_HandleTypeDefP17I2C_HandleTypeDef
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:180    .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:185    .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:230    .text._Z41__static_initialization_and_destruction_0ii:00000020 $d
.ARM.exidx.text._Z41__static_initialization_and_destruction_0ii:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:239    .rodata.setPara.str1.4:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:246    .text.setPara:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:252    .text.setPara:00000000 setPara
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:474    .text.setPara:0000010c $d
          .ARM.exidx.text.setPara:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:492    .text.setAngle:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:498    .text.setAngle:00000000 setAngle
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:564    .text.setAngle:00000044 $d
         .ARM.exidx.text.setAngle:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:572    .rodata.Main.str1.4:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:576    .text.Main:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:582    .text.Main:00000000 Main
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:698    .text.Main:00000068 $d
             .ARM.exidx.text.Main:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:706    .text.HAL_SPI_TxCpltCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:712    .text.HAL_SPI_TxCpltCallback:00000000 HAL_SPI_TxCpltCallback
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:733    .text.HAL_SPI_TxCpltCallback:0000000c $d
.ARM.exidx.text.HAL_SPI_TxCpltCallback:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:740    .text._GLOBAL__sub_I_electron:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:745    .text._GLOBAL__sub_I_electron:00000000 _GLOBAL__sub_I_electron
.ARM.exidx.text._GLOBAL__sub_I_electron:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:769    .init_array:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:940    .bss.settq_flag:00000000 settq_flag
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:916    .bss.setkd_flag:00000000 setkd_flag
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:934    .bss.setkv_flag:00000000 setkv_flag
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:922    .bss.setki_flag:00000000 setki_flag
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:928    .bss.setkp_flag:00000000 setkp_flag
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:910    .bss.setTq:00000000 setTq
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:882    .bss.setKd:00000000 setKd
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:903    .bss.setKv:00000000 setKv
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:889    .bss.setKi:00000000 setKi
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:896    .bss.setKp:00000000 setKp
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:868    .bss.isEnabled:00000000 isEnabled
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:875    .bss.jointSetPoints:00000000 jointSetPoints
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:862    .bss.electron:00000000 electron
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:785    .rodata:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:858    .bss.electron:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:869    .bss.isEnabled:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:871    .bss.jointSetPoints:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:878    .bss.setKd:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:885    .bss.setKi:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:892    .bss.setKp:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:899    .bss.setKv:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:906    .bss.setTq:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:917    .bss.setkd_flag:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:923    .bss.setki_flag:00000000 $d
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s 			page 28


C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:929    .bss.setkp_flag:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:935    .bss.setkv_flag:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccgpREX9.s:941    .bss.settq_flag:00000000 $d
                           .group:00000000 _ZN5RobotC5EP19__SPI_HandleTypeDefP17I2C_HandleTypeDef

UNDEFINED SYMBOLS
_Znwj
usbBuffer
__aeabi_unwind_cpp_pr0
hi2c1
hspi1
printf
puts
_ZN5Robot10SetJointKpERNS_13JointStatus_tEf
_ZN5Robot10SetJointKiERNS_13JointStatus_tEf
_ZN5Robot10SetJointKvERNS_13JointStatus_tEf
_ZN5Robot10SetJointKdERNS_13JointStatus_tEf
_ZN5Robot19SetJointTorqueLimitERNS_13JointStatus_tEf
_ZN5Robot16UpdateJointAngleERNS_13JointStatus_tEf
_ZN5Robot14SetJointEnableERNS_13JointStatus_tEb
HAL_Delay
_ZN6Screen4InitENS_13Orientation_tE
_ZN6Screen9SetWindowEtttt
_ZN5Robot27ReceiveUsbPacketUntilSizeIsEm
_ZN5Robot17GetExtraDataRxPtrEv
